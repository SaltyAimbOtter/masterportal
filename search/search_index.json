{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Welcome to MkDocs","text":"<p>For full documentation visit mkdocs.org.</p>"},{"location":"#commands","title":"Commands","text":"<ul> <li><code>mkdocs new [dir-name]</code> - Create a new project.</li> <li><code>mkdocs serve</code> - Start the live-reloading docs server.</li> <li><code>mkdocs build</code> - Build the documentation site.</li> <li><code>mkdocs -h</code> - Print help message and exit.</li> </ul>"},{"location":"#project-layout","title":"Project layout","text":"<pre><code>mkdocs.yml    # The configuration file.\ndocs/\n    index.md  # The documentation homepage.\n    ...       # Other markdown pages, images and other files.\n</code></pre>"},{"location":"Developer/About/","title":"About","text":"<p>This section of the documentation contains all the information for developers that want to customize, extend or contribute to the Masterportal software.</p> <ul> <li>Set up local development environment</li> </ul> <p>The following code conventions are to be adhered to:</p> <ul> <li>Code conventions</li> </ul> <p>To contribute to the project, please follow this workflow and the \"Definition of Done\":</p> <ul> <li>Git workflow</li> </ul> <p>About writing unit and end-to-end tests:</p> <ul> <li>Test documentation</li> </ul> <p>To write code that's not supposed to be added to the Masterportal repository, features may be added to a Masterportal instance as add-ons:</p> <ul> <li>Add-ons</li> </ul> <p>Further links:</p> <ul> <li>Community Board (Developer and user forum)</li> <li>Issue tracker</li> </ul>"},{"location":"Developer/fonts/","title":"Masterportal font usage","text":"<p>The Masterportal comes bundled with the two fonts MasterPortalFont and MasterPortalFont Bold. By default, this is the renamed font \"Roboto\", which is available under the Apache License 2.0 and can be used arbitrarily.</p> <p>The name MasterPortalFont and its usage in the Masterportal CSS files allows users to easily supply their own fonts. For this purpose, create an additional CSS file and insert it into the <code>index.html</code> as a link tag, or directly as code.</p> <p>For the given name, any other font may be used, e.g. with this CSS:</p> <pre><code>  @font-face {\n    font-family: 'MasterPortalFont';\n    src: url('https://fonts.gstatic.com/s/comingsoon/v11/qWcuB6mzpYL7AJ2VfdQR1t-VWDk.woff2');\n  }\n\n  @font-face {\n    font-family: 'MasterPortalFont Bold';\n    src: url('https://fonts.gstatic.com/s/permanentmarker/v9/Fh4uPib9Iyv2ucM6pGQMWimMp004La2Cfw.woff2');\n  }\n</code></pre>"},{"location":"Developer/setupDev/","title":"Setting up the local development environment","text":""},{"location":"Developer/setupDev/#system-requirements","title":"System requirements","text":""},{"location":"Developer/setupDev/#git","title":"git","text":"<p>Install git.</p> <p>The git installation path (<code>C:\\Program Files\\Git\\bin\\</code> by default) must be added to the system-wide PATH environment variable.</p>"},{"location":"Developer/setupDev/#firewall-issues-optional","title":"Firewall issues (optional)","text":"<p>The git protocol may be blocked by firewalls. Should this be an issue, configure git to use https instead.</p> <pre><code>$ git config --global url.https://.insteadof git://\n</code></pre>"},{"location":"Developer/setupDev/#git-proxy-optional","title":"Git proxy (optional)","text":"<p>If you're working from behind a corporate proxy, you may need to configure a proxy for both the normal and admin shell that is started with administrative rights.</p> <pre><code>$ git config --global http.proxy &lt;proxy-url:port&gt;\n$ git config --global https.proxy &lt;proxy-url:port&gt;\n</code></pre>"},{"location":"Developer/setupDev/#nodejs","title":"Node.js","text":"<p>Install Node.js.</p> <p>The Node Package Manager (NPM) comes bundled with your Node.js installation. Please test the correct installation of these tools by executing <code>node -v</code> and <code>npm -v</code> in your command line; results should look like this:</p> <pre><code>$ node -v\nv16.13.2\n\n$ npm -v\n8.1.2\n</code></pre> <p>Npm can be configured via command line. Configuration entries are added to the file <code>C:\\Users\\&lt;user&gt;\\.npmrc</code> that may also be edited directly. To view your complete configuration, run these lines:</p> <pre><code>$ npm config list\n$ npm config ls -l\n</code></pre>"},{"location":"Developer/setupDev/#cache-configuration-optional","title":"Cache configuration (optional)","text":"<p>Npm will use a package cache to avoid overly reloading packages. By default, this cache is in <code>C:\\Users\\&lt;user&gt;\\AppData\\Roaming\\npm-cache</code>. Depending on your system, this folder may be synchronized within a roaming profile and slow down the process of logging in/out. In such circumstances it is advised to change the cache path by either editing the <code>.npmrc</code> file, or via <code>cmd</code> and <code>cmd</code> with administrator rights with e.g. this line:</p> <pre><code>npm config set cache D:\\npm-cache\n</code></pre>"},{"location":"Developer/setupDev/#proxy-configuration-optional","title":"Proxy configuration (optional)","text":"<p>Only relevant when a proxy is in use.</p> <p>Run in <code>cmd</code> and <code>cmd</code> with administrative rights these lines:</p> <pre><code>$ npm config set proxy &lt;proxy-url:port&gt;\n$ npm config set https-proxy &lt;proxy-url:port&gt;\n$ setx http_proxy &lt;proxy-url:port&gt;\n$ setx https_proxy &lt;proxy-url:port&gt;\n$ setx proxy &lt;proxy-url:port&gt;\n</code></pre> <p>For changes to take effect, close and reopen all your command lines. The <code>setx</code> lines will also add the proxies to your system variables. Please mind that other tools reading these variables may be affected.</p>"},{"location":"Developer/setupDev/#globally-install-npm-packages-with-administrative-rights-optional","title":"Globally install npm packages with administrative rights (optional)","text":"<p>Some npm packages for the setup require global admin installation to be runnable via command line with your user account. To prepare this step, run a <code>cmd</code> with administrative rights:</p> <p>\u26a0\ufe0f Please determine the correct system path before running this line. The example path is taken from a german Windows 10 installation. <pre><code>$ npm config set prefix C:\\Programme\\nodejs\\\n</code></pre></p> <p>Globally installed packages will be stored in that path. For more information refer to the npm folder documentation.</p>"},{"location":"Developer/setupDev/#masterportal-installation","title":"Masterportal installation","text":"<p>Execute the git bash as admin and navigate to the folder the repository is to be cloned to.</p> <p>Clone the repository and navigate to the folder created:</p> <pre><code>$ git clone https://bitbucket.org/geowerkstatt-hamburg/masterportal.git\n$ cd masterportal\n</code></pre> <p>Install the <code>node_modules</code> required for the Masterportal:</p> <pre><code>$ npm install\n</code></pre> <p>With this, all dependencies are installed.</p> <p>In case add-ons are to be used, please refer to the add-ons documentation for further assistance.</p>"},{"location":"Developer/setupDev/#npm-start","title":"<code>npm start</code>","text":"<p>This command starts a local development server.</p> <pre><code>$ npm start\n</code></pre> <ul> <li>After compilation, you may open the following links for comprehensive demo applications:<ul> <li>https://localhost:9001/portal/basic A portal with a simple configuration</li> <li>https://localhost:9001/portal/master Simple topic tree</li> <li>https://localhost:9001/portal/masterCustom Complex topic tree with folder structure</li> <li>https://localhost:9001/portal/masterDefault Default topic tree loading all WMS layers from the <code>services.json</code> file</li> </ul> </li> </ul>"},{"location":"Developer/setupDev/#npm-run-test","title":"<code>npm run test</code>","text":"<p>Executes unit tests. This also includes the unit tests of add-ons.</p> <pre><code>$ npm run test\n</code></pre> <p>\u26a0\ufe0f If not available, the folder <code>portalconfigs/test</code> must be created. The test runner will also execute all tests in this folder.</p> <ul> <li>bundles all tests</li> <li>logs unit test results to the console</li> <li>after changing tested code or unit tests, the command <code>npm run test</code> must be re-run</li> </ul>"},{"location":"Developer/setupDev/#npm-run-build","title":"<code>npm run build</code>","text":"<p>Creates the distributable source folder for all portals, ready for publication.</p> <pre><code>$ npm run build\n</code></pre> <p>The created files are stored in the dist folder. The folder will be created automatically in the Masterportal folder root. The source code is bundled within the Mastercode folder with the current version.</p>"},{"location":"Developer/setupDev/#npm-run-buildexamples","title":"<code>npm run buildExamples</code>","text":"<p>Creates a build from the example folder.</p> <pre><code>$ npm run buildExamples\n</code></pre> <p>The produced <code>examples.zip</code> and <code>examples-x.x.x.zip</code> (versioned) both contain runnable Masterportal instances (Basic) including a resources folder.</p>"},{"location":"Developer/setupDev/#updating-dependencies","title":"Updating dependencies","text":"<p>To update all NPM packages, run</p> <pre><code>$ npm update\n</code></pre> <p>Please refer to the npm update documentation on how caret and tilde prefixes to versions in the <code>package.json</code> are handled by this step.</p>"},{"location":"Developer/setupDev/#set-up-debugging-in-visual-studio-code","title":"Set up debugging in Visual Studio Code","text":"<ol> <li>Install extension Firefox/Chrome-Debugger</li> </ol> <ol> <li>Switch to debugger view</li> </ol> <ol> <li>Open <code>launch.json</code> configuration</li> </ol> <ol> <li>Add a new Firefox configuration to the opened <code>launch.json</code> file <pre><code>    {\n        \"name\": \"Launch localhost\",\n        \"type\": \"firefox\",\n        \"request\": \"launch\",\n        \"reAttach\": true,\n        \"url\": \"https://localhost:9001/\",\n        \"webRoot\": \"${workspaceFolder}/build\",\n        \"pathMappings\": [\n            {\n            \"url\": \"webpack:///modules/core\",\n            \"path\": \"${workspaceFolder}/modules/core\"\n            }\n        ]\n    },\n</code></pre></li> </ol> <p>and/or a Chrome configuration.</p> <pre><code>    {\n        \"name\": \"Launch Chrome\",\n        \"type\": \"chrome\",\n        \"request\": \"launch\",\n        \"url\": \"https://localhost:9001/\",\n        \"webRoot\": \"${workspaceFolder}/build\",\n    },\n</code></pre> <ol> <li> <p>Start server <pre><code>$ npm start\n</code></pre></p> </li> <li> <p>Choose (1) and start (2) a debugger</p> </li> </ol> <p></p> <ol> <li> <p>Set a breakpoint</p> <p></p> </li> </ol>"},{"location":"Developer/variables/","title":"Variables Documentation","text":"<p>This documentation describes how the variables in Masterportal are intended to be used.</p>"},{"location":"Developer/variables/#colors","title":"Colors","text":"<p>For Masterportal we use a few different colors.</p> <p>Most importantly: <pre><code>$light_grey: #E3E3E3;\n$dark_blue: #003063;\n$white: #ffffff;\n$black: #000;\n$light_red: #E10019;\n$dark_grey: #424242;\n$light_blue: #00437A;\n</code></pre></p> <p>These colors are Hamburg specific colors and can be overwritten.</p>"},{"location":"Developer/variables/#primary-variable","title":"Primary variable","text":"<p>Furthermore we overwrite bootstrap's <code>$primary</code> variable with the <code>$dark_blue</code> variable which means all bootstrap uses of the primary variable are now in this dark blue. For example the class btn-primary or bg-primary. The primary button in a tool should have the class btn-primary. Primary buttons should always be used if there is only one button.</p>"},{"location":"Developer/variables/#secondary-variable","title":"Secondary variable","text":"<p>We also overwrite the secondary variable. Secondary buttons should be used as the less important buttons in a tool etc. For example cancel or back buttons that are less important. Secondary buttons should always be used if there is more than one button.</p>"},{"location":"Developer/variables/#table-styles","title":"Table styles","text":"<p>Additionally, there are certain table styles set as well as contrasting colors for the light_grey variable.</p>"},{"location":"Developer/variables/#notification-colours","title":"Notification colours","text":"<p>Notification colours can be used directly from Bootstrap. Keywords: success, info, warning, danger. For example btn-info. We still use the variable <code>$light_red</code> in certain places for red warnings. The color does not have a high enough contrast and should therefor be used sparingly. Therefore the bootstrap danger variable is overwritten by light_red.</p>"},{"location":"Developer/variables/#usage","title":"Usage","text":"<p>Generally it is best practice to use bootstrap classes and variables in the html code already such as btn-primary or bg-primary. If this is too much though, it is better to use variables in the scss code.</p>"},{"location":"Developer/variables/#sizing","title":"Sizing","text":"<p>For sizes we also have different variables that you can use: Usually the base size for rem is 16px (Browser Default) which is 1rem in the code. This can be changed by setting font-size in the html tag. Masterportal is also based on 16px for rem calculations but the base font size is 12 px (0.75rem based on 16px). This means: when you use 1rem in scss Code, it will be 16px but if you use the font variables, 1rem is 12px.</p>"},{"location":"Developer/variables/#font-size-typography","title":"Font Size / Typography","text":"<p>Bootstrap offers these: $font-size-base:              1rem; $font-size-sm:                $font-size-base * .875; $font-size-lg:                $font-size-base * 1.25;</p> <p>We set our base Size to 12px which you can see in App.vue where we use <code>$font_size_default</code> that is set to 12px in variables.scss. If you want a bigger default size, change the <code>$font_size_default</code> and everywhere where the bootstrap classes (-base, -sm, -lg) is used the font will be scaled accordingly. You can overwrite these variables if need be.</p>"},{"location":"Developer/variables/#tools","title":"Tools","text":"<p>Tools should be rendered to the sidebar. You can enable this by setting \"renderToWindow\": false. Tools should have the <code>$content_upper_space</code> at the top between content and the top line. Between two different content sections <code>$content_section_space</code> and between content within a section (for example between an input field and the next input field) itself <code>$content_space</code>. Theses variables also depend on the default base size 16px. If you change the font size in the html tag, the spaces will also be bigger/smaller, because this changes the base size.</p> <p>In this image you can see how the variables are meant to be used in tools: </p>"},{"location":"Developer/Addons/addOnsVue/","title":"Vue.js Add-ons","text":"<p>The Masterportal offers a mechanism to inject your own developments into the sources, without them becoming a part of the Masterportal repository. See setting up the development environment for more information.</p> <p>An add-on in itself is identically programmed as a native module is. For an example, see Tutorial 01: Creating a new module (Scale Switcher). However, an add-on lives in another repository and thus allows separate management.</p> <p>All add-ons to be added are placed in the folder <code>addons</code> found at Masterportal root level. Any number of such add-ons may be configured in a portal's config.js. Add-ons may bring their own <code>package.json</code> file to specify further dependencies.</p> <p>Please adhere to the following structure, in this example adding a tool (MyAddon1) and a GFI theme (MyGfiTheme):</p>"},{"location":"Developer/Addons/addOnsVue/#add-on-folder-structure","title":"Add-on folder structure","text":""},{"location":"Developer/Addons/addOnsVue/#file-system-example","title":"File system example","text":"<p>Only files related to add-ons must be placed in the <code>addons</code> folder.</p> <pre><code>addons\n|-- myAddon1\n|    index.js\n|   |-- components\n|   |   |-- MyAddOn1.vue\n|   |   |-- ...\n|   |-- store\n|   |   |-- actionsMyAddOn1.js\n|   |   |-- gettersMyAddOn1.js\n|   |   |-- indexMyAddOn1.js\n|   |   |-- mutationsMyAddOn1.js\n|   |   |-- MyAddOn1.js // the equivalent of index.js\n|   |\n|   |-- locales\n|   |   |-- de\n|   |   |   |-- additional.json\n|   |   |-- en\n|   |   |   |-- additional.json\n|   |\n|   |-- doc\n|   |   |-- config.json.md\n|   |\n|   |-- tests\n|   |   |-- end2end\n|   |   |   |-- MyAddOn1.e2e.js\n|   |   |-- unit\n|   |   |   |-- components\n|   |   |   |   |-- MyAddOn1.spec.js\n|   |   |   |-- store\n|   |   |   |   |-- actionsMyAddOn1.spec.js\n|   |   |   |   |-- gettersMyAddOn1.spec.js\n|   |   |   |   |-- mutationsMyAddOn1.spec.js\n|   |\n|   |-- package.json\n\n|-- myGfiTheme\n|   index.js\n|   |-- components\n|   |   |-- MyGfiTheme.vue\n|   |   |-- ...\n|   |-- locales\n|   |   |-- de\n|   |   |   |-- additional.json\n|   |   |-- en\n|   |   |   |-- additional.json\n|   |\n|   |-- doc\n|   |   |-- config.json.md\n|   |\n|   |-- tests\n|   |   |-- end2end\n|   |   |   |-- MyGfiTheme.e2e.js\n|   |   |-- unit\n|   |   |   |-- components\n|   |   |   |   |-- MyGfiTheme.spec.js\n|   |\n|   |-- package.json\n\n|-- myGFIThemesFolder\n|   |-- myGFISubFolder\n|   |   index.js\n|   |   |-- components\n|   |   |   |-- MyGfiTheme.vue\n|   |   |   |-- ...\n|   |   |-- locales\n|   |   |   |-- de\n|   |   |   |   |-- additional.json\n|   |   |   |-- en\n|   |   |   |   |-- additional.json\n|   |   |\n|   |   |-- doc\n|   |   |   |-- config.json.md\n|   |   |\n|   |   |-- tests\n|   |   |   |-- end2end\n|   |   |   |   |-- MyGfiTheme.e2e.js\n|   |   |   |-- unit\n|   |   |   |   |-- components\n|   |   |   |   |   |-- MyGfiTheme.spec.js\n|   |   |\n|   |   |-- package.json\n\n|-- myControl\n|   index.js\n|   |-- components\n|   |   |-- MyControl.vue\n|   |   |-- ...\n|   |-- locales\n|   |   |-- de\n|   |   |   |-- additional.json\n|   |   |-- en\n|   |   |   |-- additional.json\n|   |\n|   |-- doc\n|   |   |-- config.json.md\n|   |\n|   |-- tests\n|   |   |-- end2end\n|   |   |   |-- MyControl.e2e.js\n|   |   |-- unit\n|   |   |   |-- components\n|   |   |   |   |-- MyControl.spec.js\n|   |\n|   |-- package.json\n\n|-- myControlFolder\n|   |-- myControlSubFolder\n|   |   index.js\n|   |   |-- components\n|   |   |   |-- MyControl.vue\n|   |   |   |-- ...\n|   |   |-- locales\n|   |   |   |-- de\n|   |   |   |   |-- additional.json\n|   |   |   |-- en\n|   |   |   |   |-- additional.json\n|   |   |\n|   |   |-- doc\n|   |   |   |-- config.json.md\n|   |   |\n|   |   |-- tests\n|   |   |   |-- end2end\n|   |   |   |   |-- MyControl.e2e.js\n|   |   |   |-- unit\n|   |   |   |   |-- components\n|   |   |   |   |   |-- MyControl.spec.js\n|   |   |\n|   |   |-- package.json\n\n|-- myJavascript\n|   index.js\n|   myJavascript.js\n|   mySecondJavascript.js\n|   |-- locales\n|   |   |-- de\n|   |   |   |-- additional.json\n|   |   |-- en\n|   |   |   |-- additional.json\n|   |\n|   |-- doc\n|   |   |-- config.json.md\n|   |\n|   |-- tests\n|   |   |-- end2end\n|   |   |   |-- myJavascript.e2e.js\n|   |   |-- unit\n|   |   |   |-- myJavascript.spec.js\n|   |\n|   |-- package.json\n</code></pre> <p>The entry point of each add-on must be a file named <code>index.js</code> on add-on folder root level.</p>"},{"location":"Developer/Addons/addOnsVue/#configuration-file","title":"Configuration file","text":"<p>Within the add-ons folder, a configuration file <code>addonsConf.json</code> must exist. This file is to contain JSON that has the add-on's name as key; i.e., an add-on in <code>addons/myAddOn1</code> would have <code>myAddOn1</code> as key.</p>"},{"location":"Developer/Addons/addOnsVue/#addonsconfjson-example","title":"<code>addonsConf.json</code> example","text":"<p>Matching the example above, this would be a fitting configuration.</p> <p>This types of add-ons are supported: * Tools (<code>\"type\": \"tool\"</code>) * GFI themes (<code>\"type\": \"gfiTheme\"</code>) * Controls (<code>\"type\": \"control\"</code>) * Javascript (<code>\"type\": \"javascript\"</code>)</p> <p>All entries to the <code>addonsConf.json</code> defined by an object are expected to be written in Vue or pure javascript. The deprecated Backbone add-ons are always defined by a string.</p> <p>By default, an add-on's key is the name of its folder. By using the parameter <code>path</code> you may specify any other path. This way, you may group multiple add-ons in a folder.</p> <pre><code>{\n  \"myAddOn1\": {\n    \"vue\": true\n  },\n  \"myGfiTheme\": {\n    \"type\": \"gfiTheme\"\n  },\n  \"anotherGFITheme\": {\n    \"type\": \"gfiTheme\",\n    \"path\": \"myGFIThemesFolder/myGFISubFolder\"\n  }\n  },\n  \"myControl\": {\n    \"type\": \"control\"\n  },\n  \"anotherControl\": {\n    \"type\": \"control\",\n    \"path\": \"myControlFolder/myControlSubFolder\"\n  },\n  \"myJavascript\": {\n    \"type\": \"javascript\"\n  }\n}\n</code></pre> <p>Only files related to <code>add-ons</code> may end up in this folder.</p> <p>For additional required dependencies not included in the Masterportal, add a separate minimal <code>package.json</code> file.</p> <pre><code>{\n  \"name\": \"exampleAddon\",\n  \"version\": \"1.0.0\",\n  \"description\": \"I'm an example! I can say hello world.\",\n  \"dependencies\": {\n    \"hello\": \"^0.3.2\"\n  }\n}\n</code></pre>"},{"location":"Developer/Addons/addOnsVue/#add-on-example","title":"Add-on example","text":""},{"location":"Developer/Addons/addOnsVue/#create-files","title":"Create files","text":"<p>The add-on example shall have the name VueAddOn with entry point file <code>index.js</code>. The component <code>VueAddOn.vue</code> is placed in the folder <code>components</code>. From this, the following file structure results:</p> <pre><code>myMasterPortalFolder/\n    addons/\n        vueAddOn/\n            index.js\n            components/\n                VueAddOn.vue\n            store\n                VueAddOn.js\n    devtools/\n    doc/\n    [...]\n</code></pre>"},{"location":"Developer/Addons/addOnsVue/#example-store","title":"Example store","text":"<pre><code>// myMasterPortalFolder/addons/VueAddon/store/VueAddon.js\n\nimport GenericTool from \"../../../src/modules/tools/indexTools\";\nimport composeModules from \"../../../src/app-store/utils/composeModules\";\nimport getters from \"./gettersVueAddon\";\nimport mutations from \"./mutationsVueAddon\";\nimport actions from \"./actionsVueAddon\";\nimport state from \"./stateVueAddon\";\n\nexport default composeModules([GenericTool, {\n    namespaced: true, // mandatory\n    state,\n    mutations,\n    actions,\n    getters\n}]);\n</code></pre> <p>The contents <code>state</code>, <code>mutations</code>, <code>actions</code>, and <code>getters</code> may be placed in separate files or can alternatively be written directly to the store file. Please mind that setting <code>namespaced: true</code> is mandatory.</p> <pre><code>// myMasterPortalFolder/addons/vueAddon/components/VueAddon.vue\n\n&lt;script&gt;\nimport Tool from \"../../../src/modules/tools/Tool.vue\";\nimport {mapGetters, mapActions, mapMutations} from \"vuex\";\nimport getters from \"../store/gettersVueAddon\";\nimport mutations from \"../store/mutationsVueAddon\";\n\nexport default {\n    name: \"VueAddon\",\n    components: {\n        Tool\n    },\n    computed: {\n        ...mapGetters(\"Tools/VueAddon\", Object.keys(getters))\n    },\n    created () {\n        this.$on(\"close\", this.close);\n    },\n    /**\n     * Put initialize here if mounting occurs after config parsing\n     * @returns {void}\n     */\n    mounted () {\n        this.initialize();\n        if (this.isActive) {\n            this.setActive(true);\n        }\n        this.applyTranslationKey(this.name);\n    },\n    methods: {\n        ...mapActions(\"Tools/VueAddon\", [\n            \"initialize\"\n        ]),\n        ...mapMutations(\"Tools/VueAddon\", Object.keys(mutations)),\n\n        /**\n         * Closes this tool window by setting active to false\n         * @returns {void}\n         */\n        close () {\n            this.setActive(false);\n\n            // TODO replace trigger when Menu is migrated\n            // set the backbone model to active false for changing CSS class in menu (menu/desktop/tool/view.toggleIsActiveClass)\n            // else the menu-entry for this tool is always highlighted\n            const model = Radio.request(\"ModelList\", \"getModelByAttributes\", {id: this.$store.state.Tools.VueAddon.id});\n\n            if (model) {\n                model.set(\"isActive\", false);\n            }\n        }\n    }\n};\n&lt;/script&gt;\n\n&lt;template lang=\"html\"&gt;\n    &lt;Tool\n        :title=\"$t(name)\"\n        :icon=\"icon\"\n        :active=\"active\"\n        :render-to-window=\"renderToWindow\"\n        :resizable-window=\"resizableWindow\"\n        :deactivateGFI=\"deactivateGFI\"\n    &gt;\n        &lt;template v-slot:toolBody&gt;\n            &lt;div\n                v-if=\"active\"\n                id=\"vue-addon\"\n            &gt;\n                {{ $t(\"additional:modules.tools.vueAddon.content\") }}\n            &lt;/div&gt;\n        &lt;/template&gt;\n    &lt;/Tool&gt;\n&lt;/template&gt;\n</code></pre>"},{"location":"Developer/Addons/addOnsVue/#writing-the-indexjs-file","title":"Writing the <code>index.js</code> file","text":"<p>Within the <code>index.js</code> file, all components (Vue components, store, translations, ...) are aggregated and exported via a single entry point.</p> <p>Theoretically, the entry point may be configured within the <code>addonsConf.json</code> file arbitrarily. However, it is required to be <code>index.js</code>, since webpack will not load the module correctly else.</p> <p>Please check that all components are imported correctly, and not in a <code>.default</code> one level deeper in the object. This may e.g. happen if you use <code>import * as VueAddonComponent from\" ./components/VueAddon.vue \";</code> to import the component.</p> <pre><code>// myMasterPortalFolder/addons/vueAddon/index.js\n\nimport VueAddonComponent from \"./components/VueAddon.vue\";\nimport VueAddonStore from \"./store/VueAddon\";\nimport deLocale from \"./locales/de/additional.json\";\nimport enLocale from \"./locales/en/additional.json\";\n\nexport default {\n    component: VueAddonComponent,\n    store: VueAddonStore,\n    locales: {\n        de: deLocale,\n        en: enLocale\n    }\n};\n</code></pre>"},{"location":"Developer/Addons/addOnsVue/#creating-the-addonsconfjson","title":"Creating the <code>addonsConf.json</code>","text":"<pre><code>// myMasterPortalFolder/addons/addonsConf.json\n\n{\n  \"vueAddon\": {\n    \"type\": \"tool\"\n  }\n}\n</code></pre>"},{"location":"Developer/Addons/addOnsVue/#activate-the-add-on-example-in-the-portals-configjs","title":"Activate the add-on example in the portal's <code>config.js</code>","text":"<pre><code>// myMasterPortalFolder/config.js\nconst Config = {\n    // [...]\n    addons: [\"VueAddon\"],\n    // [...]\n};\n</code></pre>"},{"location":"Developer/Addons/addOnsVue/#configure-the-add-on-example-as-tool-in-the-portals-configjson-for-it-to-appear-in-the-menu","title":"Configure the add-on example as tool in the portal's <code>config.json</code> for it to appear in the menu","text":"<pre><code>// myMasterPortalFolder/config.json\n...\n    \"tools\": {\n        \"name\": \"Tools\",\n        \"icon\": \"bi-wrench\",\n        \"children\": {\n           \"vueAddon\": {\n                \"name\": \"translate#additional:modules.tools.vueAddon.title\",\n                \"icon\": \"bi-list-ul\"\n          },\n</code></pre>"},{"location":"Developer/Addons/addOnsVue/#indexjs-for-pure-javascript","title":"index.js for pure javascript","text":"<pre><code>// myMasterPortalFolder/addons/myJavascript/index.js\n\nimport myJavascript from \"./myJavascript\";\nimport mySecondJavascript from \"./mySecondJavascript\";\nimport deLocale from \"./locales/de/additional.json\";\nimport enLocale from \"./locales/en/additional.json\";\n\nexport default {\n    myJavascript,\n    mySecondJavascript,\n    locales: {\n        de: deLocale,\n        en: enLocale\n    }\n};\n</code></pre>"},{"location":"Developer/Addons/addOnsVue/#write-jsdoc","title":"Write JSDoc","text":"<p>For this, create a file <code>namespaces.js</code> in the <code>jsdoc</code> folder and add <code>Addons</code> as <code>@memberof</code>.</p> <pre><code>/**\n * @namespace ExampleAddon\n * @memberof Addons\n */\n</code></pre> <p>In the file <code>model.js</code>, <code>@memberOf</code> must be prefixed with <code>Addons.</code> for this to work correctly.</p> <pre><code>/**\n* @class exampleAddon\n* @extends Tool\n* @memberof Addons.ExampleAddon\n* @constructs\n*/\n</code></pre>"},{"location":"Developer/Addons/addons_backbone/","title":"backbone Addons","text":"<p>ACHTUNG: das masterportal wird vom Backbone nach Vue.js migriert. Daher ist es ratsam neue addons in vue.js zu schreiben, um die sp\u00e4ter notwendige Migrierung zu vermeiden! Vue Addons</p> <p>Um eigene Entwicklungen in das MasterPortal zu integrieren existiert ein Mechanismus der es erlaubt, Code von au\u00dferhalb des MasterPortal-Repositories in die MasterPortal Sourcen zu integrieren. Siehe auch lokale Entwicklungsumgebung einrichten.</p> <p>Dadurch werden die Models der externen Sourcen erst ganz zum Schlu\u00df initialisiert. Es wird tempor\u00e4r ein Platzhalter-Model in der Model-List angelegt.</p> <p>Die View-Klasse der externen Sourcen muss das zugeh\u00f6rige Model neu anlegen. Dieses wird dann in der Model-Liste mit dem Platzhalter-Model ausgetauscht.</p> <p>Das Addon selbst ist identisch wie ein natives Modul zu programmieren (siehe auch Tutorial 01: Ein neues Modul erstellen (Scale Switcher)). Es liegt lediglich au\u00dferhalb des Repository und erlaubt so eine getrennte Verwaltung.</p> <p>Alle Addons liegen in einem Ordner namens \"addons\" auf Root-Ebene des Masterportals. Beliebig viele dieser Addons lassen sich in einem Portal in der config.js konfigurieren.</p> <p>Folgende Struktur ist dabei zu beachten:</p>"},{"location":"Developer/Addons/addons_backbone/#1-dateistruktur-von-addons","title":"1. Dateistruktur von Addons","text":"<p>1.1. Jedes Addon liegt in einem eigenen Ordner, welcher so hei\u00dft, wie in addonsConf.json als key definiert. In diesen Ordnern liegen alle f\u00fcr die jeweiligen Addons ben\u00f6tigten Dateien. Dazu geh\u00f6ren auch die Ordner doc, jsdoc und unittests mit den jeweiligen .md, .js und .test.js Dateien. Es ist m\u00f6glich, dass Addons eine eigene <code>package.json</code> Datei besitzen, um weitere Dependencies zu definieren.</p>"},{"location":"Developer/Addons/addons_backbone/#beispiel-entsprechende-ordnerstruktur","title":"Beispiel entsprechende Ordnerstruktur","text":"<pre><code>myMasterPortalFolder/\n    addons/\n        myAddon1/\n            view.js\n            model.js\n            doc/\n                config.json.md\n            jsdoc/\n                events.js\n                namespaces.js\n            unittests/\n                model.test.js\n            package.json\n            [...]\n        myAddon2/\n            subFolder/\n                init.js\n                [...]\n            doc/\n                beschreibung.md\n            jsdoc/\n                events.js\n                namespaces.js\n            unittests/\n                addon.test.js\n            anotherFile.js\n            [...]\n    devtools/\n    doc/\n    [...]\n</code></pre> <p>1.2. Direkt in dem Ordner muss die Konfigurationsdatei addonsConf.json liegen. Diese beinhaltet einen JSON bestehend aus den Namen der Addons als Keys und die vom addons/[key] Ordner aus relativen Pfade zu deren Entrypoints als Values. Das nachfolgende Beispiel basiert auf der oben beschriebenen beispielhaften Ordnerstruktur.</p>"},{"location":"Developer/Addons/addons_backbone/#beispiel-addonsconfjson","title":"Beispiel addonsConf.json","text":"<p><pre><code>{\n  \"exampleAddon\": \"entrypoint.js\",\n  \"myAddon1\": \"view.js\",\n  \"myAddon2\": \"subFolder/init.js\"\n}\n</code></pre> 1.3. Entrypoint des Addons sollte wenn vorhanden der View Constructor sein.</p> <p>1.4. Es sollen hier ausschlie\u00dflich nur die Dateien landen, welche zu addons geh\u00f6ren.</p> <p>1.5 Falls weitere Dependencies die noch nicht im Masterportal vorhanden sind f\u00fcr ein Addon ben\u00f6tigt werden, k\u00f6nnen diese \u00fcber eine eigene <code>package.json</code> installiert werde. Dazu reicht eine minimale <code>package.json</code> aus:</p> <p><pre><code>{\n  \"name\": \"exampleAddon\",\n  \"version\": \"1.0.0\",\n  \"description\": \"I'm an example! I can say hello world.\",\n  \"dependencies\": {\n    \"hello\": \"^0.3.2\"\n  }\n}\n</code></pre> <code>npm install</code> muss f\u00fcr jedes Addon separat ausgef\u00fchrt werden!</p>"},{"location":"Developer/Addons/addons_backbone/#2-beispiel-addon","title":"2. Beispiel-Addon","text":"<p>Hier legen wir kurz ein Beispiel-Addon an!</p> <p>2.1. Dateien Erstellen: Das Beispiel-Addon tr\u00e4gt den Namen exampleAddon und seine Enrypoint-Datei hei\u00dft entrypoint.js. Daraus ergibt sich eine Dateistruktur wie folgt:</p> <pre><code>myMasterPortalFolder/\n    addons/\n        exampleAddon/\n            view.js\n            model.js\n            template.html\n    devtools/\n    doc/\n    [...]\n</code></pre> <p>2.2. Addon-Code schreiben:</p> <p><pre><code>// myMasterPortalFolder/addons/exampleAddon/model.js\nimport Tool from \"../../modules/core/modelList/tool/model\";\n\nconst exampleAddon = Tool.extend({\n    defaults: Object.assign({}, Tool.prototype.defaults, {\n        icon: \"bi-example\",\n        renderToWindow: true,\n        id: \"exampleAddon\",\n        name: \"Example Tool\"\n    }),\n    initialize: function () {\n        this.superInitialize();\n    }\n});\n\nexport default exampleAddon;\n</code></pre> <pre><code>// myMasterPortalFolder/addons/exampleAddon/view.js\nimport ExampleTemplate from \"text-loader!./template.html\";\nimport ExampleModel from \"./model\";\n\nconst ExampleView = Backbone.View.extend({\n\n    initialize: function ()\n     {\n        this.model = new ExampleModel();\n        this.listenTo(this.model, {\n            \"change:isActive\": this.render\n        });\n        if (this.model.get(\"isActive\") === true) {\n            this.render(this.model, true);\n        }\n    },\n    template: _.template(ExampleTemplate),\n\n    // Konvention: Die Methode f\u00fcrs zeichnen der View, hei\u00dft render.\n    render: function (model, value) {\n        const attr = model.toJSON();\n\n        if (value) {\n            //do something like this\n            this.setElement(document.getElementsByClassName(\"win-body\")[0]);\n            this.$el.html(this.template(attr));\n        }\n        return this;\n    }\n});\n</code></pre> 2.3. Die Addons-Config-Datei erstellen:</p> <p>// myMasterPortalFolder/addons/addonsConf.json <pre><code>{\n  \"exampleAddon\": \"view.js\"\n}\n</code></pre></p> <p>2.4. Das Beispiel-Addon in der config.js Datei des Portals aktivieren: <pre><code>// myMasterPortalFolder/config.js\n\nconst Config = {\n    // [...]\n    addons: [\"exampleAddon\"],\n    // [...]\n};\n</code></pre> 2.5. Das Beispiel-Addon als Werkzeug in der config.json definieren, damit es als Men\u00fcpunkt erscheint. <pre><code>// myMasterPortalFolder/config.json\n...\n    \"tools\": {\n        \"name\": \"Werkzeuge\",\n        \"icon\": \"bi-tools\",\n        \"children\": {\n          \"exampleAddon\": {\n            \"name\": \"Beispiel Addon\"\n          },\n</code></pre></p> <p>2.5. JSDoc schreiben. Dazu einen im Ordner jsdoc einen Datei namespaces.js anlegen und als memberOf Addons eintragen.</p> <pre><code>/**\n * @namespace ExampleAddon\n * @memberof Addons\n */\n</code></pre> <p>2.6. In der model.js muss bei memberOf als Prefix Addons. angegeben werden.</p> <pre><code>/**\n* @class ExampleAddonModel\n* @extends Tool\n* @memberof Addons.ExampleAddon\n* @constructs\n*/\n</code></pre>"},{"location":"Developer/Contributing/codingConventions/","title":"Coding conventions","text":""},{"location":"Developer/Contributing/codingConventions/#introduction","title":"Introduction","text":"<p>As developer, you're motivated to write your code not only fully functional, but as sustainable as possible. This encompasses a wide range of properties based on the \"Clean Code\" principles - which will hold true for your code.</p> <p>To decide as objectively as possible whether your code will pass its pull request, we're using a linter and defined a set of function.</p> <p>For the linter, we use ESLint, with its configuration file .eslintrc included in the repository. On each push, the linter and unit tests will run automatically. Should an error occur, the push is prevented.</p> <p>Our conventions are divided into two parts. Any violation of a section A convention does result in a pull request declined. Section B covers guidelines. Compliance with those improve the reusability and maintainability of the code. While not mandatory, please consider following these rules, too.</p>"},{"location":"Developer/Contributing/codingConventions/#conventions","title":"Conventions","text":""},{"location":"Developer/Contributing/codingConventions/#section-a","title":"Section A","text":"<p>All the following rules must hold.</p>"},{"location":"Developer/Contributing/codingConventions/#a1-linter-and-functionality","title":"A.1 Linter and functionality","text":"<ul> <li>A.1.1 The code works on Edge, Chrome, and Firefox.</li> <li>A.1.2 The code works on the mobile view of the browsers mentioned in A.1.1.</li> <li>A.1.3 The linter is active.</li> <li>A.1.4 The linter detects no errors.</li> <li>A.1.5 Files are encoded <code>UTF-8</code>.</li> <li>A.1.6 Backbone: No arrow functions are used in templates.</li> </ul>"},{"location":"Developer/Contributing/codingConventions/#a2-packages-and-libraries","title":"A.2 Packages and libraries","text":"<ul> <li>A.2.1 The code uses the frameworks and libraries set by Geowerkstatt; they are not bypassed.</li> <li>A.2.2 No methods of Underscore.js are in use, except for calls to <code>_.template()</code>.</li> <li>A.2.3 No redundant packages are installed.</li> <li>A.2.4 JQuery is only to be used in combination with Backbone.js.</li> <li>A.2.5 The addition of packages/libraries has to be agreed on by the LGV team. At least 3 libs need to be evaluated before decisions can be made. Use a form from library evalutaion and add to PR.</li> </ul>"},{"location":"Developer/Contributing/codingConventions/#a3-code","title":"A.3 Code","text":"<ul> <li>A.3.1 New files are created in accordance with the existing structure.</li> <li>A.3.2 Names for variables, functions, folders, and files are in English and speaking.</li> <li>A.3.3 Comments are written in English.</li> <li>A.3.4 A function's block comment always describes its use.</li> <li>A.3.5 Styles are written in the <code>.scss</code> dialect.</li> <li>A.3.6 No use of <code>important!</code> in styles.</li> <li>A.3.7 Modules and components must only influence behavior and style of their own and child elements.</li> <li>A.3.8 No style changes may happen via JavaScript.</li> <li>A.3.9 All styles have a module dependant ID as prefix or are written in <code>scoped</code> mode.</li> <li>A.3.10 No inline styles exist.</li> </ul>"},{"location":"Developer/Contributing/codingConventions/#a4-code-documentation-via-jsdoc","title":"A.4 Code documentation (via JSDoc)","text":"<ul> <li>A.4.1 The documentation is written in English.</li> <li>A.4.2 The documentation build via <code>npm run buildJsDoc</code> does not throw an error.</li> <li>A.4.3 Backbone: For each function a JSDoc block comment with description, parameters, return value, and possibly events, is provided.</li> <li>A.4.4 Backbone: Class definitions are located above the <code>initialize()</code> with specification of all default values. All event listeners, event triggers, and event requests occurring are part of the class documentation.</li> <li>A.4.5 Backbone: If a class is inherited from, a lend comment exists.</li> <li>A.4.6 Backbone: Namespaces are defined in namespaces.js. They represent the folder structure and modules of the code.</li> <li>A.4.7 Backbone: Events are defined in events.js.</li> </ul>"},{"location":"Developer/Contributing/codingConventions/#a5-unit-tests","title":"A.5 Unit tests","text":"<ul> <li>A.5.1 Unit tests exist for each testable function.</li> <li>A.5.2 For each module a test file exists with file extension <code>.test.js</code> (Backbone) or <code>.spec.js</code> (Vue). It lives in test/unittests/modules within a folder structure mirroring the code folder structure.</li> <li>A.5.3 For each function a positive test (call with plausible values) and a negative test (call with bad values, e.g. <code>undefined</code>, <code>[]</code>, <code>{}</code>, <code>\"\"</code>, ...).</li> </ul>"},{"location":"Developer/Contributing/codingConventions/#a6-backwards-compatibility-and-configurability","title":"A.6 Backwards compatibility and configurability","text":"<ul> <li>A.6.1 No hard-coded URLs or paths to external sources exist.</li> <li>A.6.2 Configurable parameters are documented in the <code>.md</code> files.</li> <li>A.6.3 All previously noted configuration parameters can still be used as described.</li> <li>A.6.4 Renamed or deleted parameters are marked <code>Deprecated</code>.</li> </ul>"},{"location":"Developer/Contributing/codingConventions/#a7-languages","title":"A.7 Languages","text":"<ul> <li>A.7.1 Locales are extended in or added to all relevant files.</li> <li>A.7.2 Locale files are maintained in at least English and German.</li> <li>A.7.3 The fallback language is German.</li> <li>A.7.4 The documentation is maintained in English, with the only exception being the <code>config.json.md</code>, which is also maintained in German as <code>config.json.de.md</code>.</li> </ul>"},{"location":"Developer/Contributing/codingConventions/#a8-changelog","title":"A.8 Changelog","text":"<ul> <li>A.8.1 The changelog language is English.</li> <li>A.8.2 Deleting and adding features as well as fixing bugs is recorded in the changelog.</li> <li>A.8.3 Changes regarding UI, interfaces, or configuration are recorded in the changelog.</li> <li>A.8.4 Entries are assigned to one of the following categories: Added, Changed, Deprecated, Removed, Fixed.</li> <li>A.8.5 Entries are to be written in simple language. Avoid jargon. The changelog is read by users and developers alike.</li> </ul>"},{"location":"Developer/Contributing/codingConventions/#a9-file-structure","title":"A.9 File structure","text":"<p>A.9.1 The file structure of new modules is to be created according to the following scheme:</p> <pre><code>src\n|--app-store\n|   |-- utils\n|   |-- actions.js\n|   |-- getters.js\n|   |-- index.js\n|   |-- mutations.js\n|   |-- state.js\n|   |-- tests\n|\n|-- modules\n|   |-- exampleModule\n|   |   |-- components\n|   |   |   |-- ExampleModule.vue\n|   |   |   |-- ...\n|   |   |-- store\n|   |   |   |-- actionsExampleModule.js\n|   |   |   |-- constantsExampleModule.js\n|   |   |   |-- gettersExampleModule.js\n|   |   |   |-- indexExampleModule.js\n|   |   |   |-- mutationsExampleModule.js\n|   |   |   |-- stateExampleModule.js\n|   |   |\n|   |   |-- tests\n|   |   |   |-- unit\n|   |   |   |   |-- components\n|   |   |   |   |   |-- exampleModule.spec.js\n|   |   |   |   |-- store\n|   |   |   |   |   |-- actionsExampleModule.spec.js\n|   |   |   |   |   |-- gettersExampleModule.spec.js\n|   |   |   |   |   |-- mutationsExampleModule.spec.js\n|   |   |   |-- end2end (module-specific)\n|   |   |   |   |-- ExampleModule.e2e.js\n|   |\n|   |-- controls\n|   |   |-- ControlBar.vue\n|   |   |-- ControlIcon.vue\n|   |   |-- gettersControls.js\n|   |   |-- indexControls.js\n|   |   |-- mutationsControls.js\n|   |   |-- ...\n|   |   |-- exampleControl\n|   |   |   |-- components\n|   |   |   |-- store\n|   |   |   |-- tests\n|   |\n|   |-- tools\n|   |   |-- actionsTool.js\n|   |   |-- indexTools.js\n|   |   |-- Tool.vue\n|   |   |-- exampleTool\n|   |   |   |-- components\n|   |   |   |-- store\n|   |   |   |-- tests\n|   |\n|-- share-components\n|   |-- exampleShareComponent.vue\n|\n|-- tests\n|   |--end2end\n|   |   |--exampleGlobalTest.e2e.js\n|\n|-- utils\n|   |-- exampleGlobalFunction.js\n|\n|-- addons.js\n|-- App.vue\n|-- MainNav.vue\n|-- MapRegion.vue\n</code></pre>"},{"location":"Developer/Contributing/codingConventions/#section-b-optional","title":"Section B (optional)","text":"<p>The code is written as readable and understandable as possible. The goal is not to save lines, but the time of future developers working on the code.</p>"},{"location":"Developer/Contributing/codingConventions/#b1-structure","title":"B.1 Structure","text":"<ul> <li>B.1.1 Markup (templates), styles (CSS), and logic (controller) are written with clean separation of concerns.</li> <li>B.1.2 The controller does not produce any HTML.</li> <li>B.1.3 The code holds no redundancies. (No duplicated code / DRY)</li> <li>B.1.4 Common functions with global applicability are store in a helper file.</li> <li>B.1.5 Each function has one well-defined task. (Curly's Law)</li> <li>B.1.6 Self-defined functions never change values by reference, but returns the calculated value.</li> <li>B.1.7 Templates contain no data-modifying logic or business logic.</li> <li>B.1.8 Vue: Persisting data and communicating is done via the VueX Store.</li> </ul>"},{"location":"Developer/Contributing/codingConventions/#b2-readability-and-comprehensibility","title":"B.2 Readability and comprehensibility","text":"<ul> <li>B.2.1 The code is written as simple as possible. (KISS)</li> <li>B.2.2 Arrow functions are used whenever possible. The <code>this</code> context is not dragged along unnecessarily.</li> <li>B.2.3 Function parameters and properties have defined default values where applicable.</li> <li>B.2.4 Native ECMAScript functions and objects are used.</li> <li>B.2.5 Type checks are done with <code>typeof</code>, <code>instanceof</code>, <code>Array.isArray()</code>, and <code>===</code>.</li> </ul>"},{"location":"Developer/Contributing/codingConventions/#b3-vue-best-practice","title":"B.3 Vue Best Practice","text":"<ul> <li>B.3.1 Vue components in the <code>share-components</code> folder contain comments according to the Vue Styleguidist.</li> <li>B.3.2 Backbone Radio - New Vue modules should avoid using the <code>Backbone.Radio</code> where possible. Radio events in old modules can be replaced with VueX store interaction.</li> <li>B.3.3 For requests it is recommended to use the library Axios.</li> </ul>"},{"location":"Developer/Contributing/codingConventions/#b4-vue-best-practice-state-management","title":"B.4 Vue Best Practice - State management","text":"<ul> <li>B.4.1 For simple getters and mutations the generator functions provided in <code>./src/app-store/utils/generator.js</code> are used.</li> <li>B.4.2 The VueX helper functions (<code>mapGetters</code>, <code>mapMutations</code>, ...) are used to integrate store data into components.</li> </ul>"},{"location":"Developer/Contributing/codingConventions/#b5-vue-best-practice-style","title":"B.5 Vue Best Practice - Style","text":"<ul> <li>B.5.1 Use <code>scoped</code> within the style tag whenever possible.</li> <li>B.5.2 Avoid usage of the <code>!important</code> keyword.</li> <li>B.5.3 Avoid setting <code>width</code> and <code>height</code> to absolute values, as this hinders designing responsively.</li> <li>B.5.4 The global scss file <code>variables.scss</code> contains all variables required by BootstrapV5 and the Masterportal. All theming variables (fonts, colors, ...) are maintained here. The file <code>variables.scss</code> must only contain variables, mixins, and functions. Adding CSS rules would result in a repetition per import, bloating the CSS size. The <code>variables.scss</code> is imported to a component's style tag by using the <code>import</code> command.</li> </ul>"},{"location":"Developer/Contributing/codingConventions/#b6-error-message-output","title":"B.6 Error message output","text":"<ul> <li>B.6.1 Make use of the module Alerting.</li> <li>B.6.2 Write a speaking error that describes to the user what has gone wrong. Provide the message in multiple languages.</li> <li>B.6.3 Only display errors when relevant to the user and the user's current work step.</li> <li>B.6.4 When communicating an error to the user, include what went wrong, why it went wrong, and what can be done to resolve the situation. If the user has no option to rectify the situation, reconsider whether the error needs to be communicated at all.</li> <li>B.6.5 For technical details use <code>console.error()</code> or <code>console.warn()</code> and print information in English for your fellow developers.</li> </ul>"},{"location":"Developer/Contributing/codingConventionsInfo/","title":"Additional information on the coding conventions","text":"<p>Explanations and examples are given for some points mentioned in the coding conventions below.</p>"},{"location":"Developer/Contributing/codingConventionsInfo/#section-a","title":"Section A","text":""},{"location":"Developer/Contributing/codingConventionsInfo/#a43","title":"A.4.3","text":"<p>These two examples illustrate how to write JSDoc comment blocks.</p> <pre><code>/**\n* This function does some things that are explained right here.\n* @returns {Void}\n*/\nfunctionWithoutParamsAndNoReturn: function () {\n    ...\n}\n</code></pre> <pre><code>/**\n* This function does some things that are explained right here.\n* @param {String} param1 InputString.\n* @returns {String} ConcatenatedString\n*/\nfunctionWithParamsAndReturn: function (param1) {\n    return param1 + \"foobar\";\n}\n</code></pre>"},{"location":"Developer/Contributing/codingConventionsInfo/#a44","title":"A.4.4","text":"<p>Example for the <code>initialize()</code> function:</p> <pre><code>defaults: {\n    channel: Radio.channel(\"Alert\"),\n    category: \"alert-info\",\n    isDismissable: true,\n    isConfirmable: false,\n    position: \"top-center\",\n    message: \"\",\n    animation: false\n},\n\n/**\n * @class AlertingModel\n * @extends Backbone.Model\n * @memberof Alerting\n * @constructs\n * @property {Radio.channel} channel=Radio.channel(\"Alert\") Radio channel for communication\n * @property {String} category=\"alert-info\" Category of alert. bootstrap css class\n * @property {Boolean} isDismissable=true Flag if alert has a dismissable button\n * @property {Boolean} isConfirmable=false Flag if alert has to be confirmed to close\n * @property {String} position=\"top-center\" The positioning of the alert. Possible values \"top-center\", \"center-center\"\n * @property {String} message=\"\" The message of the alert\n * @property {Boolean} animation=false Flag if Alert is animated by means of fading out\n * @fires Alerting#render\n * @fires Alerting#changePosition\n * @listens Alerting#RadioTriggerAlertAlert\n */\ninitialize: function () {\n    this.listenTo(this.get(\"channel\"), {\n        \"alert\": this.setParams\n    }, this);\n},\n</code></pre> <p>Example for template instantiation:</p> <pre><code>/**\n * @member AlertingTemplate\n * @description Template used to create the alert message\n * @memberof Alerting\n */\ntemplate: _.template(AlertingTemplate),\n</code></pre>"},{"location":"Developer/Contributing/codingConventionsInfo/#a45","title":"A.4.5","text":"<p>Comment on inheritance:</p> <pre><code>    const AlertingModel = Backbone.Model.extend(/** @lends AlertingModel.prototype */{\n</code></pre>"},{"location":"Developer/Contributing/codingConventionsInfo/#a46","title":"A.4.6","text":"<p>Namespace definition.</p> <p>Example namespace Alerting in Root:</p> <pre><code>/**\n * @namespace Alerting\n * @description Alerting system that responds to given events.\n * Used to have the same alert all over the portal.\n */\n</code></pre> <p>Example namespace ModelList as Core subfolder:</p> <pre><code>/**\n * @namespace ModelList\n * @memberof Core\n * @description List module to gather all item models\n */\n</code></pre> <p>Example nested namespace:</p> <pre><code>/**\n * @event Core.ModelList.Layer#changeIsSelected\n * @param {Backbone.Model} model The model whose attribute hat changed.\n * @param {Boolean} value The attribute value that has changed.\n * @description Fired if attribute isSelected has changed\n */\n</code></pre> <p>Example module namespace with event of namespace Alerting: <pre><code>/**\n * @event Alerting#RadioTriggerAlertAlert\n * @param {String/Object} alert The alert object or string needed to create the alert.\n * @example Radio.trigger(\"Alert\", \"alert\", alert)\n */\n</code></pre></p>"},{"location":"Developer/Contributing/codingConventionsInfo/#a47","title":"A.4.7","text":"<p>Event definition.</p> <p>Example: <code>Radio.trigger(\"Channel\", \"Event\");</code> <pre><code>/**\n * @event Namespace#RadioTriggerChannelEvent\n * @description FooBar.\n * @example Radio.trigger(\"Channel\", \"Event\")\n */\n</code></pre></p> <p>Example: <code>Radio.trigger(\"Channel\", \"EventWithData\", data);</code> <pre><code>/**\n * @event Namespace#RadioTriggerChannelEventWithData\n * @description FooBar.\n * @param {*} data Data to be sent with the event\n * @example Radio.trigger(\"Channel\", \"Event\", data)\n */\n</code></pre></p> <p>Example: <code>Radio.request(\"Channel\", \"Event\");</code> <pre><code>/**\n * @event Namespace#RadioRequestChannelEvent\n * @description FooBar.\n * @returns {*} - Response of this event\n * @example Radio.request(\"Channel\", \"Event\")\n */\n</code></pre></p> <p>Example: <code>Radio.request(\"Channel\", \"EventWithData\", data);</code> <pre><code>/**\n * @event Namespace#RadioRequestChannelEventWithData\n * @description FooBar.\n * @param {*} data Data to be sent with the event\n * @returns {*} - Response of this evennt\n * @example Radio.request(\"Channel\", \"Event\", data)\n */\n</code></pre></p> <p>Example: <code>Model.trigger(\"myTrigger\");</code> <pre><code>/**\n * @event Namespace#MyTrigger\n * @description FooBar.\n */\n</code></pre></p> <p>Example: <code>Model.trigger(\"myTriggerWithData\", data);</code> <pre><code>/**\n * @event Namespace#MyTriggerWithData\n * @param {*} data Data to be sent with the event\n * @description FooBar.\n */\n</code></pre></p> <p>Example: <code>this.listenTo(this, { \"change:attributeOne\": this.doSomething });</code> <pre><code>/**\n * @event Namespace#changeAttributeOne\n * @description FooBar.\n */\n</code></pre></p>"},{"location":"Developer/Contributing/codingConventionsInfo/#a51","title":"A.5.1","text":"<p>Example for testable and untestable functions.</p> <pre><code>function testableFunction (uebergabeParameter) {\n    let rueckgabeParameter = \"Hello \" + uebergabeParameter;\n\n    return rueckgabeParameter\n}\n\nconst arr = [];\nfunction untestableFunction (param) {\n    setTimeout(() =&gt; {\n        arr.push(param);\n    }, 1000);\n}\n</code></pre>"},{"location":"Developer/Contributing/codingConventionsInfo/#a52","title":"A.5.2","text":"<p>For more information on unit tests in Vue, refer to the Vue unit test documentation.</p> <p>Tests employ the libraries Chai and Mocha.</p>"},{"location":"Developer/Contributing/codingConventionsInfo/#a62","title":"A.6.2","text":"<p>Extend the <code>.md</code> file documentation by following these instructions.</p> <ul> <li>For new configuration parameters that do not directly influence the Masterportal UI and displayed layers, or on changes to such existing parameters, extend the file config.js.md.</li> <li>For new configuration parameters regarding the Masterportal UI, or on changes to such existing parameters, extend the config.json.md.</li> <li>The following parameters are mandatory for documenting configuration parameters:     |Name|Required|Type|Default|Description|Expert|     |-|-|-|-|-|-|     The row <code>Expert</code> only applies to the config.json.md.</li> <li>Each parameter in a <code>.md</code> file ends on a horizontal separation line produced by e.g. <code>***</code> or <code>---</code>.</li> <li>The heading to be used depends on the parameter nesting. The top level starts with <code>#</code>, the next level with <code>##</code>, and so on. Please mind that Markdown only supports up to six chapter levels.</li> <li>Configuration parameters describing an object containing further parameters are modelled in separate chapters and are each linked and described.</li> <li>For complex configuration parameters, an example configuration is required.</li> <li>Also extend the files services.json.md, rest-services.json.md, and style.json.md, if you add or change parameters to these global configuration files.</li> </ul> <p>For a more formal definition of the config.json.md requirements, see Masterportal configuration parser.</p> <p>Nesting in .json is modeled with the amount of #</p> <pre><code>    # config.json\n    .\n    .\n    .\n\n    ## Portalconfig\n</code></pre> <p>Parameters are nested when describing an object themselves: <pre><code>    ## Portalconfig\n    |Name|Verpflichtend|Typ|Default|Beschreibung|Expert|\n    |----|-------------|---|-------|------------|------|\n    |controls|nein|[controls](#markdown-header-portalconfigcontrols)||Description text.|false|\n    ***\n\n    ### Portalconfig.controls\n</code></pre></p> <p>Example of a complex configuration <pre><code>    \"osm\": {\n        \"minChars\": 3,\n        \"serviceId\": \"10\",\n        \"limit\": 60,\n        \"states\": \"Hamburg, Nordrhein-Westfalen, Niedersachsen, Rhineland-Palatinate Rheinland-Pfalz\",\n        \"classes\": \"place,highway,building,shop,historic,leisure,city,county\"\n    }\n</code></pre></p>"},{"location":"Developer/Contributing/codingConventionsInfo/#a64","title":"A.6.4","text":"<p>On changing, refactoring, or deleting a parameter:</p> <ul> <li>Note \"Deprecated in [next major release]\" within the parameter's documentation.</li> <li>Mark the old parameter's code as deprecated by adding \"@deprecated in [next major release]\" within the JSDoc comment.</li> </ul> <p>For example, the following annotations mark the parameter \"Baumtyp\" within the <code>config.json</code> and code as deprecated:</p> <pre><code>|Name|Verpflichtend|Typ|Default|Beschreibung|Expert|\n|----|-------------|---|-------|------------|------|\n|Baumtyp|nein|enum[\"light\", \"default\", \"custom\"]|\"light\"|Deprecated in 3.0.0. Use \"treeType\" instead.|false|\n</code></pre> <pre><code>/**\n * this.updateTreeType\n * @deprecated in 3.0.0\n */\nattributes = this.updateTreeType(attributes, response);\n...\n/**\n * Update the preparsed treeType from attributes to be downward compatible.\n * @param {Object} attributes Preparased portalconfig attributes.\n * @param {Object} response  Config from config.json.\n * @returns {Object} - Attributes with mapped treeType\n * @deprecated in 3.0.0. Remove whole function and call!\n */\nupdateTreeType: function (attributes, response) {\n    if (response.Portalconfig.treeType !== undefined) {\n        attributes.treeType = response.Portalconfig.treeType;\n    }\n    else if (response.Portalconfig.Baumtyp !== undefined) {\n        attributes.treeType = response.Portalconfig.Baumtyp;\n        console.warn(\"Attribute 'Baumtyp' is deprecated. Please use 'treeType' instead.\");\n    }\n    else {\n        attributes.treeType = \"light\";\n    }\n    return attributes;\n},\n</code></pre>"},{"location":"Developer/Contributing/codingConventionsInfo/#a71","title":"A.7.1","text":"<p>The library i18next is used for internationalization.</p>"},{"location":"Developer/Contributing/codingConventionsInfo/#a83","title":"A.8.3","text":"<p>For more information of versions, read the versioning documentation.</p> <p>For each pull request, add an entry to the chapter \"Unreleased\" of the CHANGELOG file. Avoid technical jargon. The changelog is supposed to be readable by both users and developers.</p>"},{"location":"Developer/Contributing/codingConventionsInfo/#section-b-optional","title":"Section B (optional)","text":""},{"location":"Developer/Contributing/codingConventionsInfo/#b31","title":"B.3.1","text":"<pre><code>// code example for generating simple getters\nimport state from \"./state\";\nimport {generateSimpleMutations} from \"~generators\";\n\nconst mutations = {\n    ...generateSimpleMutations(state),\n</code></pre>"},{"location":"Developer/Contributing/codingConventionsInfo/#b42","title":"B.4.2","text":"<ul> <li>mapState documentation</li> <li>mapGetters documentation</li> <li>mapMutations documentation</li> <li>mapActions documentation</li> </ul>"},{"location":"Developer/Contributing/codingConventionsInfo/#b54","title":"B.5.4","text":"<pre><code>&lt;style lang=\"scss\" scoped&gt;\n    @import \"~variables\";\n&lt;/style&gt;\n</code></pre>"},{"location":"Developer/Contributing/codingConventionsInfo/#b6","title":"B.6","text":"<p>An example simply displaying \"My First Alert Message\":</p> <pre><code>import store from \"masterportal/src/app-store/index\";\nstore.dispatch(\"Alerting/addSingleAlert\", \"My First Alert Message.\");\n</code></pre> <p>On phrasing, please use the following examples as a guideline.</p> Positive example Negative example Further information on this topic could not be loaded. CSW request failed Please enter your password You forgot to enter your password"},{"location":"Developer/Contributing/gitWorkflow/","title":"Git Workflow","text":"<p>Our git workflow.</p> <ul> <li>Git workflow<ul> <li>Commit</li> <li>Branches and workflow<ul> <li>Rebase a checked out feature branch with remote dev</li> <li>Repeat following steps until rebasing is completed:</li> <li>1. After solving each conflict:</li> <li>2. If \"Working directory clean\" (No further changes are available)</li> <li>3. If \"modified\" (changes still exist)</li> <li>4. If \"deleted\" (Files have been deleted). Check whether displayed files should be deleted</li> <li>Pushing results after finished rebasing</li> </ul> </li> <li>Pushing</li> <li>Definition Of Done</li> <li>Forks</li> <li>Pull Requests</li> </ul> </li> </ul>"},{"location":"Developer/Contributing/gitWorkflow/#git-workflow","title":"Git workflow","text":""},{"location":"Developer/Contributing/gitWorkflow/#commit","title":"Commit","text":"<ul> <li>Commit early, commit often</li> <li>A commit represents an idea or a change</li> <li>Use verbs for your commits: add/remove/update/refactor/fix/config/hotfix</li> <li>Do not commit <code>console.log</code> statements</li> </ul>"},{"location":"Developer/Contributing/gitWorkflow/#branches-and-workflow","title":"Branches and workflow","text":"<ul> <li>The development of new features and bug fixing usually takes place on features branches based on the <code>dev</code> branch. We use the Gitflow Workflow.</li> <li>The development branch is named <code>dev</code>.</li> <li>Use verbs for commits: add/remove/update/refactor/fix/config/hotfix. Commit messages should be in English and speaking.</li> <li> <p>Branches are deleted after merging.</p> </li> <li> <p>Feature branches are updated with the remote branch using git command rebase and not with the merge command.</p> </li> </ul> <p>Further reading: merge vs. rebase</p> <p>Below is a guide for rebasing:</p>"},{"location":"Developer/Contributing/gitWorkflow/#rebase-a-checked-out-feature-branch-with-remote-dev","title":"Rebase a checked out feature branch with remote dev","text":"<pre><code>#!js\ngit pull --rebase origin dev\n</code></pre>"},{"location":"Developer/Contributing/gitWorkflow/#repeat-following-steps-until-rebasing-is-completed","title":"Repeat following steps until rebasing is completed:","text":""},{"location":"Developer/Contributing/gitWorkflow/#1-after-solving-each-conflict","title":"1. After solving each conflict:","text":"<ul> <li>To check the rebase state of the current rebase step: <pre><code>#!js\ngit status\n</code></pre></li> </ul>"},{"location":"Developer/Contributing/gitWorkflow/#2-if-working-directory-clean-no-further-changes-are-available","title":"2. If \"Working directory clean\" (No further changes are available)","text":"<pre><code>#!js\ngit rebase --skip\n</code></pre>"},{"location":"Developer/Contributing/gitWorkflow/#3-if-modified-changes-still-exist","title":"3. If \"modified\" (changes still exist)","text":"<ul> <li>--&gt; Resolve conflicts in the individual files. <pre><code>#!js\ngit add [Path to file whose conflict has been resolved]\ngit rebase --continue\n</code></pre></li> </ul>"},{"location":"Developer/Contributing/gitWorkflow/#4-if-deleted-files-have-been-deleted-check-whether-displayed-files-should-be-deleted","title":"4. If \"deleted\" (Files have been deleted). Check whether displayed files should be deleted","text":"<ul> <li>File will be deleted: <pre><code>#!js\ngit rm\ngit rebase --continue\n</code></pre> File won't be deleted: <pre><code>#!js\ngit checkout [File path]\ngit rebase --continue\n</code></pre></li> </ul>"},{"location":"Developer/Contributing/gitWorkflow/#pushing-results-after-finished-rebasing","title":"Pushing results after finished rebasing","text":"<ul> <li>If the feature branch has already been pushed (force push): <pre><code>#!js\ngit push -f oder git push --force\n</code></pre> If the feature branch still exists: <pre><code>#!js\ngit push\n</code></pre></li> </ul>"},{"location":"Developer/Contributing/gitWorkflow/#pushing","title":"Pushing","text":"<ul> <li>The commits are written to the repository with thematically closed pushes; however, the aim is not to include entire features in one push, but to model activities. Pushing your local development state on a daily basis is recommended to prevent data loss.</li> </ul>"},{"location":"Developer/Contributing/gitWorkflow/#definition-of-done","title":"Definition Of Done","text":"<ul> <li>Before opening a pull request, the author checks whether these conditions are met:<ul> <li>The target branch has been rebased to the feature branch immediately before opening the pull request. Hence, there are no conflicts.</li> <li>The code is fine:<ul> <li>There are no warnings or errors in the linter report.</li> <li>The code honors the conventions.</li> </ul> </li> <li>The documentation has been extended:<ul> <li>User documentation</li> <li>Developer documentation</li> </ul> </li> <li>Test suites with tests are available:<ul> <li>For new functions: A short description of a test case to add it to the test protocol is provided. (Should result from the ticket.)</li> <li>Unit tests are written: Test documentation</li> </ul> </li> <li>A functional tests on a build portal was executed:<ul> <li>According to ticket description.</li> <li>Cross-Browser (Chrome, IE 11, FF) - mobile behavior emulated in the browser.</li> </ul> </li> </ul> </li> </ul>"},{"location":"Developer/Contributing/gitWorkflow/#forks","title":"Forks","text":"<ul> <li>External developers are not team members and do not receive write permission to the repository. Please fork the <code>dev</code> branch for your development.</li> <li>Commit and push to your fork. From the fork, a pull request targeting the <code>dev</code> branch may be opened.</li> <li>Please also fix bugs targeting the <code>dev</code> branch:<ul> <li>Please indicate in the pull request if the bug should be published as a hotfix.. Please note our hints regarding versioning.</li> <li>Team members take care of transferring the required code.</li> <li>We use cherry-picking to apply hotfix commits. This is simpler when hotfix commits contain the hotfix and nothing else. Please note our coding conventions regarding this.</li> </ul> </li> </ul>"},{"location":"Developer/Contributing/gitWorkflow/#pull-requests","title":"Pull Requests","text":"<ul> <li>Commits pushed to branches may only reach the <code>dev</code> branch via pull requests.</li> <li>External developers set their PR's reviewer to geowerkstatt. This is a technical user that will note the team members.</li> <li>The review is done by at least one team member. The reviewer checks the pull request based on the Definition of Done. Errors or comments may be added directly to the code or as comments within the pull request.</li> <li>A pull request passing all checks is approved. The approving team member merges the pull request for external developers.</li> </ul>"},{"location":"Developer/Contributing/versioning/","title":"Choosing a version number","text":"<p>Masterportal versioning is done according to the rules of semantic versioning, matching the following pattern:</p> <p>MAJOR.MINOR.PATCH</p> <p>Version numbers following this are e.g. <code>0.0.1</code>, <code>1.0.0</code>, or <code>2.5.265</code>. In short, these rules are used:</p> <ol> <li>The MAJOR number is increased on changes to the public API introducing incompatibilities to prior versions.</li> <li>The MINOR number is increased on adding functionalities. The product remains compatible to the public API of previously released versions.</li> <li>The PATCH number is increased on bug fixes that do not have any effect on the package's API, also preserving backwards compatibility.</li> </ol>"},{"location":"Developer/RemoteInterface/remoteInterface/","title":"Remote interface","text":"<p>The remote interface allows programmatic interaction with the Masterportal. It gives access to all registered VueX actions and a set of dedicated additional functions.</p>"},{"location":"Developer/RemoteInterface/remoteInterface/#generic-remote-interface-to-call-vuex-actions","title":"Generic remote interface to call VueX actions","text":"Name Type Explanation namespace String Namespace of VueX module action String Name of action to call on module args Object Parameter object provided as payload to action"},{"location":"Developer/RemoteInterface/remoteInterface/#example","title":"Example","text":"<p>Any VueX action may be called as follows:</p> <pre><code>const myIframe = document.getElementById(\"my-iframe\");\nmyIframe.contentWindow.postMessage({\n    namespace: \"Name/Space/Of/VueX/Store\",\n    action: \"nameOfAction\",\n    args: {\n        \"param1\": \"value1\",\n        \"paramX\": \"valueX\"\n    }\n});\n</code></pre> <p>The remote interface will interpret the message given and produce the following call:</p> <pre><code>store.dispatch(\n    \"Name/Space/Of/VueX/Store/nameOfAction\",\n    {\n        \"param1\": \"value1\",\n        \"paramX\": \"valueX\"\n    },\n    { root: true }\n);\n</code></pre>"},{"location":"Developer/RemoteInterface/remoteInterface/#calling-a-dedicated-function-via-remote-interface","title":"Calling a dedicated function via remote interface","text":"<p>The singular key given to <code>.postMessage()</code>'s parameter object is to correspond to a function name. The value of this key must be an array and will be spread to be the call's parameters.</p> Name Type Explanation <code>${nameOfFunction}</code> Array Parameters to call <code>${nameOfFunction}</code> with domain String Receiver window's domain"},{"location":"Developer/RemoteInterface/remoteInterface/#example_1","title":"Example","text":"<p>A function may be called as follows:</p> <pre><code>const myIframe = document.getElementById(\"my-iframe\");\nconst nameOfFunction = \"this should be the name of a function\";\nmyIframe.contentWindow.postMessage(\n    { [nameOfFunction]: [\"param1\", \"param2\", \"paramX\"] },\n    domain\n);\n</code></pre>"},{"location":"Developer/RemoteInterface/remoteInterface/#list-of-dedicated-functions","title":"List of dedicated functions","text":""},{"location":"Developer/RemoteInterface/remoteInterface/#showpositionbyextent","title":"showPositionByExtent","text":"<p>A map marker will be placed at the center of the given extent, and the map's view will center on it.</p> Name Type Explanation showPositionByExtent Array extent; map marker will be set to its center domain String receiver window's domain"},{"location":"Developer/RemoteInterface/remoteInterface/#example_2","title":"Example","text":"<pre><code>const myIframe = document.getElementById(\"my-iframe\").contentWindow;\niframe.postMessage({\n    \"showPositionByExtent\": [xMin, yMin, xMax, yMax]\n}, domain);\n</code></pre>"},{"location":"Developer/RemoteInterface/remoteInterface/#showpositionbyextentnoscroll","title":"showPositionByExtentNoScroll","text":"<p>A map marker will be placed at the center of the given extent. The map is not center to it, hence it may remain outside of the user's view.</p> Name Type Explanation showPositionByExtent Array extent; map marker will be set to its center domain String receiver window's domain"},{"location":"Developer/RemoteInterface/remoteInterface/#example_3","title":"Example","text":"<pre><code>const myIframe = document.getElementById(\"my-iframe\").contentWindow;\niframe.postMessage({\n    \"showPositionByExtentNoScroll\": [xMin, yMin, xMax, yMax]\n}, domain);\n</code></pre>"},{"location":"Developer/RemoteInterface/remoteInterface/#transactfeaturebyid","title":"transactFeatureById","text":"<p>Modify a WFS-T layer's feature, triggering a server interaction.</p> Name Type Explanation transactFeaturesById String feature id layerId String WFS-T layer id attributes String JSON containing feature attributes mode String name of the WFS-T operation that is to be executed; Currently only \"update\" is available domain String receiver window's domain"},{"location":"Developer/RemoteInterface/remoteInterface/#example_4","title":"Example","text":"<pre><code>const myIframe = document.getElementById(\"my-iframe\").contentWindow;\nconst id = \"the id of the feature to modify\";\niframe.postMessage({\n    \"transactFeatureById\": id,\n    \"layerId\": layerId,\n    \"attributes\": attrs,\n    \"mode\": \"update\"\n}, domain);\n</code></pre>"},{"location":"Developer/RemoteInterface/remoteInterface/#zoomtoextent","title":"zoomToExtent","text":"<p>The map's view will fit the given extent.</p> Name Type Explanation zoomToExtent Array extent domain String receiver window's domain"},{"location":"Developer/RemoteInterface/remoteInterface/#example_5","title":"Example","text":"<pre><code>const myIframe = document.getElementById(\"my-iframe\").contentWindow;\niframe.postMessage({\n    \"zoomToExtent\": [xmin, ymin, xmax, ymax]\n}, domain);\n</code></pre>"},{"location":"Developer/RemoteInterface/remoteInterface/#highlightfeature","title":"highlightfeature","text":"<p>Highlight a vector feature on the map.</p> Name Type Explanation highlightfeature String id of layer and feature as comma-separated string domain String receiver window's domain"},{"location":"Developer/RemoteInterface/remoteInterface/#example_6","title":"Example","text":"<pre><code>const myIframe = document.getElementById(\"my-iframe\").contentWindow;\niframe.postMessage({\n    \"highlightfeature\": \"layerid,featureId\"\n}, domain);\n</code></pre>"},{"location":"Developer/RemoteInterface/remoteInterface/#hideposition","title":"hidePosition","text":"<p>Hide the map marker.</p> Name Type Explanation hidePosition String used standalone (not in object) domain String receiver window's domain"},{"location":"Developer/RemoteInterface/remoteInterface/#example_7","title":"Example","text":"<pre><code>const myIframe = document.getElementById(\"my-iframe\").contentWindow;\niframe.postMessage(\"hidePosition\", domain);\n</code></pre>"},{"location":"Developer/RemoteInterface/remoteInterface/#generic-remote-interface-for-backboneradio-deprecated","title":"Generic remote interface for <code>Backbone.Radio</code> (deprecated)","text":"<p>The functions registered to the <code>Backbone.Radio</code> element may also be used via <code>postMessage()</code>. They are called by channel and function name.</p> <p>Please mind that the usage of Backbone.Radio itself is currently deprecated. Backbone will eventually be removed.</p> Name Type Explanation radio_channel String radio channel to target radio_function String radio channel function to call radio_para_object Object optional parameter object forwarded to the called function domain String receiver window's domain"},{"location":"Developer/RemoteInterface/remoteInterface/#example_8","title":"Example","text":"<pre><code>const myIframe = document.getElementById(\"my-iframe\").contentWindow;\niframe.postMessage({\n    \"radio_channel\": \"MyRadioChannel\",\n    \"radio_function\": \"myRequestedFunction\",\n    \"radio_para_object\": {\n        \"param1\": \"param1\",\n        \"paramX\": \"paramX\"\n    }\n}, domain);\n</code></pre> <p>This will construct and execute the following call.</p> <pre><code>Radio.request(\n    \"MyRadioChannel\",\n    \"myRequestedFunction\",\n    {\n        \"param1\": \"param1\",\n        \"paramX\": \"paramX\"\n    }\n);\n</code></pre>"},{"location":"Developer/RemoteInterface/remoteInterface/#masterportal-communication-to-the-parent-window","title":"Masterportal communication to the parent window","text":"<p>Previously the top-down communication (parent to Masterportal) has been shown. The Masterportal may also communicate in the opposite direction.</p> Name Type Explanation params Object parameter object sent to parent window"},{"location":"Developer/RemoteInterface/remoteInterface/#examples","title":"Examples","text":"<pre><code>// From a Vue component\nthis.$remoteInterface.sendMessage({\n    \"param1\": \"param1\",\n    \"paramX\": \"paramX\"\n});\n</code></pre> <pre><code>// From a VueX action\nthis._vm.$remoteInterface.sendMessage({\n    \"param1\": \"param1\",\n    \"paramX\": \"paramX\"\n});\n</code></pre> <p>The remote interface translates both to the following call:</p> <pre><code>parent.postMessage({\n    \"param1\": \"param1\",\n    \"paramX\": \"paramX\"\n}, options.postMessageUrl);\n</code></pre>"},{"location":"Developer/RemoteInterface/remoteInterface/#masterportal-communication-to-the-parent-window-via-backboneradio-deprecated","title":"Masterportal communication to the parent window via <code>Backbone.Radio</code> (deprecated)","text":"<p>Please mind that the usage of Backbone.Radio itself is currently deprecated. Backbone will eventually be removed.</p> Name Type Explanation params Object parameter object sent to parent window"},{"location":"Developer/RemoteInterface/remoteInterface/#example_9","title":"Example","text":"<pre><code>Radio.trigger(\n    \"RemoteInterface\",\n    \"postMessage\", {\n        \"param1\": \"param1\",\n        \"paramX\": \"paramX\"\n    }\n);\n</code></pre>"},{"location":"Developer/RemoteInterface/remoteInterface/#tutorial-integration-of-the-master-portal-into-an-iframe","title":"Tutorial: Integration of the master portal into an iframe","text":"<p>The following tutorial shows how to use the masterportal remote interface within an iFrame.</p>"},{"location":"Developer/RemoteInterface/remoteInterface/#the-first-step","title":"The first step","text":"<p>Configure the remoteInterface in the config.js of a portal. This entry is necessary to open the interface to the outside of the portal.</p> <pre><code>const Config = {\n...\n    remoteInterface: {\n        postMessageUrl: \"https://localhost:9001\"\n    },\n...\n}\n</code></pre>"},{"location":"Developer/RemoteInterface/remoteInterface/#the-second-step","title":"The second step","text":"<p>Configure the input map and in it the target projection in the config.js of the same portals as the first step. Coordinates will be translated to it before being communicated via remoteInterface.</p> <pre><code>const Config = {\n...\n    inputMap: {\n        targetProjection: \"EPSG:4326\"\n    },\n...\n}\n</code></pre>"},{"location":"Developer/RemoteInterface/remoteInterface/#the-third-step","title":"The third step","text":"<p>Create an html-file and add the follow content. In it, an iframe is created in which the portal <code>https://localhost:9001/portal/master</code> is loaded. Then 3 buttons are created and a click event is assigned to each.</p> <p>Note: The html-file must be stored in a path that is accessible via the localhost.</p> <p>The example can also be called directly here with a running server:  iframe Example. To do this, the following must be added to <code>portal/master/config.js</code></p> <pre><code>remoteInterface: {\n    postMessageUrl: \"https://localhost:9001\"\n},\n</code></pre> <p>Example of an iframe: <pre><code>&lt;!DOCTYPE html&gt;\n&lt;html style=\"height:100%\"&gt;\n&lt;body style=\"height:100%\"&gt;\n\n&lt;style&gt;\n    html, body { height:100%; }\n    button { width: 50px; }\n&lt;/style&gt;\n\n&lt;!-- Create a iframe with the portal master as source. --&gt;\n&lt;iframe\n    id=\"iframe\"\n    src=\"https://localhost:9001/portal/master\"\n    width=\"100%\"\n    height=\"85%\"\n    name=\"SELFHTML_in_a_box\"\n&gt;&lt;/iframe&gt;\n\n&lt;!-- Createthree buttons. --&gt;\n&lt;button id=\"b1\"&gt;1&lt;/button&gt;\n&lt;button id=\"b2\"&gt;2&lt;/button&gt;\n&lt;button id=\"b3\"&gt;3&lt;/button&gt;\n\n&lt;/body&gt;\n\n&lt;script&gt;\n    // Gets the elements from dom.\n    const iframe1 = document.getElementById(\"iframe\"),\n        b1 = document.getElementById(\"b1\"),\n        b2 = document.getElementById(\"b2\"),\n        b3 = document.getElementById(\"b3\");\n\n    // Sets the screen back to the start scale\n    b1.addEventListener(\"click\", event =&gt; {\n        iframe1.contentWindow.postMessage({\n            radio_channel: \"RemoteInterface\",\n            radio_function: \"resetView\",\n            radio_para_object: {}\n        });\n    });\n\n    // Outputs a message with the message \"foo\".\n    b2.addEventListener(\"click\", event =&gt; {\n        iframe1.contentWindow.postMessage({\n            namespace: \"Alerting\",\n            action: \"addSingleAlert\",\n            args: {content: \"foo\"}\n        });\n    });\n\n    // Starts a draw event. A polygon can be drawn on the map with the mouse.\n    b3.addEventListener(\"click\", event =&gt; {\n        iframe1.contentWindow.postMessage({\n            namespace: \"Tools/Draw\",\n            action: \"initializeWithoutGUI\",\n            args: {\"drawType\": \"Polygon\", \"color\": [127,255,0,0.5], \"opacity\": 0.5, \"maxFeatures\": null, \"initialJSON\": null}\n        });\n    });\n\n    // Logs the message event.\n    window.addEventListener(\"message\", function (messageEvent) {\n        console.log(messageEvent);\n        if (messageEvent.data === \"portalReady\") {\n            Radio.request(\"RemoteInterface\", \"getZoomLevel\");\n        }\n    }, false);\n\n&lt;/script&gt;\n\n&lt;/html&gt;\n</code></pre></p>"},{"location":"Developer/Testing/browserTest/","title":"Unit Tests","text":"<p>Browser testing with Selenium WebDriver</p> <ul> <li>Install browser test drivers (WebDrivers)</li> <li>Locally run tests</li> <li>Run tests on SauceLabs.com</li> <li>How to write tests<ul> <li>Test file location</li> <li>File structure</li> <li>Creating the ScaleSwitcher.e2e.js</li> <li>Register the \"ScaleSwitcher.e2e.js\"</li> <li>Add a describe for testing</li> <li>Add Hooks<ul> <li>Before</li> <li>After</li> <li>AfterEach</li> <li>All hooks together:</li> </ul> </li> <li>Add first tests</li> <li>Other tests</li> <li>The complete test file: masterportal/src/modules/tools/scaleSwitcher/tests/end2end/ScaleSwitcher.e2e.js</li> </ul> </li> </ul>"},{"location":"Developer/Testing/browserTest/#install-browser-test-drivers-webdrivers","title":"Install browser test drivers (WebDrivers)","text":"<p>To locally run the browser tests, drivers have to be installed on your system. At least chromedriver should be installed, but you may also install further drivers for test automation. (Hint: For Firefox, the name of the WebDriver is geckodriver.)</p> <p>Using the variable \"browser\" (see below), these browsers can be used for automated tests:</p> <ul> <li>\"chrome\": Chrome-Browser</li> <li>\"firefox\": Firefox</li> <li>\"edge\": Microsoft Edge</li> </ul> <p>For installation, download the required drivers and make them available to the system environment. On Windows, this is done by adding the driver's paths to the <code>path</code> variable in your system environment variables. The <code>.exe</code> file must have been placed in a folder where <code>.exe</code> files are allowed to be executed.</p> <p>To test your setup, open a new <code>cmd</code> terminal (no administrative rights required) and run e.g. <code>chromedriver</code>. This should print \"ChromeDriver was started successfully.\", or any other confirmation, depending on the driver you're testing.</p>"},{"location":"Developer/Testing/browserTest/#locally-run-tests","title":"Locally run tests","text":"<p>To locally run the tests, a Masterportal dev server has to be started. Run <code>npm start</code> to do so. Then, run <code>npm run browsertest</code> to execute the tests.</p> <p>You may also start a run with modified parameters to e.g. use your local proxy, set the browser to test, or change the URL the portal is running on.</p> <pre><code>$ browser=firefox url=[url] proxy=[proxyurl] ./node_modules/.bin/mocha ./test/end2end/TestRunner.js\n</code></pre> <p>You may also define the variables for your test environment by creating a file <code>.env</code> in the Masterportal root, containing your variables. The file will be read on each test run.</p>"},{"location":"Developer/Testing/browserTest/#run-tests-on-saucelabscom","title":"Run tests on SauceLabs.com","text":"<p>To run the local systems tests on Sauce Labs, you need to open a sauce trusted connection:</p> <ul> <li>You need to download Sauce Connect Proxy</li> <li>Then define your setup and configuration</li> </ul> <pre><code>$ bin/sc -u $SAUCE_USERNAME -k $SAUCE_ACCESS_KEY -x $SAUCE_DC -i TUNNEL_ID'\n</code></pre> <ul> <li>When sauce connect is up you can run the browsertest</li> </ul> <pre><code>$ npm run browsertestOnSauceLabs\n</code></pre>"},{"location":"Developer/Testing/browserTest/#how-to-write-tests","title":"How to write tests","text":""},{"location":"Developer/Testing/browserTest/#test-file-location","title":"Test file location","text":"<p>Test files have to be saved with the file extension <code>.e2e.js</code>. All test files have to be placed next to the component and store being tested in a separate <code>tests/end2end</code> folder. For illustration, the following example was constructed using the <code>ScaleSwitcher</code> component.</p> <pre><code>src\n|-- modules\n|   |-- tools\n|   |   |-- scaleSwitcher\n|   |   |   |-- components\n|   |   |   |   |-- ScaleSwitcher.vue\n|   |   |   |   |-- ...\n|   |   |   |-- store\n|   |   |   |   |-- actionsScaleSwitcher.js\n|   |   |   |   |-- gettersScaleSwitcher.js\n|   |   |   |   |-- indexScaleSwitcher.js\n|   |   |   |   |-- mutationsScaleSwitcher.js\n|   |   |   |   |-- stateScaleSwitcher.js\n|   |   |   |\n|   |   |   |-- tests\n|   |   |   |   |-- end2end\n|   |   |   |   |   |-- ScaleSwitcher.e2e.js\n|   |   |   |   |-- unit\n|   |   |   |   |   |-- components\n|   |   |   |   |   |   |-- ScaleSwitcher.spec.js\n|   |   |   |   |   |-- store\n|   |   |   |   |   |   |-- actionsScaleSwitcher.spec.js\n|   |   |   |   |   |   |-- gettersScaleSwitcher.spec.js\n|   |   |   |   |   |   |-- mutationsScaleSwitcher.spec.js\n</code></pre>"},{"location":"Developer/Testing/browserTest/#file-structure","title":"File structure","text":"<p>The following sub-chapters contain example test files that may be used as guideline.</p>"},{"location":"Developer/Testing/browserTest/#creating-the-scaleswitchere2ejs","title":"Creating the ScaleSwitcher.e2e.js","text":"<pre><code>const webdriver = require(\"selenium-webdriver\");\n\n/**\n * Tests regarding scale switcher tool.\n * @param {e2eTestParams} params The parameter set.\n * @returns {void}\n */\nasync function ScaleSwitcherTests ({builder, url, resolution, capability}) {\n\n}\n\nmodule.exports = ScaleSwitcherTests;\n</code></pre>"},{"location":"Developer/Testing/browserTest/#register-the-scaleswitchere2ejs","title":"Register the \"ScaleSwitcher.e2e.js\"","text":"<p>Open <code>masterportal/test/end2end/test.js</code> and add the path of the <code>ScaleSwitcher.e2e.js</code> to the array <code>suites</code>. In this file all paths to the files are configured with end2end tests.</p> <pre><code>const suites = [\n    ...\n\n                // modules/tools\n                require(\"../../src/modules/tools/contact/tests/end2end/Contact.e2e.js\"),\n                // require(\"./tests/modules/tools/PopulationRequest_HH.js\"),\n                require(\"./tests/modules/tools/ExtendedFilter.js\"),\n                require(\"./tests/modules/tools/List.js\"),\n                require(\"../../src/modules/tools/supplyCoord/tests/end2end/SupplyCoord.e2e.js\"),\n                require(\"../../src/modules/tools/measure/tests/end2end/Measure.e2e.js\"),\n                require(\"../../src/modules/tools/scaleSwitcher/tests/end2end/ScaleSwitcher.e2e.js\"), // add the tool scaleSwitcher\n                require(\"./tests/modules/tools/ParcelSearch.js\"),\n                require(\"../../src/modules/tools/searchByCoord/tests/end2end/SearchByCoord.e2e.js\"),\n\n...\n            ],\n</code></pre>"},{"location":"Developer/Testing/browserTest/#add-a-describe-for-testing","title":"Add a describe for testing","text":"<p>The tests should only be tested in the <code>portal/master</code>, because the scale switcher is only configured in this portal. At the beginning, an <code>only</code> can be appended to the <code>describe</code>. This way, when starting the End2End tests, only the tests within this describe will be tested. This is especially helpful when creating tests. Note: After completion of the tests the <code>only</code> must be removed again, so that all tests are running again.</p> <pre><code>const webdriver = require(\"selenium-webdriver\"),\n    {isMaster} = require(\"../../../../../../test/end2end/settings\");\n\n\n/**\n * Tests regarding scale switcher tool.\n * @param {e2eTestParams} params The parameter set.\n * @returns {void}\n */\nasync function ScaleSwitcherTests ({builder, url, resolution, capability}) {\n    const testIsApplicable = isMaster(url);\n\n    // The test will only run on the `masterportal/portal/master`\n    if (testIsApplicable) {\n        describe.only(\"ScaleSwitcher\", function () {\n        });\n    }\n}\n\nmodule.exports = ScaleSwitcherTests;\n</code></pre>"},{"location":"Developer/Testing/browserTest/#add-hooks","title":"Add Hooks","text":"<p>There are basically 3 hooks added.</p>"},{"location":"Developer/Testing/browserTest/#before","title":"Before","text":"<p>Executed once in describe. Sets the title of the test, if the tests are executed via a pipeline on Saucelabs. Get the driver.</p> <pre><code> before(async function () {\n    if (capability) {\n        // Title for the tests on saucelabs\n        capability.name = this.currentTest.fullTitle();\n        // Title for the tests on saucelabs\n        capability[\"sauce:options\"].name = this.currentTest.fullTitle();\n        // After a change, this must be communicated to the builder\n        builder.withCapabilities(capability);\n    }\n    // Get the driver\n    driver = await getDriver();\n});\n</code></pre>"},{"location":"Developer/Testing/browserTest/#after","title":"After","text":"<p>Will be executed once after all tests have been run. If the tests are piped to Saucelabs, the URL to executed tests is logged to Saucelabs.</p> <pre><code>after(async function () {\n    if (capability) {\n        // Logs the url to the test on saucelabs if the tests were started there\n        driver.session_.then(function (sessionData) {\n            logTestingCloudUrlToTest(sessionData.id_);\n        });\n    }\n});\n</code></pre>"},{"location":"Developer/Testing/browserTest/#aftereach","title":"AfterEach","text":"<p>Will be executed after each test. It serves as a fallback, if a test fails it will be restarted. This is done because it can happen that a resource from the web does not respond on the first try.</p> <pre><code>afterEach(async function () {\n    // Executed only once after the failure of a test\n    if (this.currentTest._currentRetry === this.currentTest._retries - 1) {\n        // Quit the driver\n        await quitDriver();\n        // Initialize the driver again\n        driver = await initDriver(builder, url, resolution);\n    }\n});\n</code></pre>"},{"location":"Developer/Testing/browserTest/#all-hooks-together","title":"All hooks together:","text":"<pre><code>const webdriver = require(\"selenium-webdriver\"),\n    {isMaster} = require(\"../../../../../../test/end2end/settings\"),\n    {initDriver, getDriver, quitDriver} = require(\"../../../../../../test/end2end/library/driver\"),\n    {logTestingCloudUrlToTest} = require(\"../../../../../../test/end2end/library/utils\");\n\n\n/**\n * Tests regarding scale switcher tool.\n * @param {e2eTestParams} params The parameter set.\n * @returns {void}\n */\nasync function ScaleSwitcherTests ({builder, url, resolution, capability}) {\n    const testIsApplicable = isMaster(url);\n\n    if (testIsApplicable) {\n        describe.only(\"ScaleSwitcher\", function () {\n            let driver;\n\n            before(async function () {\n                if (capability) {\n\n                    capability.name = this.currentTest.fullTitle();\n                    capability[\"sauce:options\"].name = this.currentTest.fullTitle();\n                    builder.withCapabilities(capability);\n                }\n                driver = await getDriver();\n            });\n\n            after(async function () {\n                if (capability) {\n                    driver.session_.then(function (sessionData) {\n                        logTestingCloudUrlToTest(sessionData.id_);\n                    });\n                }\n            });\n\n            afterEach(async function () {\n                if (this.currentTest._currentRetry === this.currentTest._retries - 1) {\n                    await quitDriver();\n                    driver = await initDriver(builder, url, resolution);\n                }\n            });\n        });\n    }\n}\n\nmodule.exports = ScaleSwitcherTests;\n</code></pre>"},{"location":"Developer/Testing/browserTest/#add-first-tests","title":"Add first tests","text":"<p>When testing a tool, it is generally advisable to open it first. To do this, you should first check whether the tool is already open. Then check whether all the desired elements are present and have the correct content. The tests are performed asynchronously, so an <code>await</code> must always be used when querying elements.</p> <pre><code>const webdriver = require(\"selenium-webdriver\"),\n    {isMaster} = require(\"../../../../../../test/end2end/settings\"),\n    {initDriver, getDriver, quitDriver} = require(\"../../../../../../test/end2end/library/driver\"),\n    {logTestingCloudUrlToTest} = require(\"../../../../../../test/end2end/library/utils\"),\n    {expect} = require(\"chai\"),\n    {By, until} = webdriver;\n\n...\n\nit(\"Open the tool scaleSwitcher and check if all elements are visible\", async function () {\n    let counter = 0;\n\n    do {\n        // Try to open the tool a maximum of 10 times in intervals of 100 milliseconds\n        expect(counter++).to.be.below(10);\n        // Open the scaleSwitcher with two clicks\n        await (await driver.findElement(By.xpath(\"//ul[@id='tools']//..\"))).click();\n        await (await driver.findElement(By.css(\"#tools .bi-arrows-angle-contract\"))).click();\n        // Interval of 100 milliseconds.\n        await driver.wait(new Promise(r =&gt; setTimeout(r, 100)));\n    // If the tool was found the condition is fulfilled\n    } while ((await driver.findElements(By.id(\"scale-switcher\"))).length === 0);\n\n    // Check if the scaleSwitcher is visible\n    await driver.wait(until.elementIsVisible(await driver.findElement(By.id(\"scale-switcher\"))));\n\n    // Get the elements that are in the tool\n    const header = await driver.findElement(By.css(\"div.win-heading div.heading-element h2.title\"), 5000),\n        label = await driver.findElement(By.css(\"div#scale-switcher label\"), 5000),\n        select = await driver.findElement(By.id(\"scale-switcher-select\"), 5000),\n        selectValue = await select.getAttribute(\"value\");\n\n    // Check if the contents of the elements have the right content\n    expect(await header.getText()).to.equals(\"Ma\u00dfstab umschalten\");\n    expect(await label.getText()).to.equals(\"Ma\u00dfstab\");\n    expect(selectValue).to.equals(\"60000\");\n});\n</code></pre>"},{"location":"Developer/Testing/browserTest/#other-tests","title":"Other tests","text":"<p>In further tests the reactions of the elements can be tested. For example, whether a desired state has occurred after clicking on an element.</p> <p>With the ScaleSwitcher it is tested whether after selection of a scale the map has adopted the same scale. To query the map scale, a function is added in the <code>masterportal/test/end2end/library/scripts</code> file that queries the scale from the map. This function is reqiuired in the ScaleSwitcher test file. If one of the other tests fails and is executed again by the <code>afterEach</code> hook, it is necessary that the initial conditions are executed there again. In this case the tool should be opened again.</p> <p>masterportal/src/modules/tools/scaleSwitcher/tests/end2end/ScaleSwitcher.e2e.js <pre><code>const webdriver = require(\"selenium-webdriver\"),\n    {isMaster} = require(\"../../../../../../test/end2end/settings\"),\n    {initDriver, getDriver, quitDriver} = require(\"../../../../../../test/end2end/library/driver\"),\n    {logTestingCloudUrlToTest} = require(\"../../../../../../test/end2end/library/utils\"),\n    {expect} = require(\"chai\"),\n    {By, until} = webdriver,\n    {getScale} = require(\"../../../../../../test/end2end/library/scripts\");\n\n...\nafterEach(async function () {\n    if (this.currentTest._currentRetry === this.currentTest._retries - 1) {\n        await quitDriver();\n        driver = await initDriver(builder, url, resolution);\n        // Open the scaleSwitcher tool again\n        await (await driver.findElement(By.xpath(\"//ul[@id='tools']//..\"))).click();\n        await (await driver.findElement(By.css(\"#tools .bi-arrows-angle-contract\"))).click();\n    }\n});\n\n...\n\nit(\"Switch scale to 1 : 10000 and check if the scale of the map has switched as well\", async function () {\n    // Get the dropdown with scales\n    const select = await driver.findElement(By.id(\"scale-switcher-select\"), 5000),\n        targetScale = 10000;\n\n    // Click for the scale 1 : 10000\n    await select.click();\n    await (await driver.findElement(By.css(`#scale-switcher-select option[value=\"${targetScale}\"]`))).click();\n\n    // Check if the value of the dropdown and the map have adopted the new scale 10000.\n    expect(await select.getAttribute(\"value\")).to.equals(String(targetScale));\n    expect(await driver.executeScript(getScale)).to.equals(targetScale);\n});\n\nit(\"Switch scale to 1 : 250000 and check if the scale of the map has switched as well\", async function () {\n    // Get the dropdown with scales\n    const select = await driver.findElement(By.id(\"scale-switcher-select\"), 5000),\n        targetScale = 250000;\n\n    // Click for the scale 1 : 25000\n    await select.click();\n    await (await driver.findElement(By.css(`#scale-switcher-select option[value=\"${targetScale}\"]`))).click();\n\n    // Check if the value of the dropdown and the map have adopted the new scale 25000.\n    expect(await select.getAttribute(\"value\")).to.equals(String(targetScale));\n    expect(await driver.executeScript(getScale)).to.equals(targetScale);\n});\n</code></pre></p> <p>masterportal/test/end2end/library/scripts <pre><code>/**\n * @returns {String} The scale of the map.\n */\nfunction getScale () {\n    const options = Backbone.Radio.request(\"MapView\", \"getOptions\");\n\n    return options ? options.scale : null;\n}\n\n...\n\nmodule.exports = {\n    mockGeoLocationAPI,\n    mouseWheelUp,\n    mouseWheelDown,\n    areAllLayersHidden,\n    areRegExpsInMeasureLayer,\n    areAllFeaturesOfLayerVisible,\n    basicAuth,\n    getMarkerPointCoord,\n    getMeasureLayersTexts,\n    isFullscreen,\n    isLayerVisible,\n    isMarkerPointVisible,\n    imageLoaded,\n    isInitalLoadingFinished,\n    isObModeOn,\n    getOrderedLayerIds,\n    getObModeResolution,\n    getCoordinatesOfXthFeatureInLayer,\n    hasVectorLayerLength,\n    hasVectorLayerStyle,\n    areLayersOrdered,\n    doesLayerWithFeaturesExist,\n    getCenter,\n    getResolution,\n    getScale, // the export of the function `getScale`\n    getTilt,\n    getHeading,\n    getDirection,\n    setCenter,\n    setResolution,\n    setTilt,\n    zoomIn,\n    zoomOut\n};\n</code></pre></p>"},{"location":"Developer/Testing/browserTest/#the-complete-test-file-masterportalsrcmodulestoolsscaleswitchertestsend2endscaleswitchere2ejs","title":"The complete test file: masterportal/src/modules/tools/scaleSwitcher/tests/end2end/ScaleSwitcher.e2e.js","text":"<p>Remove the <code>only</code> from the <code>describe</code>. After that the file looks like this.</p> <pre><code>const webdriver = require(\"selenium-webdriver\"),\n    {isMaster} = require(\"../../../../../../test/end2end/settings\"),\n    {initDriver, getDriver, quitDriver} = require(\"../../../../../../test/end2end/library/driver\"),\n    {logTestingCloudUrlToTest} = require(\"../../../../../../test/end2end/library/utils\"),\n    {expect} = require(\"chai\"),\n    {By, until} = webdriver,\n    {getScale} = require(\"../../../../../../test/end2end/library/scripts\");\n\n\n/**\n * Tests regarding scale switcher tool.\n * @param {e2eTestParams} params The parameter set.\n * @returns {void}\n */\nasync function ScaleSwitcherTests ({builder, url, resolution, capability}) {\n    const testIsApplicable = isMaster(url);\n\n    if (testIsApplicable) {\n        describe(\"ScaleSwitcher\", function () {\n            let driver;\n\n            before(async function () {\n                if (capability) {\n\n                    capability.name = this.currentTest.fullTitle();\n                    capability[\"sauce:options\"].name = this.currentTest.fullTitle();\n                    builder.withCapabilities(capability);\n                }\n                driver = await getDriver();\n            });\n\n            after(async function () {\n                if (capability) {\n                    driver.session_.then(function (sessionData) {\n                        logTestingCloudUrlToTest(sessionData.id_);\n                    });\n                }\n            });\n\n            afterEach(async function () {\n                if (this.currentTest._currentRetry === this.currentTest._retries - 1) {\n                    await quitDriver();\n                    driver = await initDriver(builder, url, resolution);\n                    await (await driver.findElement(By.xpath(\"//ul[@id='tools']//..\"))).click();\n                    await (await driver.findElement(By.css(\"#tools .bi-arrows-angle-contract\"))).click();\n                }\n            });\n\n            it(\"Open the tool scaleSwitcher and check if all elements are visible\", async function () {\n                let counter = 0;\n\n                do {\n                    expect(counter++).to.be.below(10);\n                    await (await driver.findElement(By.xpath(\"//ul[@id='tools']//..\"))).click();\n                    await (await driver.findElement(By.css(\"#tools .bi-arrows-angle-contract\"))).click();\n                    await driver.wait(new Promise(r =&gt; setTimeout(r, 100)));\n                } while ((await driver.findElements(By.id(\"scale-switcher\"))).length === 0);\n\n                await driver.wait(until.elementIsVisible(await driver.findElement(By.id(\"scale-switcher\"))));\n\n                const header = await driver.findElement(By.css(\"div.win-heading div.heading-element h2.title\"), 5000),\n                    label = await driver.findElement(By.css(\"div#scale-switcher label\"), 5000),\n                    select = await driver.findElement(By.id(\"scale-switcher-select\"), 5000),\n                    selectValue = await select.getAttribute(\"value\");\n\n                expect(await header.getText()).to.equals(\"Ma\u00dfstab umschalten\");\n                expect(await label.getText()).to.equals(\"Ma\u00dfstab\");\n                expect(selectValue).to.equals(\"60000\");\n            });\n\n            it(\"Switch scale to 1 : 10000 and check if the scale of the map has switched as well\", async function () {\n                const select = await driver.findElement(By.id(\"scale-switcher-select\"), 5000),\n                    targetScale = 10000;\n\n                await select.click();\n                await (await driver.findElement(By.css(`#scale-switcher-select option[value=\"${targetScale}\"]`))).click();\n\n                expect(await select.getAttribute(\"value\")).to.equals(String(targetScale));\n                expect(await driver.executeScript(getScale)).to.equals(targetScale);\n            });\n\n            it(\"Switch scale to 1 : 250000 and check if the scale of the map has switched as well\", async function () {\n                const select = await driver.findElement(By.id(\"scale-switcher-select\"), 5000),\n                    targetScale = 250000;\n\n                await select.click();\n                await (await driver.findElement(By.css(`#scale-switcher-select option[value=\"${targetScale}\"]`))).click();\n\n                expect(await select.getAttribute(\"value\")).to.equals(String(targetScale));\n                expect(await driver.executeScript(getScale)).to.equals(targetScale);\n            });\n        });\n    }\n}\n\nmodule.exports = ScaleSwitcherTests;\n</code></pre>"},{"location":"Developer/Testing/testing/","title":"Test","text":"<ul> <li>Unit test documentation</li> <li>Browser test documentation</li> </ul>"},{"location":"Developer/Testing/unitTestVue/","title":"Unit tests in Vue","text":"<p>For an example test suite, see masterportal/src/modules/tools/scaleSwitcher/tests. Tests can be started in the Masterportal's root folder by either calling <code>npm run test:vue</code> (one-time run) or <code>npm run test:vue:watch</code> (updates on file changes).</p>"},{"location":"Developer/Testing/unitTestVue/#how-to-write-tests","title":"How to write tests","text":""},{"location":"Developer/Testing/unitTestVue/#test-file-location","title":"Test file location","text":"<p>Test files are to be saved with the file extension <code>.spec.js</code>. All test files are to be placed next to the component and store being tested in a separate <code>tests/unit</code> folder. For illustration, the following example was constructed using the <code>ScaleSwitcher</code> component.</p> <pre><code>src\n|-- modules\n|   |-- tools\n|   |   |-- scaleSwitcher\n|   |   |   |-- components\n|   |   |   |   |-- ScaleSwitcher.vue\n|   |   |   |   |-- ...\n|   |   |   |-- store\n|   |   |   |   |-- actionsScaleSwitcher.js\n|   |   |   |   |-- gettersScaleSwitcher.js\n|   |   |   |   |-- indexScaleSwitcher.js\n|   |   |   |   |-- mutationsScaleSwitcher.js\n|   |   |   |   |-- stateScaleSwitcher.js\n|   |   |   |\n|   |   |   |-- tests\n|   |   |   |   |-- end2end\n|   |   |   |   |   |-- ScaleSwitcher.e2e.js\n|   |   |   |   |-- unit\n|   |   |   |   |   |-- components\n|   |   |   |   |   |   |-- ScaleSwitcher.spec.js\n|   |   |   |   |   |-- store\n|   |   |   |   |   |   |-- actionsScaleSwitcher.spec.js\n|   |   |   |   |   |   |-- gettersScaleSwitcher.spec.js\n|   |   |   |   |   |   |-- mutationsScaleSwitcher.spec.js\n</code></pre>"},{"location":"Developer/Testing/unitTestVue/#file-structure","title":"File structure","text":"<p>The following sub-chapters contain example test files that may be used as guideline.</p>"},{"location":"Developer/Testing/unitTestVue/#component-test","title":"Component test","text":"<pre><code>// modules/tools/scaleSwitcher/components/ScaleSwitcher.vue\nimport Vuex from \"vuex\";\nimport {config, shallowMount, createLocalVue} from \"@vue/test-utils\";\nimport ScaleSwitcherComponent from \"../../../components/ScaleSwitcher.vue\";\nimport ScaleSwitcher from \"../../../store/indexScaleSwitcher\";\nimport {expect} from \"chai\";\nimport sinon from \"sinon\";\n\nconst localVue = createLocalVue();\n\nlocalVue.use(Vuex);\nconfig.mocks.$t = key =&gt; key;\n\ndescribe(\"src/modules/tools/scaleSwitcher/components/ScaleSwitcher.vue\", () =&gt; {\n    const scales = [\"1000\", \"5000\", \"10000\"],\n        mockMapGetters = {\n            scales: () =&gt; scales,\n            scale: sinon.stub(),\n            getView: sinon.stub()\n        },\n        mockMapActions = {\n            setResolutionByIndex: sinon.stub()\n        },\n        mockMapMutations = {\n            setScale: sinon.stub()\n        },\n        mockConfigJson = {\n            Portalconfig: {\n                menu: {\n                    tools: {\n                        children: {\n                            scaleSwitcher:\n                            {\n                                \"name\": \"translate#common:menu.tools.scaleSwitcher\",\n                                \"icon\": \"bi-arrows-angle-contract\",\n                                \"renderToWindow\": true\n                            }\n                        }\n                    }\n                }\n            }\n        };\n    let store;\n\n    beforeEach(() =&gt; {\n        store = new Vuex.Store({\n            namespaced: true,\n            modules: {\n                Tools: {\n                    namespaced: true,\n                    modules: {\n                        ScaleSwitcher\n                    }\n                },\n                Map: {\n                    namespaced: true,\n                    getters: mockMapGetters,\n                    mutations: mockMapMutations,\n                    actions: mockMapActions\n                }\n            },\n            state: {\n                configJson: mockConfigJson\n            }\n        });\n        store.dispatch(\"Tools/ScaleSwitcher/setActive\", true);\n    });\n\n    it(\"renders the scaleSwitcher\", () =&gt; {\n        const wrapper = shallowMount(ScaleSwitcherComponent, {store, localVue});\n\n        expect(wrapper.find(\"#scale-switcher\").exists()).to.be.true;\n    });\n\n    it(\"do not render the scaleSwitchers select if not active\", () =&gt; {\n        store.dispatch(\"Tools/ScaleSwitcher/setActive\", false);\n        const wrapper = shallowMount(ScaleSwitcherComponent, {store, localVue});\n\n        expect(wrapper.find(\"#scale-switcher\").exists()).to.be.false;\n    });\n\n    it(\"has initially set all scales to select\", () =&gt; {\n        const wrapper = shallowMount(ScaleSwitcherComponent, {store, localVue}),\n            options = wrapper.findAll(\"option\");\n\n        expect(options.length).to.equal(scales.length);\n        scales.forEach((scale, index) =&gt; {\n            expect(scale).to.equal(options.at(index).attributes().value);\n        });\n    });\n\n    it(\"select another scale changes scale in map\", async () =&gt; {\n        const wrapper = shallowMount(ScaleSwitcherComponent, {store, localVue}),\n            options = wrapper.findAll(\"option\");\n\n        options.at(1).trigger(\"change\");\n        await wrapper.vm.$nextTick();\n        expect(options.at(1).attributes().selected).to.equals(\"true\");\n        expect(options.at(0).attributes().selected).to.be.undefined;\n        expect(options.at(2).attributes().selected).to.be.undefined;\n        // maps scale change should be called\n        expect(mockMapActions.setResolutionByIndex.calledOnce).to.equal(true);\n\n        options.at(2).trigger(\"change\");\n        await wrapper.vm.$nextTick();\n        expect(options.at(2).attributes().selected).to.equals(\"true\");\n        // maps scale change should be called\n        expect(mockMapActions.setResolutionByIndex.calledTwice).to.equal(true);\n    });\n\n    it(\"method selectionChanged shall change currentScale\", async () =&gt; {\n        const wrapper = shallowMount(ScaleSwitcherComponent, {store, localVue}),\n            event = {\n                target: {\n                    value: scales[1],\n                    selectedIndex: 1\n                }\n            };\n\n        wrapper.vm.selectionChanged(event);\n        await wrapper.vm.$nextTick();\n\n        expect(store.state.Tools.ScaleSwitcher.currentScale).to.equals(scales[1]);\n    });\n});\n</code></pre>"},{"location":"Developer/Testing/unitTestVue/#storegetters-test","title":"Store/getters test","text":"<pre><code>// modules/tools/scaleSwitcher/store/gettersScaleSwitcher.js\nimport {expect} from \"chai\";\nimport getters from \"../../../store/gettersScaleSwitcher\";\nimport stateScaleSwitcher from \"../../../store/stateScaleSwitcher\";\n\nconst {currentScale} = getters;\n\ndescribe(\"src/modules/tools/scaleSwitcher/store/gettersScaleSwitcher.js\", () =&gt; {\n    describe(\"getCurrentScale\", () =&gt; {\n        it(\"returns the scale from state\", () =&gt; {\n            const state = {\n                currentScale: \"1000\"\n            };\n\n            expect(currentScale(state)).to.equals(\"1000\");\n        });\n    });\n    describe(\"testing default values\", () =&gt; {\n        it(\"returns the name default value from state\", () =&gt; {\n            expect(name(stateScaleSwitcher)).to.be.equals(\"common:menu.tools.scaleSwitcher\");\n        });\n        // (...) - test further default values\n    });\n});\n</code></pre>"},{"location":"Developer/Testing/unitTestVue/#storeactions-test","title":"Store/actions test","text":"<p>Note the use of the <code>testAction</code> function imported from <code>test/unittests/VueTestUtils</code>. This tool shortens the code required and provides a sound action test base.</p> <pre><code>// modules/tools/scaleSwitcher/store/actionsScaleSwitcher.js\nimport testAction from \"../../../../../../../test/unittests/VueTestUtils\";\nimport actions from \"../../../store/actionsScaleSwitcher\";\n\nconst {setActive} = actions;\n\ndescribe(\"src/modules/tools/scaleSwitcher/store/actionsScaleSwitcher.js\", () =&gt; {\n    describe(\"setActive\", () =&gt; {\n        const rootState = {\n            Map: {\n                scale: \"60033.65329850641\"\n            }\n        };\n\n        it(\"setActive(true) should set rounded currentScale\", done =&gt; {\n            const payload = true,\n                mutationActivePayload = true,\n                mutationScalePayload = 60000;\n\n            testAction(setActive, payload, {}, rootState, [\n                {type: \"setActive\", payload: mutationActivePayload},\n                {type: \"setCurrentScale\", payload: mutationScalePayload}\n            ], {}, done);\n\n        });\n        it(\"setActive(false) should not set currentScale\", done =&gt; {\n            const payload = false,\n                mutationActivePayload = false;\n\n            testAction(setActive, payload, {}, rootState, [\n                {type: \"setActive\", payload: mutationActivePayload}\n            ], {}, done);\n\n        });\n    });\n});\n</code></pre>"},{"location":"Developer/Testing/unitTestVue/#storemutations-test","title":"Store/mutations test","text":"<pre><code>// modules/tools/scaleSwitcher/store/mutationsScaleSwitcher.js\nimport {expect} from \"chai\";\nimport mutations from \"../../../store/mutationsScaleSwitcher\";\n\nconst {setCurrentScale} = mutations;\n\ndescribe(\"src/modules/tools/scaleSwitcher/store/mutationsScaleSwitcher.js\", () =&gt; {\n    describe(\"setCurrentScale\", () =&gt; {\n        it(\"sets the scale to state\", () =&gt; {\n            const state = {\n                currentScale: null\n            },\n            payload = \"1000\";\n\n            setCurrentScale(state, payload)\n            expect(state.currentScale).to.equals(\"1000\");\n        });\n    });\n});\n</code></pre>"},{"location":"Developer/Testing/unitTestVue/#about-the-libraries","title":"About the libraries","text":""},{"location":"Developer/Testing/unitTestVue/#mocha","title":"Mocha","text":"<p><code>describe</code> is used to declare a section. In the example, the outer <code>describe</code> is used to describe the module being tested. Nested <code>describe</code>s are used to name the function currently under test.</p> <p>You may use <code>describe.only</code> to run only a specific test section, or <code>describe.skip</code> to temporarily comment out tests during development.</p> <pre><code>describe(name, callback)\n</code></pre> <p>With <code>it</code>, the single test cases are encapsulated. For the first parameter, provide a descriptive text that outlines a property the method under test should have.</p> <p>For the second parameter, provide a callback function that checks whether this described property actually holds. Use <code>expect</code> (see below) for checks.</p> <p>The suffixes <code>.skip</code> and <code>.only</code> work the same way as described for <code>describe</code>.</p> <pre><code>it(testCaseDescription, callback)\n</code></pre> <p>The function <code>before</code> is used for test preparations for multiple <code>it</code> cases and is executed once within the surrounding <code>describe</code>.</p> <p>The function <code>beforeEach</code> is used for test preparations per <code>it</code> case and is therefore executed <code>once</code> per <code>it</code> in the surrounding <code>describe</code>.</p> <p>The functions <code>after</code> and <code>afterEach</code> work comparably after test execution.</p> <p>For more documentation regarding Mocha, please read the Mocha documentation pages.</p>"},{"location":"Developer/Testing/unitTestVue/#chai","title":"Chai","text":"<p>Each <code>it</code> case should contain a call to the <code>expect</code> function.</p> <p><code>expect</code> can be used to check one or multiple properties of an object.</p> <pre><code>expect(model.testMe()).to.be.true;\n\nexpect(model.testMe()).to.deep.equal({name: \"Jon Snow\"});\n</code></pre> <p>For more documentation regarding Chai, please read the Chai API reference.</p>"},{"location":"Developer/Testing/unitTestVue/#best-practices","title":"Best practices","text":"<p>A test should fail for a single reason. That is, per <code>it</code> only a single <code>expect</code> should be used, if possible.</p> <p>Test cases should be simple. Two small quick tests are preferred to one complex construct covering multiple cases.</p> <p>When testing, ponder which edge cases should be considered. That is, test with unusual values, e.g. extremely high or low values, or seemingly nonsensical inputs like <code>undefined</code> or the empty string.</p> <p>Test positively and negatively. That is, do not only ensure that the expected result is returned, but also validate no undesired side effects are produced.</p>"},{"location":"Developer/Testing/unitTestVue/#further-reading","title":"Further reading","text":"<ul> <li>Vue test utils</li> <li>Vue testing handbook</li> <li>Vue.js testing guide</li> <li>VueX testing</li> </ul>"},{"location":"Developer/Testing/unittestingBackbone/","title":"Backbone","text":""},{"location":"Developer/Testing/unittestingBackbone/#unit-tests-der-eines-backbone-moduls","title":"Unit Tests der eines Backbone-Moduls","text":"<p>Beispiel: masterportal/test/unittests/ExampleTest/</p> <p>Aufruf:</p> <p>npm run test</p>"},{"location":"Developer/Testing/unittestingBackbone/#wie-man-tests-schreibt","title":"Wie man Tests schreibt:","text":""},{"location":"Developer/Testing/unittestingBackbone/#ort","title":"Ort","text":"<p>Im Projektverzeichnis /test/unittests. In diesem Ordner ist ein Ordner names modules. Hier wird die Struktur unter masterportal/modules repliziert. D.h. Zu diesem modules Ordner sollte die Testdatei den gleichen relativen Pfad haben, wie die zu testende Datei zum modules-Ordner im Projektverzeichnis.</p> <p>Beispiel: soll die Datei masterportal/modules/tools/download/model.js getestet werden, dann geh\u00f6rt die Testdatei in masterportal/test/modules/tools/download/model.test.js</p> <p>Alle Tests zu einer Komponente z.b. einem Model sollen in eine Testdatei mit gleichem Namen und der Endung test.js abgelegt werden.</p> <p>Eine Testdatei beschreibt dabei immer nur genau eine zu testende Datei.</p> <p>Die Unittest werden beim pushen durch eine pre-push Hook gepr\u00fcft.</p>"},{"location":"Developer/Testing/unittestingBackbone/#struktur","title":"Struktur","text":"<p>BeispielStruktur: <pre><code>import {expect} from \"chai\";\nimport Model from \"./testModel.js\";\n\n    describe(\"testModul\", function () {\n        describe(\"getEmployeesByName\", function () {\n             before(function () {\n                /* runs before the first it() is executed */\n                console.log(\"before getEmployeesByName\");\n                model = new Model();\n                model.setEmployees([{name: \"Robin\", coffeeCount: 0}, {name: \"Jonas\", coffeeCount: 1}]);\n            });\n             // type test using expect\n            it(\"getEmployeesByName('Jonas') should return an array of length one\", function () {\n                expect(model.getEmployeesByName(\"Jonas\")).to.be.a(\"array\").with.lengthOf(1);\n            });\n            it(\"getEmployeesByName return an array containing \", function () {\n                expect(model.getEmployeesByName(\"Jonas\")).to.deep.include({name: \"Jonas\", coffeeCount: 1});\n            });\n        });\n</code></pre></p> <p>Describe wird benutzt um einen Abschnitt Kenntlich zu machen. Im Beispiel wird das \u00c4u\u00dfere describe benutzt, um zu beschreiben Welches Modul getestet wird. Im Inneren describe wird die Funktion, die gerade getestet werden soll beschrieben.</p> <p>Syntax: <pre><code>    describe(name, callback)\n</code></pre></p> <p>It kapselt die einzelnen Testcases. Als erster Parameter wird ein Text \u00fcbergeben der Beschreibt welche Eigenschaft die zu testende Methode haben sollte. Als zweiten Parameter wird eine Callback \u00fcbergeben, in der mit Hilfe eines expect (siehe unten) gepr\u00fcft wird, ob die Eingenschaft tats\u00e4chlich besteht.</p> <p>Syntax: <pre><code>    it(testcaseDescription, callback)\n</code></pre></p> <p>before ist eine Funktion, die benutzt werden kann, um Vorbereitungen f\u00fcr eine Gruppe von Tests durchzuf\u00fchren. Sie wird innerhalb einen describe genau einmal ausgef\u00fchrt.</p> <p>beforeEach ist eine Funktion, die benutzt werden kann, um Vorbereitungen f\u00fcr einzelne Testf\u00e4lle durchzuf\u00fchren. Sie wird f\u00fcr jedes it in einem describe einmal durchgef\u00fchrt.</p> <p>Mehr Infos</p>"},{"location":"Developer/Testing/unittestingBackbone/#die-testcases","title":"Die Testcases","text":"<p>Innerhalb eines it sollte ein expect stehen.</p> <p>expect kann genutzt werden, um eine oder mehrere Eigenschaften eines Objektes zu untersuchen.</p> <p>Syntax: <pre><code> expect(model.testMe()).to.be.true;\n\n expect(model.testMe()).to.deep.equal({name: \"Jon Snow\"});\n</code></pre></p> <p>Mehr Infos</p>"},{"location":"Developer/Testing/unittestingBackbone/#best-practices","title":"Best practices","text":"<p>Ein Test sollte immer m\u00f6glichst nur aus genau einem Grund fehlschlagen. D.h. pro It sollte m\u00f6glichst nur ein expect verwendet werden.</p> <p>Tests sollten m\u00f6glichst simple sein. Lieber schnell zwei kleine Tests schreiben als ein kompliziertes Konstrukt das mehrere Sachen auf einmal abdeckt.</p> <p>Man sollte sich \u00fcberlegen welche Corner-Cases man testen sollte. D.h. Ungew\u00f6hnliche F\u00e4lle testen, z.b. sehr hohe oder sehr geringe Eingaben oder unsinnige Eingaben, wie undefined oder ein Leerstring.</p> <p>Positiv und negativ testen. D.h. nicht nur testen, ob das erw\u00fcnschte Ergebnis produziert wird, sondern auch, dass keine Unerw\u00fcnschten Nebeneffekte auftreten.</p>"},{"location":"Developer/Tutorials/backboneTutorial/","title":"Backbone Tutorial (deprecated)","text":""},{"location":"Developer/Tutorials/backboneTutorial/#tutorial-ein-neues-tool-erstellen-scale-switcher","title":"Tutorial: Ein neues Tool erstellen (Scale-Switcher)","text":"<p>Eine Schritt f\u00fcr Schritt Dokumentation zur Erstellung eines neuen Tools (Moduls).</p>"},{"location":"Developer/Tutorials/backboneTutorial/#beispiel-anforderung","title":"Beispiel Anforderung","text":"<p>Wir wollen ein Tool schreiben, \u00fcber welches man den Kartenma\u00dfstab steuern kann. Dabei soll \u00fcber ein Drop-Down-Men\u00fc der Ma\u00dfstab ausgew\u00e4hlt werden. Sobald der Ma\u00dfstab gesetzt wurde, soll sich die Karte anpassen. Dar\u00fcber hinaus soll unser Tool auf \u00c4nderungen des Kartenma\u00dfstabes reagieren und den entsprechend aktuellen Ma\u00dfstab im Drop-Down-Menu anzeigen.</p>"},{"location":"Developer/Tutorials/backboneTutorial/#neues-tool-anlegen","title":"Neues Tool anlegen","text":"<p>In das Verzeichnis \"modules -&gt; tools\" wechseln und einen neuen Ordner erstellen. Aus dem Ordnernamen sollte ersichtlich sein, um was f\u00fcr ein Tool es sich dabei handelt - z.B. \"scale\". Die f\u00fcr dieses Tool ben\u00f6tigten Dateien anlegen. In der View (view.js) wird auf Interaktion mit dem Nutzer reagiert und das Tool neu gerendert. Dazu wird das Template (template.html) ben\u00f6tigt, welches den Bauplan des Tools enth\u00e4lt. Im Model (model.js) werden die Daten und deren Logik vorgehalten. Stylingparameter werden in der style.scss konfiguriert. <pre><code>-  modules\n   | -&gt; tools\n   |    |-&gt; scale\n   |    |    | -&gt; view.js\n   |    |    | -&gt; model.js\n   |    |    | -&gt; template.html\n   |    |    | -&gt; style.css\n</code></pre></p>"},{"location":"Developer/Tutorials/backboneTutorial/#scale-view-erstellen-und-zuruckgeben","title":"Scale View erstellen und zur\u00fcckgeben","text":"<p>Datei modules/tools/scale/view.js \u00f6ffnen und die View mit folgendem Standardschema erzeugen. <pre><code>const ScaleView = Backbone.View.extend({\n      // wird aufgerufen wenn die View erstellt wird\n      initialize: function () {\n      }\n    });\n\nexport default ScaleView;\n</code></pre></p>"},{"location":"Developer/Tutorials/backboneTutorial/#scale-view-initialisieren","title":"Scale View initialisieren","text":"<p>In die datei js/app.js wechseln, Scale View importieren und initialiseren. Darauf achten, dass das Tool grunds\u00e4tzlich erst nach dem Core initialsiert werden. (Dies gilt f\u00fcr jedes Modul) Das Initialsieren eines Tools erfolgt als switch-case Anweiszung innerhalb einer vorgesehene _.each Schleife Zurzeit ab Zeile 157. <pre><code>// View importieren\nimport ScaleView from \"../modules/tools/scale/view\";\n// View initialsieren\n _.each(Radio.request(\"ModelList\", \"getModelsByAttributes\", {type: \"tool\"}), function (tool) {\n      switch (tool.id) {\n          case \"scale\": {\n            new ScaleView({model: tool});\n            break;\n          }\n          ... // weitere Tools\n      }\n  });\n</code></pre></p>"},{"location":"Developer/Tutorials/backboneTutorial/#template-erstellen","title":"Template erstellen","text":"<p>Datei modules/tools/scale/template.html \u00f6ffnen, Template coden und mit Bootstrap Klassen versehen <pre><code>&lt;!DOCTYPE html&gt;\n&lt;select class=\"form-select form-select-sm\"&gt;\n  &lt;option&gt;1&lt;/option&gt;\n  &lt;option&gt;2&lt;/option&gt;\n  &lt;option&gt;3&lt;/option&gt;\n&lt;/select&gt;\n</code></pre></p>"},{"location":"Developer/Tutorials/backboneTutorial/#template-in-die-view-einbinden","title":"Template in die View einbinden","text":"<p>Das Template muss in die View eingebunden werden. Hierzu wird in einer neuen Variable (ScaleTemplate) das Template importiert und mithilfe von underscore (\"_\") als Template zur Verf\u00fcgung gestellt. Dieses Template wird dem View als Attribut \"template\" zugef\u00fcgt. <pre><code>   import ScaleTemplate from \"text-loader!./template.html\";\n\n\nconst ScaleView = Backbone.View.extend({\n    initialize: function () {\n    },\n    // underscore template Funktion\n    template: _.template(ScaleTemplate)\n});\n\nexport default ScaleView;\n</code></pre></p>"},{"location":"Developer/Tutorials/backboneTutorial/#template-initial-rendern","title":"Template initial rendern","text":"<p>Beim Laden der View, soll sich sofort das Tool in rendern wenn der Parameter \"isActive\" auf true gesetzt ist. Dazu wird in der initialize()-Funktion eine if-Abfrage definiert, welche die render-Funktion aufruft. Beim sp\u00e4teren aktivieren soll sich das Tool ebenfalls zeichnen. Dies wird \u00fcber einen Listener realisert, der auf Ver\u00e4ndeurngen des Paramters \"isActive\" wartet und anschlie\u00dfend die render-Funktion aufruft.In der render-Funktion passiert folgendes, wenn das Tool aktiv ist: Die View wird and das HTML win-body gezeichnet. Der View wird das Template zugef\u00fcgt. <pre><code>const ScaleView = Backbone.View.extend({\n    initialize: function () {\n        this.listenTo(this.model, {\n            \"change:isActive\": this.render\n        });\n        if (this.model.get(\"isActive\") === true) {\n            this.render(this.model, true);\n        }\n    },\n    template: _.template(ScaleTemplate),\n\n    // Konvention: Die Methode f\u00fcrs zeichnen der View, hei\u00dft render.\n    render: function (model, value) {\n        if (value) {\n            this.setElement(document.getElementsByClassName(\"win-body\")[0]);\n            this.$el.html(this.template());\n        }\n\n        return this;\n    }\n});\n\nexport default ScaleView;\n</code></pre> Jede View bekommt automatisch ein top level DOM Element (this.el) zugewiesen. Standardeinstellung f\u00fcr das DOM Element ist ein div Tag. In diesem Fall zeichnet sich beim rendern ein div an den Body. Dieser div ist bef\u00fcllt mit dem Inhalt des templates.</p>"},{"location":"Developer/Tutorials/backboneTutorial/#scss-regeln-definieren","title":"scss Regeln definieren","text":"<p>Datei modules/tools/scale/style.scss \u00f6ffnen und folgenden Code eingeben. <pre><code>.scale-switcher {\n    border: 2px solid red;\n}\n\nDamit es keine Probleme mit scss Regeln anderer Module/Tools gibt, wird \u00fcber eine definierte Klasse \"scale-switcher\" gestylt.\n</code></pre></p>"},{"location":"Developer/Tutorials/backboneTutorial/#model-erstellen-und-zuruckgeben","title":"Model erstellen und zur\u00fcckgeben","text":"<p>Datei modules/tools/scale/model.js \u00f6ffnen und Model definieren. Das Model erbt vom der Elternklasse Tool das im Core moduels/core/modelList/tool/model.js definiert ist. \u00dcber den Aufruf der Funktion superInitialize wird der Listener, der die Aktivierung der Tools regelt, von der Elternklasse \u00fcbernommen. Dem Parameter defaults werden alle Attribute mit einem Default-Wert eingetragen, die in diesem Model konfiguriert werden k\u00f6nnen (z.B. ein Bootstrap Icon). Dort wird auch das Attribute \"renderToWindow\" auf true gestezt, damit sich der Scale-Switcher im vererbten Fenster zeichnet. <pre><code>import Tool from \"../../core/modelList/tool/model\";\n\nconst ScaleModel = Tool.extend({\n    defaults: _.extend({}, Tool.prototype.defaults, {\n        icon: \"bi-arrows-angle-expand\",\n        renderToWindow: true\n    }),\n    // wird aufgerufen wenn das Model erstellt wird\n    initialize: function () {\n        this.superInitialize();\n    }\n});\n\nexport default ScaleModel;\n</code></pre></p>"},{"location":"Developer/Tutorials/backboneTutorial/#model-der-view-zuweisen","title":"Model der View zuweisen","text":"<p>In der ModelList modules/core/modelList/list.js wird das Model import und unter dem Eintrag model in dem vorgesehenen if-else Statement per new ScaleModel() instanziiert. <pre><code>import ScaleModel from \"../../tools/scale/model\";\n\n else if (attrs.type === \"tool\") {\n    else if (attrs.id === \"scale\") {\n        return new ScaleModel(attrs, options);\n    }\n    ... // weitere Tool-Models\n }\n</code></pre></p>"},{"location":"Developer/Tutorials/backboneTutorial/#setter-methoden-fur-das-model-schreiben","title":"Setter Methoden f\u00fcr das Model schreiben","text":"<p>Mithilfe von Setter-Methoden werden Member-Variablen im Model definiert bzw \u00fcberschrieben. Dazu werden Default-Werte eingetragen. <pre><code>const ScaleModel = Tool.extend({\n    defaults: _.extend({}, Tool.prototype.defaults, {\n        icon: \"bi-arrows-angle-expand\",\n        renderToWindow: true,\n        scales: \"\",\n        currentScale: \"\"\n    },\n    initialize: function () {\n        this.superInitialize();\n    },\n\n    // Setter f\u00fcr alle verf\u00fcgbaren Ma\u00dfst\u00e4be\n    setScales: function (value) {\n        this.set(\"scales\", value);\n    },\n    // Setter f\u00fcr den aktuellen Ma\u00dfstab\n    setCurrentScale: function (value) {\n        this.set(\"currentScale\", value);\n    }\n});\n\nexport default ScaleModel;\n</code></pre></p>"},{"location":"Developer/Tutorials/backboneTutorial/#mastabe-der-karte-abfragen-und-setzen","title":"Ma\u00dfst\u00e4be der Karte abfragen und setzen","text":"<p>Die Kommunikation mit anderen Modulen/Tools erfolgt \u00fcber Backbone.Radio. In diesem Fall mit dem MapView Modul (modules/core/mapView.js), in dem alle Scales definiert sind. Das MapView Modul stellt bereits \u00fcber Backbone.Radio die Funktion getScales zur Verf\u00fcgung, \u00fcber die alle Scales abgefragt werden k\u00f6nnen.  Diese Ma\u00dfst\u00e4be werden mittels Radio requested und im ScaleModel \u00fcber die entsprechende Setter-Funktion gesetzt. Um sicher zu gehen, dass die Map bereits geladen ist wird ein Listener definiert, der auf eine entsprechende Nachricht wartet, bevor getScales getriggert wird. <pre><code>const ScaleModel = Tool.extend({\n    initialize: function () {\n        this.superInitialize();\n        this.listenTo(Radio.channel(\"Map\"), {\n            \"isReady\": function () {\n                // initial alle Scales der Karte abfragen\n                this.setScales(Radio.request(\"MapView\", \"getScales\"));\n            }\n        });\n    },\n    ...\n});\n\nexport default ScaleModel;\n</code></pre></p>"},{"location":"Developer/Tutorials/backboneTutorial/#aktuellen-kartenmastab-abfragen-und-setzen","title":"Aktuellen Kartenma\u00dfstab abfragen und setzen","text":"<p>Analog zu \"getScales\" k\u00f6nnen von der MapView auch der aktuelle Ma\u00dfstab abgefragt werden. Hierzu werden die aktuellen Optionen requested und von diesem Objekt das Attribut \"scale\" verwendet. Dieses wird \u00fcber den entsprechenden Setter als Model-Variable gesetzt. <pre><code>const ScaleModel = Tool.extend({\n    initialize: function () {\n        this.superInitialize();\n        this.listenTo(Radio.channel(\"Map\"), {\n            \"isReady\": function () {\n                ...\n                this.setCurrentScale(Radio.request(\"MapView\", \"getOptions\").scale);\n            }\n        });\n    },\n    ...\n});\n\nexport default ScaleModel;\n</code></pre></p>"},{"location":"Developer/Tutorials/backboneTutorial/#model-attribute-ans-template-ubergeben","title":"Model Attribute ans Template \u00fcbergeben","text":"<p>Da sich das Template dynamisch aus den Daten des Models erzeugen soll, muss die render()-Funktion erweitert werden. Indem das Model an das Template \u00fcbergeben wird, k\u00f6nnen die Model-Variablen im Template verwendet werden. <pre><code>const ScaleView = Backbone.View.extend({\n    initialize: function () {\n        ...\n    },\n    template: _.template(ScaleTemplate),\n    render: function (model, value) {\n        // alle Model Attribute (currentScale, scales)\n        var attr = model.toJSON();\n\n        if (value) {\n            this.setElement(document.getElementsByClassName(\"win-body\")[0]);\n            this.$el.html(this.template(attr));\n        }\n\n        return this;\n    }\n});\n\nexport default ScaleView;\n</code></pre></p>"},{"location":"Developer/Tutorials/backboneTutorial/#mastabe-in-der-view-anzeigen-bzw-ins-template-scripten","title":"Ma\u00dfst\u00e4be in der View anzeigen bzw. ins Template scripten","text":"<p>Im Tag \"select\" wird die Klasse \"scale-switcher\" definiert.</p> <pre><code>&lt;!DOCTYPE html&gt;\n&lt;select class=\"form-select form-select-sm scale-switcher\"&gt;\n  &lt;% _.each(scales, function (scale) { %&gt;\n    &lt;% if (scale === currentScale) { %&gt;\n        &lt;option selected&gt;&lt;%= scale %&gt;&lt;/option&gt;\n    &lt;% }\n    else { %&gt;\n        &lt;option&gt;&lt;%= scale %&gt;&lt;/option&gt;\n    &lt;% } %&gt;\n  &lt;% }); %&gt;\n&lt;/select&gt;\n</code></pre>"},{"location":"Developer/Tutorials/backboneTutorial/#user-input-in-der-view-registrieren","title":"User Input in der View registrieren","text":"<p>In der View haben wir die M\u00f6glichkeit auf events im HTML zu h\u00f6ren. In diesem Fall wollen wir darauf h\u00f6ren, wenn sich im Drop-Down-Men\u00fc ein Eintrag ge\u00e4ndert hat. Wenn dieses Event eintrifft, \u00fcberschreiben wir im Model das Attribut \"currentScale\" mit dem Wert aus dem Drop-Down-Men\u00fc. Daf\u00fcr verwenden wir die Setter-Methode \"setCurrentScale\" des Models. <pre><code>const ScaleView = Backbone.View.extend({\n    ...,\n    events: {\n        // DOM Change Event f\u00fchrt this.setCurrentScale aus\n        \"change .form-select\": \"setCurrentScale\"\n    },\n    initialize: function () {...},\n    template: _.template(ScaleTemplate),\n    render: function () {...},\n    // Ruft im Model die Methode setCurrentScale auf\n    setCurrentScale: function (evt) {\n        this.model.setCurrentScale(parseInt(evt.target.value, 10));\n    }\n});\n\nexport default ScaleView;\n</code></pre></p>"},{"location":"Developer/Tutorials/backboneTutorial/#model-listener-auf-changecurrentscale","title":"Model Listener auf change:currentScale","text":"<p>Durch einen Listener wird bei Ver\u00e4nderung der currentScale der neue Ma\u00dfstab an die Mapview gesendet. Das Attribut \"currentScale\" wird \u00fcber die Getter-Funktion von Backbone geholt.</p> <pre><code>const ScaleModel = Tool.extend({\n    initialize: function () {\n        ...\n        this.listenTo(this, {\n            \"change:currentScale\": function () {\n                // Sendet den neuen Ma\u00dfstab an die MapView\n                // Dadurch zoomt die Karte in diesen Ma\u00dfstab\n                Radio.trigger(\"MapView\", \"setScale\", this.get(\"currentScale\"));\n            }\n        });\n        ...\n    },\n    setScales: function (value) {...},\n    setCurrentScale: function (value) {...}\n});\n\nexport default ScaleModel;\n</code></pre>"},{"location":"Developer/Tutorials/backboneTutorial/#model-listener-auf-mapview-changedoptions","title":"Model Listener auf MapView changedOptions","text":"<p>Wir wollen nicht nur den Ma\u00dfstab der Karte setzen k\u00f6nnen , sondern auch auf Ver\u00e4nderungen des Ma\u00dfstabs reagieren. \u00c4ndert sich der Kartenma\u00dfstab, soll sich in unserem Tool der aktuelle Ma\u00dfstab anpassen. Dazu wird in der Initialize-Funktion ein Listener geschrieben. Dieser H\u00f6rt per Radio auf ein \"changedOptions\"-Event des Radio-Channels \"MapView\". Sobald ein solches Event getriggert wird, wird mithilfe unserer Setter-Methode setCurrentScale() der aktuelle Ma\u00dfstab im Model \u00fcberschrieben. <pre><code>const ScaleModel = Tool.extend({\n    initialize: function () {\n        ...\n        this.listenTo(Radio.channel(\"MapView\"), {\n            // Wird ausgel\u00f6st wenn sich Zoomlevel, Center\n            // oder Resolution der Karte \u00e4ndert\n            \"changedOptions\": function (value) {\n                this.setCurrentScale(value.scale);\n            }\n        });\n        ...\n    },\n    ...\n});\n\nexport default ScaleModel;\n</code></pre></p>"},{"location":"Developer/Tutorials/backboneTutorial/#view-listener-auf-change-currentscale-im-model","title":"View Listener auf change currentScale im Model","text":"<p>Bisher erkennt nur das Model eine Ver\u00e4nderung des aktuellen Kartenma\u00dfstabes. Die View muss jedoch auch darauf h\u00f6ren, wenn sich in seinem Model der aktuelle Ma\u00dfstab ver\u00e4ndert. Denn dann muss sich das Tool neu zeichnen, sodass der aktuelle Ma\u00dfstab angezeigt wird. <pre><code>const ScaleView = Backbone.View.extend({\n    ...\n    events: {...}\n    initialize: function () {\n        this.listenTo(this.model, {\n            // Ver\u00e4ndert sich der Ma\u00dfstab der Karte und damit der currentScale\n            // des Models, wird die View neu gezeichnet.\n            \"change:currentScale\": this.render\n        });\n        ...\n    },\n    render: function () {...},\n    setCurrentScale: function (evt) {...}\n});\n\nexport default ScaleView;\n</code></pre></p>"},{"location":"Developer/Tutorials/backboneTutorial/#tool-in-der-configjson-konfigurieren","title":"Tool in der config.json konfigurieren","text":"<p>Um das Tool in einem Portal zu verwenden, muss dies in der config.json konfiguriert werden <pre><code>      \"tools\":\n      {\n        \"name\": \"Werkzeuge\",\n        \"icon\": \"bi-tools\",\n        \"children\": {\n          \"scale\":\n          {\n            \"name\": \"Scale Switcher\",\n            \"icon\": \"bi-arrows-angle-expand\"\n          },\n          ... // weitere Tools\n        }\n      }\n</code></pre></p>"},{"location":"Developer/Tutorials/vueTutorial/","title":"Vue tutorial: Creating a new ScaleSwitcher tool","text":"<p>This is a step-by-step instruction for creating a new tool based on Vue and Vuex.</p>"},{"location":"Developer/Tutorials/vueTutorial/#example-requirement","title":"Example requirement","text":"<p>A tool to control the map scale is needed. Scales are to be chosen from a drop-down menu. The map must react on selections by setting the appropriate zoom level. The tool is also supposed to react on scale changes from other sources (e.g. the zoom buttons) and update the drop-down menu accordingly.</p>"},{"location":"Developer/Tutorials/vueTutorial/#creating-a-new-tool","title":"Creating a new tool","text":"<p>Switch to the folder <code>src/modules/tools</code> and create a new folder. The folder name should indicate the nature of the tool - e.g. <code>scaleSwitcher</code>. Create folders <code>components</code> and <code>store</code> in that folder, and the required files as shown in the example file tree below.</p> <p>\ud83d\udca1 Hint: Testing is not part of this guide, but essential to merge a pull request. See our testing documentation for more information.</p> <pre><code>src\n|-- modules\n|   |-- tools\n|   |   |-- scaleSwitcher\n|   |   |   |-- components\n|   |   |   |   |-- ScaleSwitcher.vue\n|   |   |   |   |-- ...\n|   |   |   |-- store\n|   |   |   |   |-- actionsScaleSwitcher.js\n|   |   |   |   |-- constantsScaleSwitcher.js (not required in this example)\n|   |   |   |   |-- gettersScaleSwitcher.js\n|   |   |   |   |-- indexScaleSwitcher.js\n|   |   |   |   |-- mutationsScaleSwitcher.js\n|   |   |   |   |-- stateScaleSwitcher.js\n|   |   |   |\n|   |   |   |-- tests\n|   |   |   |   |-- end2end\n|   |   |   |   |   |-- ScaleSwitcher.e2e.js\n|   |   |   |   |-- unit\n|   |   |   |   |   |-- components\n|   |   |   |   |   |   |-- ScaleSwitcher.spec.js\n|   |   |   |   |   |-- store\n|   |   |   |   |   |   |-- actionsScaleSwitcher.spec.js\n|   |   |   |   |   |   |-- gettersScaleSwitcher.spec.js\n|   |   |   |   |   |   |-- mutationsScaleSwitcher.spec.js\n</code></pre>"},{"location":"Developer/Tutorials/vueTutorial/#creating-the-scaleswitchervue","title":"Creating the ScaleSwitcher.vue","text":"<p>Open <code>modules/tools/scaleSwitcher/components/ScaleSwitcher.vue</code> and create the Vue component as a single file component. The <code>Tool</code> component should be used here. It encompasses rendering and window (or sidebar) behavior that can be re-used in each tool.</p> <pre><code>&lt;script&gt;\nimport ToolTemplate from \"../../ToolTemplate.vue\";\n\nexport default {\n    name: \"ScaleSwitcher\",\n    components: {\n        ToolTemplate\n    }\n};\n&lt;/script&gt;\n\n&lt;template lang=\"html\"&gt;\n&lt;/template&gt;\n\n&lt;style lang=\"scss\"&gt;\n&lt;/style&gt;\n</code></pre>"},{"location":"Developer/Tutorials/vueTutorial/#register-the-scaleswitcher-component","title":"Register the ScaleSwitcher component","text":"<p>Open <code>src/modules/tools/stateTools.js</code>, import the ScaleSwitcher and add it to the component map. The ToolManager (<code>src/modules/tools/ToolManager.vue</code>) initializes the component and loads the ScaleSwitcher configuration from the <code>config.json</code>, making it available in its state. The paths <code>configJson.Portalconfig.menu.scaleSwitcher</code> and <code>configJson.Portalconfig.menu.tools.children.scaleSwitcher</code> will be searched for ScaleSwitcher configuration. See the config.json documentation. The ToolManager is part of the MapRegion's template. It will only be created when the v-if directive finds the <code>config.json</code> has become part of the global state.</p> <pre><code>import ScaleSwitcher from \"./scaleSwitcher/components/ScaleSwitcher.vue\";\n// ... import more tools\n\n/**\n * User type definition\n * @typedef {object} ToolsState\n * @property {object} componentMap contains all tool components\n * @property {object[]} configuredTools gets all tools that should be initialized\n */\nconst state = {\n    componentMap: {\n        scaleSwitcher: ScaleSwitcher\n        // ... more tools\n    },\n    configuredTools: []\n};\n\nexport default state;\n</code></pre>"},{"location":"Developer/Tutorials/vueTutorial/#defining-state","title":"Defining state","text":"<p>Vuex state is defined in the <code>modules/tools/scaleSwitcher/store/stateScaleSwitcher.js</code> file.</p> <pre><code>const state = {\n    // mandatory\n    active: false,\n    id: \"scaleSwitcher\",\n    // mandatory defaults for config.json parameters\n    name: \"common:menu.tools.scaleSwitcher\",\n    icon: \"bi-arrows-angle-expand\",\n    renderToWindow: true,\n    resizableWindow: true,\n    isVisibleInMenu: true,\n    deactivateGFI: false\n};\n\nexport default state;\n</code></pre>"},{"location":"Developer/Tutorials/vueTutorial/#defining-getters","title":"Defining getters","text":"<p>Add VueX getters to the <code>modules/tools/scaleSwitcher/store/gettersScaleSwitcher.js</code>. For simple getters that only retrieve state, the generator function <code>generateSimpleGetters</code> is used.</p> <pre><code>import {generateSimpleGetters} from \"../../../../app-store/utils/generators\";\nimport scaleSwitcherState from \"./stateScaleSwitcher\";\n\nconst getters = {\n    /**\n     * Returns an object of simple getters for a state object, where\n     * simple means that they will just return an entry for any key.\n     * For example, given a state object {key: value}, an object\n     * {key: state =&gt; state[key]} will be returned.\n     * This is useful to avoid writing basic operations.\n     * @param {object} state state to generate getters for\n     * @returns {object.&lt;string, function&gt;} object of getters\n     */\n    ...generateSimpleGetters(scaleSwitcherState)\n\n    // NOTE overwrite (or create additional) getters here if you need special behavior in them\n};\n\nexport default getters;\n</code></pre>"},{"location":"Developer/Tutorials/vueTutorial/#defining-state-mutations","title":"Defining state mutations","text":"<p>Add Vuex mutations to the <code>modules/tools/scaleSwitcher/store/mutationsScaleSwitcher.js</code>. For simple mutations that only write state, the generator function <code>generateSimpleMutations</code> is used.</p> <pre><code>import {generateSimpleMutations} from \"../../../../app-store/utils/generators\";\nimport state from \"./stateScaleSwitcher\";\n\nconst mutations = {\n    /**\n     * Creates from every state-key a setter.\n     * For example, given a state object {key: value}, an object\n     * {setKey:   (state, payload) =&gt; *   state[key] = payload * }\n     * will be returned.\n     */\n    ...generateSimpleMutations(state)\n\n     // NOTE overwrite (or create additional) mutations here if you need special behavior in them\n};\n\nexport default mutations;\n</code></pre>"},{"location":"Developer/Tutorials/vueTutorial/#defining-actions","title":"Defining actions","text":"<p>Vuex actions can be added to the <code>modules/tools/scaleSwitcher/store/actionsScaleSwitcher.js</code>. The ScaleSwitcher does not need any actions.<code>setToolActiveByConfig</code> is controlled globally by the ToolManager.</p> <ul> <li>The action <code>setToolActiveByConfig</code> sets a tool's value \"active\" to <code>true</code>, which results in rendering the tool. See property <code>active</code> in the Tool.vue.</li> </ul> <pre><code>const actions = {\n    // NOTE write actions here if you need them\n};\n\nexport default actions;\n</code></pre>"},{"location":"Developer/Tutorials/vueTutorial/#setting-up-the-storeindex-file","title":"Setting up the store/index file","text":"<p>Open the file <code>src/modules/tools/scaleSwitcher/store/indexScaleSwitcher.js</code>. Default export the previously created state, getters, mutations, and actions as an object. This represents a Vuex store, and is pluggable to another Vuex store as a module.</p> <p>\ud83d\udca1 The <code>namespaced: true</code> has to be set by convention. This prevents naming conflicts stores with modules.</p> <pre><code>import mutations from \"./mutationsScaleSwitcher\";\nimport actions from \"./actionsScaleSwitcher\";\nimport getters from \"./gettersScaleSwitcher\";\nimport state from \"./stateScaleSwitcher\";\n\nexport default {\n    namespaced: true,\n    state,\n    mutations,\n    actions,\n    getters\n};\n</code></pre>"},{"location":"Developer/Tutorials/vueTutorial/#add-the-vuex-module-to-the-global-store","title":"Add the Vuex module to the global store","text":"<p>Open <code>src/modules/tools/indexTools.js</code>, import <code>src/modules/tools/scaleSwitcher/store/indexScaleSwitcher.js</code>, and register it to the Vuex tool store as a module.</p> <pre><code>import state from \"./stateTools\";\nimport getters from \"./gettersTools\";\nimport mutations from \"./mutationsTools\";\nimport actions from \"./actionsTools\";\nimport ScaleSwitcher from \"./scale/store/indexScaleSwitcher\";\n// ... import further tools\n\nexport default {\n    namespaced: true,\n    modules: {\n        ScaleSwitcher\n        // ... further tools\n    },\n    state,\n    getters,\n    mutations,\n    actions\n};\n</code></pre>"},{"location":"Developer/Tutorials/vueTutorial/#use-getters-as-computed-properties-in-the-scaleswitchervue","title":"Use getters as computed properties in the ScaleSwitcher.vue","text":"<p>Import the vuex helper function <code>mapGetters</code> in the <code>modules/tools/scaleSwitcher/components/ScaleSwitcher.vue</code>, and the ScaleSwitchers getters. All getter keys of the ScaleSwitcher and the Vuex Map module getters <code>scale</code> and <code>scales</code> are added. For <code>scale</code>, a setter is provided. Using <code>scale</code>, the current Map scale can be retrieved, and <code>scales</code> represents all available Map scales.</p> <pre><code>import ToolTemplate from \"../../ToolTemplate.vue\";\nimport {mapGetters} from \"vuex\";\nimport getters from \"../store/gettersScaleSwitcher\";\n\n    ...\n    computed: {\n            ...mapGetters(\"Tools/ScaleSwitcher\", Object.keys(getters)),\n            ...mapGetters(\"Maps\", [\"scales\"]),\n            scale: {\n                get () {\n                    return this.$store.state.Map.scale;\n                },\n                set (value) {\n                    this.$store.commit(\"Maps/setScale\", value);\n                }\n            }\n        },\n    ...\n</code></pre>"},{"location":"Developer/Tutorials/vueTutorial/#use-mutations-as-methods-in-the-scaleswitchervue","title":"Use mutations as methods in the ScaleSwitcher.vue","text":"<p>Import the vuex helper function <code>mapMutations</code> in the <code>modules/tools/scaleSwitcher/components/ScaleSwitcher.vue</code>, and the ScaleSwitcher mutations. All mutation keys of the ScaleSwitcher are added.</p> <pre><code>import ToolTemplate from \"../../ToolTemplate.vue\";\nimport {mapGetters, mapMutations} from \"vuex\";\nimport getters from \"../store/gettersScaleSwitcher\";\nimport mutations from \"../store/mutationsScaleSwitcher\";\n\n    ...\n    methods: {\n        ...mapMutations(\"Tools/ScaleSwitcher\", Object.keys(mutations)),\n    },\n    ...\n</code></pre>"},{"location":"Developer/Tutorials/vueTutorial/#closing-the-scaleswitcher-window","title":"Closing the ScaleSwitcher window","text":"<p>Open the <code>modules/tools/scaleSwitcher/components/ScaleSwitcher.vue</code> and implement the lifecycle hook <code>created</code>. In this function, a <code>close</code> listener is added, listening to the Tool event <code>close</code> fired with the <code>emit</code> function, and calls its local method <code>close</code> as a reaction. This method sets the state variable <code>active</code> to <code>false</code>.</p> <p>\u26a0\ufe0f WARNING: Since the Masterportal core is currently still implemented in Backbone, the associated Backbone model must be deactivated as a final step.</p> <pre><code>    ...\n    created () {\n        this.$on(\"close\", this.close);\n    },\n    ...\n    methods: {\n        ...\n        close () {\n                this.setActive(false);\n\n                // set the backbone model to active=false in modellist for changing css class in menu (menu/desktop/tool/view.toggleIsActiveClass)\n                const model = Radio.request(\"ModelList\", \"getModelByAttributes\", {id: this.$store.state.Tools.ScaleSwitcher.id});\n\n                if (model) {\n                    model.set(\"isActive\", false);\n                }\n        }\n    },\n    ...\n</code></pre>"},{"location":"Developer/Tutorials/vueTutorial/#writing-the-scaleswitchervue-template","title":"Writing the ScaleSwitcher.vue template","text":"<p>In <code>modules/tools/scaleSwitcher/components/ScaleSwitcher.vue</code>, the template is yet to be defined. The ScaleSwitchers HTML is generated from this, and belongs to a nested template child of the Tool.</p> <ul> <li>The nested template defines the ScaleSwitcher contents to the Tool's v-slot toolBody: <code>&lt;template v-slot:toolBody&gt;</code></li> <li>The required parameters are forwarded to the tool</li> <li>The outher div needs a unique <code>id</code> and the v-if directive <code>\"active\"</code>. This ensures the contents are only rendered when <code>active</code> is <code>true</code>.</li> <li>In a v-for directive the <code>option</code> elements are created from the available <code>scales</code>.</li> </ul> <pre><code>&lt;template lang=\"html\"&gt;\n    &lt;ToolTemplate\n        :title=\"$t(name)\"\n        :icon=\"icon\"\n        :active=\"active\"\n        :render-to-window=\"renderToWindow\"\n        :resizable-window=\"resizableWindow\"\n        :deactivateGFI=\"deactivateGFI\"\n    &gt;\n        &lt;template v-slot:toolBody&gt;\n            &lt;div id=\"scale-switcher\" v-if=\"active\"&gt;\n                &lt;label\n                    for=\"scale-switcher-select\"\n                    class=\"col-md-5 col-form-label\"\n                &gt;\n                    Scale\n                &lt;/label&gt;\n                &lt;div class=\"col-md-7\"&gt;\n                    &lt;select\n                        id=\"scale-switcher-select\"\n                        v-model=\"scale\"\n                        class=\"font-arial form-select form-select-sm float-start\"\n                    &gt;\n                        &lt;option\n                            v-for=\"(scaleValue, i) in scales\"\n                            :key=\"i\"\n                            :value=\"scaleValue\"\n                        &gt;\n                            1:{{ scaleValue }}\n                        &lt;/option&gt;\n                    &lt;/select&gt;\n                &lt;/div&gt;\n            &lt;/div&gt;\n        &lt;/template&gt;\n    &lt;/ToolTemplate&gt;\n&lt;/template&gt;\n</code></pre>"},{"location":"Developer/Tutorials/vueTutorial/#defining-scss-styling-rules","title":"Defining scss styling rules","text":"<p>Within the <code>modules/tools/scaleSwitcher/components/ScaleSwitcher.vue*</code>, styles can be added to the <code>style</code> tag. Note that the <code>css/variables.scss</code> offers a set of predefined colors and values for usage in all components.</p> <pre><code>&lt;style lang=\"scss\" scoped&gt;\n    @import \"~variables\";\n\n    label {\n        margin-top: 7px;\n    }\n\n    #scale-switcher-select {\n        border: 2px solid $secondary;\n    }\n&lt;/style&gt;\n</code></pre>"},{"location":"Developer/Tutorials/vueTutorial/#reacting-to-scale-changes","title":"Reacting to scale changes","text":"<p>Within the <code>modules/tools/scaleSwitcher/components/ScaleSwitcher.vue</code> template, add a change listener to the <code>select</code> element calling the <code>setResolutionByIndex</code> method.</p> <pre><code>&lt;select\n    id=\"scale-switcher-select\"\n    class=\"font-arial form-select form-select-sm float-start\"\n    @change=\"setResolutionByIndex($event.target.selectedIndex)\"\n&gt;\n</code></pre> <p>The Map offers a Vuex action <code>setResolutionByIndex</code>. Import the Vuex helper function <code>mapActions</code> for easy access. Calling it will set the map's resolution to a new value.</p> <pre><code>import {mapGetters, mapActions, mapMutations} from \"vuex\";\n\n    ...\n    methods: {\n        ...mapActions(\"Maps\", [\"setResolutionByIndex\"]),\n        ...\n    }\n    ...\n</code></pre>"},{"location":"Developer/Tutorials/vueTutorial/#internationalization","title":"Internationalization","text":"<p>Labels should be available in multiple languages. For this, create localization keys in the translation files <code>locales/[de/en]/common.json</code>. Read the internationalization documentation for more details.</p> <pre><code>\"modules\": {\n    \"tools\": {\n        \"scaleSwitcher\": {\n            \"label\": \"Scales\"\n        },\n        ... // further translations\n</code></pre> <p>The value can be accessed directly in the template by using the globally available <code>$t</code> function.</p> <pre><code>&lt;label\n    for=\"scale-switcher-select\"\n    class=\"col-md-5 col-form-label\"\n&gt;\n    {{ $t(\"modules.tools.scaleSwitcher.label\") }}\n&lt;/label&gt;\n</code></pre>"},{"location":"Developer/Tutorials/vueTutorial/#configjson-tool-configuration","title":"config.json tool configuration","text":"<p>To make the tool usable within a portal, it has to be configured in the portal's <code>config.json</code>.</p> <pre><code>{\n    \"tools\": {\n        \"name\": \"Tools\",\n        \"icon\": \"bi-wrench\",\n        \"children\": {\n            \"scaleSwitcher\": {\n                \"name\": \"translate#common:menu.tools.scaleSwitcher\",\n                \"icon\": \"bi-arrows-angle-contract\",\n                \"renderToWindow\": true\n            }\n        }\n    }\n}\n</code></pre> <p>The tool's name translation has to be added to the <code>locales/[de/en]/common.json</code> files.</p> <pre><code>{\n    \"common\": {\n        \"menu\": {\n            \"tools\": {\n                \"scaleSwitcher\": \"Switch scale\"\n            }\n        }\n    }\n}\n</code></pre>"},{"location":"Developer/VueComponents/Alerting/","title":"The Alerting module","text":"<p>The Masterportal can display hints to users by using the Alerting module. Both simple texts and HTML may be displayed.</p> <p>Since multiple alert messages may be shown at once, a pool of all available alerts can be shown with multipleAlert: true. On adding a valid alert to this pool, a modal with all currently active alerts is shown.</p> <p>An alert may be added in this fashion:</p> <pre><code>import store from \"[...]/src/app-store/index\";\n\n// [...]\n\nstore.dispatch(\"Alerting/addSingleAlert\", {\n    \"category\": \"Error\",\n    \"content\": \"This wasn't supposed to happen! (Error Code 1234)\",\n    \"displayClass\": \"error\",\n    \"multipleAlert\": true\n});\n</code></pre> <p>Another example: The following alert is shown from October '20 to November '21 and requires a manual reading confirmation. Three months after confirmation, it will be shown again.</p> <pre><code>import store from \"[...]/src/app-store/index\";\n\n// [...]\n\nstore.dispatch(\"Alerting/addSingleAlert\", {\n    \"category\": \"Info\",\n    \"confirmText\": \"Starting any minute now ... !\",\n    \"content\": \"Please prepare the quarterly reports!\",\n    \"displayClass\": \"warning\",\n    \"displayFrom\": \"2020-10-01 00:00:00\",\n    \"displayUntil\": \"2021-11-01 00:00:00\",\n    \"mustBeConfirmed\": true,\n    \"once\": {months: 3}\n});\n</code></pre>"},{"location":"Developer/VueComponents/Alerting/#parameters-for-alert-creation","title":"Parameters for alert creation","text":"Name Required Type Default Description category no String \"Info\" Header text and, at the same time, reference value for grouping alerts of the same category. confirmText no String \"mark as read\" Text of a clickable link to indicate the alert has been read. Only required when <code>mustBeConfirmed</code> is set to <code>true</code>. content yes String \"\" Message. May contain HTML. displayClass no String \"info\" Alert wrapper element CSS class. Available pre-defined values: <code>\"info\"</code>, <code>\"warning\"</code>, <code>\"error\"</code> displayFrom no Boolean/String false Time from which the alert may be displayed. When set to <code>false</code>, no limitation is applied. Format: \"YYYY-MM-DD HH-II-SS\" displayUntil no Boolean/String false Time to which the alert may be displayed. When set to <code>false</code>, no limitation is applied. Format: \"YYYY-MM-DD HH-II-SS\" mustBeConfirmed no Boolean false Flag indicating whether the alert requires a manual read confirmation. multipleAlert no Boolean false Flag indicating whether the alert should be added to the current alert list (true) or is shown as a single alert (false) once no Boolean/Object false If <code>false</code>, this alert may be shown on each visit. If <code>true</code>, it's only shown once. You may also define an object indicating a time span after which the alert may be displayed again: <code>{\"years\": 1, \"months\": 3, \"days\": 5, \"hours\": 15, \"minutes\": 10, \"seconds\": 3, \"milliseconds\": 123}</code> (https://momentjs.com/docs/#/parsing/object/). All keys are optional."},{"location":"Developer/VueComponents/Alerting/#initially-loading-an-alerting-configuration","title":"Initially loading an Alerting configuration","text":"<p>The Alerting module allows specifying an URL in the <code>config.js</code> parameter <code>alerting.fetchBroadcastUrl</code>, e.g. <code>\"https://localhost:9001/portal/master/resources/broadcastedPortalAlerts.json\"</code>. If such a parameter is set, the module will load the linked configuration file and create the alerts. Multiple alerts are allowed by default. This may e.g. be used to inform users of new versions or planned down-times. An arbitrary amount of portals may be supplied with such a central user information file.</p> <p>Configuration file example:</p> <pre><code>{\n  \"globalAlerts\": [\"AlertId3\"],\n\n  \"restrictedAlerts\": {\n    \"https://myOfflinePortal.com/\": [\"AlertId1\", \"AlertId2\"],\n    \"https://myLegacyPortal.com/\": [\"AlertId4\"]\n  },\n\n  \"alerts\": {\n    \"AlertId1\": {\n      \"displayClass\": \"error\",\n      \"category\": \"Error\",\n      \"content\": \"The server is in maintenance mode until November 10, 2020.\",\n      \"displayFrom\": \"2020-11-09 00:00:00\",\n      \"displayUntil\": \"2020-11-10 00:00:00\",\n      \"mustBeConfirmed\": false,\n      \"once\": false\n    },\n    \"AlertId2\": {\n      \"displayClass\": \"info\",\n      \"category\": \"Info\",\n      \"content\": \"Since 11.11. there is a new version of the portal!\",\n      \"displayFrom\": \"2020-11-11 00:00:00\",\n      \"displayUntil\": \"2020-11-30 00:00:00\",\n      \"mustBeConfirmed\": true,\n      \"once\": true\n    },\n    \"AlertId3\": {\n      \"displayClass\": \"info\",\n      \"category\": \"Welcome!\",\n      \"content\": \"Welcome to the Portal!\",\n      \"once\": {\"years\": 1}\n    },\n    \"AlertId4\": {\n      \"displayClass\": \"warning\",\n      \"category\": \"Warning\",\n      \"content\": \"This portal will be deactivated on 01/01/2021!\",\n      \"displayFrom\": \"2020-12-01 00:00:00\",\n      \"displayUntil\": \"2020-12-31 23:59:59\",\n      \"once\": {\"days\": 1}\n    }\n  }\n}\n</code></pre> <p>Within <code>\"globalAlerts\"</code> an array may be specified that holds alert IDs to be loaded on all portals.</p> <p>In the <code>\"restrictedAlerts\"</code> object alerts only for specific portals may be specified. For these, the key is the portal URL, and the value an array of alert IDs to be resolved by the portal at that URL.</p> <p>Within <code>\"alerts\"</code>, alerts may be defined as previously defined. Each alert holds an ID for reference, which is its respective key in the <code>\"alerts\"</code> object.</p>"},{"location":"Developer/VueComponents/BasicDragHandle/","title":"The BasicDragHandle Component","text":"<p>This component may be used to make a container \"draggable\". The component itself is the handle to move the container.</p> <p>Component may be used like this:</p> <pre><code>&lt;script&gt;\n\nimport BasicDragHandle from \"./share-components/BasicDragHandle.vue\";\n\n// [...]\n\nexport default {\n    name: \"MyComponent\",\n    components: {\n        BasicDragHandle\n    },\n    methods: {\n        onStartDragging: function (event) {\n            console.log(event);\n        },\n        onEndDragging: function (event) {\n            console.log(event);\n        },\n        onLeftScreen: function (event) {\n            console.log(event);\n        },\n        onDragging: function (event) {\n            console.log(event);\n        }\n    }\n};\n&lt;/script&gt;\n\n&lt;template&gt;\n    &lt;div id=\"containment-element\"&gt;\n        &lt;div \n            id=\"container-to-drag\"\n            @startDragging=\"onStartDragging\"\n            @endDragging=\"onEndDragging\"\n            @leftScreen=\"onLeftScreen\"\n            @dragging=\"onDragging\"\n        &gt;\n            &lt;BasicDragHandle\n                targetEl=\"#container-to-drag\"\n                margin=\"12\"\n                grid=\"10\"\n            &gt;\n                &lt;p&gt;\n                    Use this drag handle!\n                &lt;/p&gt;\n            &lt;/BasicDragHandle&gt;\n        &lt;/div&gt;\n    &lt;/div&gt;\n&lt;/template&gt;\n\n&lt;style lang=\"scss\" scoped&gt;\n    #containment-element {\n        position:relative;\n        height:500px;\n        width:500px;\n        border:1px solid #AAAAAA;\n    }\n    #container-to-drag {\n        position:absolute;\n        width:100px;\n        height:100px;\n        background-color:#FF0000;\n\n        p {\n            position:absolute;\n            top:0;\n            right:0;\n            left:0;\n            height:20px;\n            text-align:center;\n            cursor:move;\n        }\n    }\n&lt;/style&gt;\n</code></pre>"},{"location":"Developer/VueComponents/BasicDragHandle/#parameters-of-component","title":"Parameters of Component","text":"Name Required Type Default Description targetEl no String \"\" Selector used on document node downwards to find the \"draggable\" node. If omitted, param \"targetSel\" will be used instead. targetSel no String \"offsetParent\" Selector to find \"draggable\" node upwards, starting at handle itself. If \"offsetParent\" ist used as value, \"draggable\" element will be the offsetParent node. This param is only used, when \"targetEl\" is omitted. grid no Number 1 A snapping grid may be defined with this param. isEnabled no Boolean true Flag determining if component is enabled. margin no Number 0 Margin of \"draggable\" element respective to offsetParent. marginTop no Number 0 Margin-top of \"draggable\" element respective to offsetParent. Overrides \"margin\". marginRight no Number 0 Margin-right of \"draggable\" element respective to offsetParent. Overrides \"margin\". marginBottom no Number 0 Margin-bottom of \"draggable\" element respective to offsetParent. Overrides \"margin\". marginLeft no Number 0 Margin-left of \"draggable\" element respective to offsetParent. Overrides \"margin\"."},{"location":"Developer/VueComponents/BasicDragHandle/#events","title":"Events","text":"<p>BasicDragHandle Component throws following events: startDragging, endDragging, leftScreen, dragging</p>"},{"location":"Developer/VueComponents/BasicResizeHandle/","title":"The BasicResizeHandle Component","text":"<p>This component may be used to make a container \"resizable\". The components is the handle itself.</p> <p>Component may be used like this:</p> <pre><code>&lt;script&gt;\n\nimport BasicResizeHandle from \"./share-components/BasicResizeHandle.vue\";\n\n// [...]\n\nexport default {\n    name: \"MyComponent\",\n    components: {\n        BasicResizeHandle\n    },\n    methods: {\n        onStartResizing: function (event) {\n            console.log(event);\n        },\n        onEndResizing: function (event) {\n            console.log(event);\n        },\n        onLeftScreen: function (event) {\n            console.log(event);\n        },\n        onResizing: function (event) {\n            console.log(event);\n        }\n    }\n};\n&lt;/script&gt;\n\n&lt;template&gt;\n    &lt;div \n        id=\"container-to-resize\"\n        @startResizing=\"onStartResizing\"\n        @endResizing=\"onEndResizing\"\n        @leftScreen=\"onLeftScreen\"\n        @resizing=\"onResizing\"\n    &gt;\n        &lt;BasicResizeHandle\n            v-for=\"hPos in ['tl', 't', 'tr', 'r', 'br', 'b', 'bl', 'l']\"\n            :key=\"hPos\"\n            :hPos=\"hPos\"\n            targetEl=\"#container-to-resize\"\n            grid=\"10\"\n            minW=\"50\"\n            minH=\"50\"\n        /&gt;\n    &lt;/div&gt;\n&lt;/template&gt;\n\n&lt;style lang=\"scss\" scoped&gt;\n    #container-to-resize {\n        width:100px;\n        height:100px;\n        background-color:#AAAAAA;\n\n        .basic-resize-handle {\n            position:absolute;\n            width:6px;\n            height:6px;\n            background-color:#FF0000;\n        }\n        #basic-resize-handle-tl { top:0px; left:0px; }\n        #basic-resize-handle-t { top:0px; left:50%; }\n        #basic-resize-handle-tr { top:0px; right:0px;}\n        #basic-resize-handle-r { top:50%; right:0px;}\n        #basic-resize-handle-br { bottom:0px; right:0px;}\n        #basic-resize-handle-b { bottom:0px; right:50%;}\n        #basic-resize-handle-bl { bottom:0px; left:0px;}\n        #basic-resize-handle-l { bottom:50%; left:0px;}\n    }\n&lt;/style&gt;\n</code></pre>"},{"location":"Developer/VueComponents/BasicResizeHandle/#parameters-of-component","title":"Parameters of Component","text":"Name Required Type Default Description targetEl no String \"\" Selector used on document node downwards to find the \"draggable\" node. If omitted, param \"targetSel\" will be used instead. targetSel no String \"offsetParent\" Selector to find \"draggable\" node upwards, starting at handle itself. If \"offsetParent\" ist used as value, \"draggable\" element will be the offsetParent node. This param is only used, when \"targetEl\" is omitted. grid no Number 1 A snapping grid may be defined with this param. hPos no String \"bl\" Handle position. This position only changes handle's behaviour, not its actual position on screen. Possible Values are \"tl\" (top left), \"t\" (top), \"tr\" (top right), \"r\" (right), \"br\" (bottom right), \"b\" (bottom), \"bl\" (bottom left), \"l\" (left). symResize no Boolean false Flag for symmetric resizing. If true, the element will scale relative to its center point. If false, it will scale relative to its opposing handle's point. minW no Number -Infinity Minimum width of element. maxW no Number Infinity Maximum width of element. minH no Number -Infinity Minimum height of element. minH no Number Infinity Maximum height of element."},{"location":"Developer/VueComponents/BasicResizeHandle/#events","title":"Events","text":"<p>BasicResizeHandle Component throws following events: startResizing, endResizing, leftScreen, resizing</p>"},{"location":"Developer/VueComponents/confirmAction/","title":"The ConfirmAction module","text":"<p>A simple modal dialog asking the user to confirm an action or make a decision. Callback functions can be defined for confirmation, rejection, and closing the modal dialog.</p> <p>A confirmation action may be added in this fashion:</p> <pre><code>import store from \"[...]/src/app-store/index\";\n\n// [...]\n\nconst\n    confirmCallback = function () {\n        console.log(\"Confirmed\");\n    },\n    denyCallback = function () {\n        console.log(\"Denied\");\n    },\n    escapeCallback = function () {\n        console.log(\"Escaped\");\n    },\n    confirmActionSettings = {\n        actionConfirmedCallback: confirmCallback,\n        actionDeniedCallback: denyCallback,\n        actionEscapedCallback: escapeCallback,\n        confirmCaption: \"OK\",\n        textContent: \"Do you want to delete this important document?\",\n        denyCaption: \"Deny\",\n        forceClickToClose: true,\n        headline: \"Warning\"\n    };\n\nstore.dispatch(\"ConfirmAction/addSingleAction\", confirmActionSettings);\n</code></pre>"},{"location":"Developer/VueComponents/confirmAction/#parameters-used-to-create-a-confirmaction","title":"Parameters used to create a ConfirmAction","text":"Name Required Type Default Description actionConfirmedCallback no Function false Callback function fired on clicking the confirmation button. actionDeniedCallback no Function false Callback function fired on clocking the deny button. confirmCaption no String \"common:modules.confirmAction.defaultConfirmCaption\" Confirm button text. textContent no String \"common:modules.confirmAction.defaultCopy\" Display text describing the situation to be resolved. denyCaption no String \"common:modules.confirmAction.defaultDenyCaption\" Deny button text. forceClickToClose no Boolean true Flag indicating whether the modal dialog may only be closed on clicking the X button. headline no String \"common:modules.confirmAction.defaultHeadline\" Header text."},{"location":"Developer/VueComponents/layerSelector/","title":"The layerSelector module","text":"<p>Module to configure interactions with the layertree and the map, executed on a defined event.</p>"},{"location":"Developer/VueComponents/layerSelector/#configuration-of-the-module","title":"Configuration of the module","text":"Name Required Type Default Description events yes Object[] Events to be executed from other modules to select or add layers in the layertree. default no Object Object to overwirte the missing parts in the events objects. <p>Example:</p> <pre><code>{\n    \"events\": [\n        {\n            \"event\": \"eventName\",\n            \"deselectPreviousLayers\": \"always\",\n            \"layerIds\": [\"1001\"]\n        },\n        {\n            \"event\": \"eventName\",\n            \"deselectPreviousLayers\": \"always\",\n            \"layerIds\": [\"1000\"],\n            \"extent\": [550697, 5927004, 579383, 5941340],\n        }\n    ],\n    \"default\": {\n        \"openFolderForLayerIds\": [],\n    }\n}\n</code></pre>"},{"location":"Developer/VueComponents/layerSelector/#layerselectorevents","title":"layerSelector.events","text":"<p>Array of Objects. In a single object, interactions with the layertree and the map can be configured. Those interactions are executed on a defined event.</p> Name Required Type Default Description event yes String The name of the event that can trigger actions. For possible values and their meanings see the table below. showLayerId no String Layer ID of the layer to be shown in the layer tree. Opens the layer tree and extends all correspoding folders at the location of the defined layer. Only in destop mode. layerIds no String[] Layer IDs to select in the layer tree. openFolderForLayerIds no String[] List of Layer IDs to open their folders in the layer tree. extent no Integer[] Bounding Box to zoom to when this event is triggered. deselectPreviousLayers no String always Deselects all selected layers if it has the value 'always'. For value 'none' nothing happens. <p>Example:</p> <pre><code>{\n    \"events\": [{\n        \"event\": \"measure_geometry\",\n        \"showLayerId\": \"1234\",\n        \"layerIds\": [\"2345\", \"3456\", \"4567\"],\n        \"openFolderForLayerIds\": [\"2345\"],\n        \"extent\": [550697, 5927004,579383, 5941340],\n        \"deselectPreviousLayers\": \"always\",\n    }]\n}\n</code></pre> <p>Values for event</p> event Description comparefeatures_select when a layer is selected for comparison in CompareFeatures module fileimport_imported when files were successfully imported in FileImport module measure_geometry when the selected geometry value changed in Measure module <p>Information for developer</p> <p>To add more events, just add an entry into the eventMap attribute in stateLayerSelector.js</p>"},{"location":"Setup/About/","title":"About","text":"<p>This section of the documentation helps new users learn the Masterportal software. This site provides an overview of the contents of this part of the documentation.</p> <p>Currently, there is only one page available:</p> <p> Quick Start Tutorial</p>"},{"location":"Setup/quick-start-tutorial/","title":"Quick-Start Tutorial","text":"<p>Let's create your own portal in a few easy steps!</p>"},{"location":"Setup/quick-start-tutorial/#host-an-example-application-on-your-server","title":"Host an example application on your server","text":"<ol> <li> <p>To set up your portal, please download the last stable version from Bitbucket by clicking the link provided.</p> </li> <li> <p>To publish your portal (e.g. to the Internet) it's required to host the portal with a web server. For this purpose, move the ZIP file to your web server (e.g. to the <code>htdocs</code> folder of an Apache server) and unpack the archive.</p> </li> <li> <p>The folder <code>examples</code> holds the following file and folder structure:</p> <ul> <li>Basic/<ul> <li>resources/<ul> <li>img/<ul> <li>...</li> </ul> </li> <li>rest-services-internet.json</li> <li>services-internet.json</li> <li>style_v3.json</li> </ul> </li> <li>config.js</li> <li>config.json</li> <li>index.html</li> </ul> </li> <li>mastercode/<ul> <li>[version]/<ul> <li>css/<ul> <li>masterportal.css</li> </ul> </li> <li>img/<ul> <li>compass/<ul> <li>... (images for display of the 3d mode compass)</li> </ul> </li> <li>tools<ul> <li>draw<ul> <li>... (svg files used by the draw tool)</li> </ul> </li> </ul> </li> <li>ajax-loader.gif</li> <li>mapMarker.svg</li> </ul> </li> <li>js/<ul> <li>masterportal.js</li> </ul> </li> </ul> </li> </ul> </li> </ul> <p>The folder Basic comes with an example application providing the portal-specific configuration files config.js, config.json, and the index.html.</p> <p>Also contained is the folder resources providing the global configuration files services.json, rest-services.json, and style.json, as well as the required images (folder img) of this portal instance.</p> <p>The folder mastercode contains the compressed JavaScript and CSS files of the Masterportal. Here, the folder img holds the compass, loading screen images, the MapMarker icon, and svg files used in the draw tool.</p> </li> <li> <p>You may decide to change the name of the folder examples. Should you decide to do so, also change \"examples\" to your new folder name in the URLs that follow. The portal should now be available by following this link.</p> <ul> <li>https://[web-server-name]/examples/Basic/index.html</li> </ul> </li> </ol>"},{"location":"Setup/quick-start-tutorial/#configure-example-application","title":"Configure example application","text":"<p>By following these steps you can modify the example application to become your custom portal:</p> <ol> <li> <p>If need be, change the global configuration files in the folder resources to add aerial view images of other regions, to add icons, to modify existing icons, and so on.</p> </li> <li> <p>Please subsequently duplicate the folder Basic and rename it to your portal name, e.g. my_portal.</p> </li> <li> <p>You may now modify the configuration files config.js and config.json within this new folder my_portal. For example, you may define which layers are to appear in the layer tree, configure the tools required, customize the background layers, change the display name of the portal, and so on. For all options, please refer to the full documentation of the config.js and config.json files.</p> </li> <li> <p>Your new portal may now be opened by navigating to the URL:</p> <ul> <li>https://[web-server-name]/examples/my_portal/index.html</li> </ul> </li> </ol>"},{"location":"User/About/","title":"About the User Documentation","text":"<p>This section of the documentation contains all the information for admins that want to create portals with the Masterportal software. This site provides an overview of the contents of this part of the documentation.</p>"},{"location":"User/About/#configuration-files","title":"Configuration files","text":"<p>The Masterportal builds on global and portal-specific configuration files alike.</p>"},{"location":"User/About/#global-configuration-files","title":"Global configuration files","text":"<p>These files describe central information to be used by multiple portals:</p> <ul> <li>services.json: lists all available layers</li> <li>rest-services.json: URLs to various external services</li> <li>style.json: holds style definitions for vector layers</li> </ul>"},{"location":"User/About/#portal-specific-configuration-files","title":"Portal-specific configuration files","text":"<p>These files define the distinguishing features of an instance:</p> <ul> <li>config.js: Configuration of paths to further configuration files and services</li> <li>config.json: Configuration of portal appearance and available contents</li> </ul> <p>The following figure schematically demonstrates the ensemble of files. Please mind that the files index.html, config.js, and config.json must be placed in the same path.</p> <p></p>"},{"location":"User/About/#url-parameters","title":"URL parameters","text":"<p>The Masterportal can be called with URL parameters to e.g. call functions initially or describe a view.</p>"},{"location":"User/About/#proxies","title":"Proxies","text":"<p>For requesting attribution information via <code>WMS GetFeatureInfo</code> and for loading WFS layers, proxies have to be defined.</p>"},{"location":"User/urlParameter/","title":"URL parameters","text":"<p>Special URL parameters exist to change configuration details or execute initial actions on opening the Masterportal. The URL parameter list begins with a <code>\"?\"</code>, and individual parameters are separated with <code>\"&amp;\"</code> characters. The Parameters are not case sensitive.</p> <p>Example: https://geoportal-hamburg.de/Geoportal/geo-online/?Map/layerIds=453,1731,2426&amp;visibility=true,true,false&amp;transparency=0,40,0&amp;Map/center=[565874,5934140]&amp;Map/zoomlevel=2</p>"},{"location":"User/urlParameter/#parameter-list","title":"Parameter list","text":"Name Description Example Alternative ALTITUDE Only works when used in combination with <code>MAP/MAPMODE</code>. Sets the altitude in 3D mode. <code>?Map/mapMode=3D&amp;altitude=127</code> BEZIRK Deprecated in 3.0.0. Please use <code>\"ZOOMTOGEOMETRY\"</code> instead. <code>?bezirk=wandsbek</code> CENTER Moves the view to center the given coordinate. If <code>PROJECTION</code> is given as parameter, the <code>CENTER</code> coordinates are expected to be given in it, and are translated to the map's coordinate reference system before usage. If <code>PROJECTION</code> is not given, the <code>CENTER</code> coordinates must be given in the map's configured coordinate reference system; see config.namedProjections.epsg. <code>?center=553925,5931898</code> MAP/CENTER Moves the view to center the given coordinate. If <code>PROJECTION</code> is given as parameter, the <code>CENTER</code> coordinates are expected to be given in it, and are translated to the map's coordinate reference system before usage. If <code>PROJECTION</code> is not given, the <code>CENTER</code> coordinates must be given in the map's configured coordinate reference system; see config.namedProjections.epsg. <code>?Map/center=[553925,5931898]</code> <code>?center=[553925,5931898]</code> or <code>?center=553925,5931898|</code> CONFIG Sets the configuration file to use. This is done by either providing an absolute URL (<code>http://...</code> resp. <code>https://...</code>) or a relative path. In the second case, the relative path is combined with the path given in the config.portalConf, and the resulting path must link to a config.json file. <code>?config=../config.json</code> CONFIGJSON Sets the configuration file to use. This is done by either providing an absolute URL (<code>http://...</code> resp. <code>https://...</code>) or a relative path. In the second case, the relative path is combined with the path given in the config.portalConf, and the resulting path must link to a config.json file. <code>?configJson=../config.json</code> FEATUREID Zooms to the features of a WFS configured via config.zoomtofeature. <code>?featureid=18,26</code> MAP/ZOOMTOFEATUREID Zooms to the features of a WFS configured via config.zoomtofeature (Deprecated in the next major release. Please refer to config.zoomTo instead.). <code>?Map/zoomToFeatureId=18,26</code> <code>?zoomToFeatureId=18,26</code> FEATUREVIAURL Creates the given features and adds them to a GeoJSON layer. A <code>layerId</code> should be given for each feature set, and each feature must provide the fields <code>coordinates</code> and <code>label</code>. The coordinates should match the respective GeometryType according to the GeoJSON specification RFC7946, which also states that the coordinates must fit the <code>\"EPSG:4326\"</code> coordinate system. The parameters also depend on the module's configuration in config.featureviaurl. If another coordinate system is defined in the module\u00b4s configuration, the coordinates will be transformed to <code>\"EPSG:4326\"</code>. <code>&amp;featureviaurl=[{\"layerId\":\"42\",\"features\":[{\"coordinates\":[10,53.5],\"label\":\"TestPunkt\"}]}]</code> HEADING Only works when used in combination with <code>MAP/MAPMODE</code>. Sets the heading in 3D mode. <code>?Map/mapMode=3D&amp;heading=-1.2502079000000208</code> HIGHLIGHTFEATURE Describes a layer's feature that is to be highlighted. Layer and feature id are given separated by a comma. The LayerId corresponds to the layer ID configured in services.json. The FeatureId corresponds to the <code>gml:id</code> of the wfs service e.g. <code>DE.HH.UP_GESUNDHEIT_KRANKENHAEUSER_2</code>. <code>&amp;highlightfeature=layerid,featureId</code> MAP/HIGHLIGHTFEATURE Describes a layer's feature that is to be highlighted. Layer and feature id are given separated by a comma. <code>&amp;Map/highlightfeature=layerid,featureId</code> API/HIGHLIGHTFEATURESBYATTRIBUTE Highlights the features of a WFS configured via URL parameters wfsId, attributeName, attributeValue and optional attributeQuery. The wfsId has to match the layer configuration in Themenconfig.Layer.WFS and services-internet.json. WFS version has to be 1.1.0. The parameters - attributeName has to contain the name of the property in the WFS (with featurePrefix from config.json prefixed), attributeValue the value to match (or the list of values separated by comma for isIn) and optional attributeQuery can be isEqual for exact searching, isLike for an isLike search or isIn for searching in a set of values that has to be defined in attributeValue (with a configurable value delimiter defaulting to semicolon). See also <code>?api/highlightFeaturesByAttribute=1&amp;wfsId=1&amp;attributeName=DK5&amp;attributeValue=valueToSearchFor&amp;attributeQuery=isequal</code> <code>?api/highlightFeaturesByAttribute=123&amp;wfsId=1711&amp;attributeName=name&amp;attributeValue=Helios%20ENDO-Klinik%20Hamburg&amp;attributeQuery=IsLike</code> or <code>?api/highlightFeaturesByAttribute=123&amp;wfsId=2003&amp;attributeName=gebietsname&amp;attributeValue=NSG%20Zollenspieker&amp;attributeQuery=isequal</code> or <code>?api/highlightFeaturesByAttribute=123&amp;wfsId=2928&amp;attributeName=biotop_nr&amp;attributeValue=279&amp;attributeQuery=isLike</code> LNG Sets the language, if configured in config.js <code>?lng=en</code> ISINITOPEN The module matching the given id of the tool is opened initially. Please mind that only one of the windowed tools may be open at a time. <code>&amp;isinitopen=draw</code> TOOLS/[tool-id]/ACTIVE=TRUE The module matching the given id of the tool is opened initially. Please mind that only one of the windowed tools may be open at a time. <code>?Tools/Draw/active=true</code> <code>?Draw/active=true</code> or <code>?draw/active</code> or <code>?draw=true</code> LAYERIDS Overrides the initially visible layers. The effect depends on the config.Portalconfig.treeType. If set to <code>\"light\"</code>, layers are set visible additionally. In other trees, the base configuration is overwritten. This can be complemented with the <code>VISIBILITY</code> and <code>TRANSPARENCY</code> flags. It should be noted, that only one WMSTimeLayer can be visible at a time.  If the configuration is incorrect (e.g. several WMS-TimeLayer are initially set) only one is displayed. <code>&amp;layerids=453,2128</code> MAP/LAYERIDS Overrides the initially visible layers. The effect depends on the config.Portalconfig.treeType. If set to <code>\"light\"</code>, layers are set visible additionally. In other trees, the base configuration is overwritten. This can be complemented with the <code>VISIBILITY</code> and <code>TRANSPARENCY</code> flags. It should be noted, that only one WMSTimeLayer can be visible at a time.  If the configuration is incorrect (e.g. several WMS-TimeLayer are initially set) only one is displayed. <code>&amp;Map/layerids=453,2128</code> MAP Mapmode 2D shows the 2D map (as usual),mapmode 3D shows 3D map when starting masterportal. <code>?map=3D</code> MAP/MAPMODE Mapmode 2D shows the 2D map (as usual),mapmode 3D shows 3D map when starting masterportal. <code>?Map/mapMode=2D</code> <code>?mapMode=2d</code> or <code>?mapMode=3D</code> MARKER Sets a marker to the given coordinate and zooms to it. If <code>PROJECTION</code> is given as parameter, the marker coordinates are to be expected in that coordinate reference system and are translated before application. Else, the given coordinates must match the map's coordinate reference system. See config.namedProjections.epsg. <code>&amp;marker=565874,5934140</code> MAPMARKER Sets a marker to the given coordinate and zooms to it. If <code>PROJECTION</code> is given as parameter, the marker coordinates are to be expected in that coordinate reference system and are translated before application. Else, the given coordinates must match the map's coordinate reference system. See config.namedProjections.epsg. <code>?MapMarker=[565874,5934140]</code> <code>?MapMarker=565874,5934140</code> MDID Activates the layer with the given metadata id. Only usable in tree mode <code>\"default\"</code>. <code>&amp;mdid=6520CBEF-D2A6-11D5-88C8-000102DCCF41</code> MAP/MDID Activates the layer with the given metadata id. Only usable in tree mode <code>\"default\"</code>. <code>?Map/mdId=6E28E698-F4FA-4231-A8C5-CC44441FF2A7</code> PROJECTION Coordinate reference system EPSG code. Only works when used in combination with <code>MAP/ZOOMTOEXTENT</code>, <code>MAP/CENTER</code> and <code>MAPMARKER</code>, the coordinates of the Parameters are transformed to the projection. If not set, projection of the map is used. Does not set the projection of the map. <code>&amp;projection=EPSG:4326</code> MAP/PROJECTION Coordinate reference system EPSG code. Only works when used in combination with <code>MAP/ZOOMTOEXTENT</code>, <code>MAP/CENTER</code> and <code>MAPMARKER</code>, the coordinates of the Parameters are transformed to the projection. If not set, projection of the map is used. Does not set the projection of the map. <code>?Map/projection=EPSG:4326</code> QUERY Starts an address search via the search slot with any string given. House numbers must be given separated with a blank. <code>&amp;query=Neuenfelder Stra\u00dfe 19</code> SEARCH/QUERY Starts an address search via the search slot with any string given. House numbers must be given separated with a blank. <code>?Search/query=Neuenfelder Stra\u00dfe 19</code> STARTUPMODUL Deprecated in major release 3.0.0. Please use the parameter <code>\"TOOLS/[tool-id]/ACTIVE=TRUE\"</code> instead. <code>?startupmodul=Draw</code> STYLE Activates a special UI variant. E.g. <code>simple</code> may be set to hide all UI elements in an iFrame scenario. <code>?style=simple</code> UISTYLE Activates a special UI variant. E.g. <code>simple</code> may be set to hide all UI elements in an iFrame scenario. <code>?uiStyle=simple</code> TILT Only works when used in combination with <code>MAP/MAPMODE</code>. Sets the tilt in 3D mode. <code>?Map/mapMode=3D&amp;tilt=45</code> TRANSPARENCY Only works when used in combination with <code>MAP/LAYERIDS</code>. Transparency can be set separated by commas from 0 to 100; the transparency will be applied to the <code>MAP/LAYERIDS</code> layer of the same index. <code>?Map/layerids=453,2128&amp;transparency=0,40</code> VISIBILITY Only works when used in combination with <code>MAP/LAYERIDS</code>. Visibility can be set separated by commas as true or false; the visibility will be applied to the <code>MAP/LAYERIDS</code> layer of the same index. <code>?Map/layerids=453,2128&amp;visibility=true,false</code> ZOOMLEVEL The initial zoom level is the given zoom level; see config.view.options. <code>?zoomlevel=2</code> MAP/ZOOMLEVEL The initial zoom level is the given zoom level; see config.view.options. <code>?Map/zoomLevel=7</code> ZOOMTOEXTENT Zooms to an extent. May be combined with projection. <code>?zoomToExtent=510000,5850000,625000,6000000</code> MAP/ZOOMTOEXTENT Zooms to an extent. May be combined with projection. <code>?Map/zoomToExtent=510000,5850000,625000,6000000</code> ZOOMTOGEOMETRY Zooms to a feature requested from a WFS. Allowed parameters depend on config.zoomToGeometry (Deprecated in the next major release. Please refer to config.zoomTo instead.). As an alternative to the feature name, features may also be addressed by their <code>geometries</code> array index, starting at 1. <code>?zoomToGeometry=bergedorf</code> MAP/ZOOMTOGEOMETRY Zooms to a feature requested from a WFS. Allowed parameters depend on config.zoomToGeometry (Deprecated in the next major release. Please refer to config.zoomTo instead.). As an alternative to the feature name, features may also be addressed by their <code>geometries</code> array index, starting at 1. <code>?Map/zoomToGeometry=bergedorf</code>"},{"location":"User/Global-Config/rest-services.json/","title":"rest-services.json","text":"<p>This is the file referred to by the config.js as <code>restConf</code>. It is read on Masterportal start-up and is kept in memory. Modules may then refer to the web service definitions in it.</p> <p>The file defines all web services that do not belong to OGC services like WMS and WFS; that is, all services not requested for visually representing data. See our master restConf file for an example.</p> Name Required Type Default Description Example id yes String Unique <code>rest-services.json</code> entry ID <code>\"1\"</code> name yes String Service name <code>\"CSW Summary\"</code> typ yes String Service type <code>\"CSW\"</code> url yes String Service URL <code>\"http://metaver.de/trefferanzeige?docuuid=\"</code>"},{"location":"User/Global-Config/rest-services.json/#usually-defined-services","title":"Usually defined services","text":"<ol> <li>Print services</li> <li>Metadata sources (CSW HMDK)</li> <li>BKG geocoding service</li> <li>Gazetteer URL</li> <li>WPS</li> <li>Email Services</li> </ol> <p>In some scenarios different URLs are required, depending on whether requests are sent from an Intranet or the Internet. This can be solved by providing two files only differing in their service URLs. While filenames can be chosen freely, we suggest using these names:</p> <ul> <li><code>rest-services-internet.json</code></li> <li><code>rest-services-intranet.json</code></li> </ul>"},{"location":"User/Global-Config/rest-services.json/#rest-services-internetjson-example-file","title":"<code>rest-services-internet.json</code> example file","text":"<pre><code>[\n  {\n    \"id\": \"1\",\n    \"name\": \"CSW HMDK Summary\",\n    \"url\": \"http://metaver.de/csw?service=CSW&amp;version=2.0.2&amp;request=GetRecordById&amp;typeNames=csw:Record&amp;elementsetname=summary\",\n    \"typ\": \"CSW\"\n  },\n  {\n    \"id\" : \"2\",\n    \"name\" : \"Metadata URL\",\n    \"url\" : \"http://metaver.de/trefferanzeige?docuuid=\",\n    \"typ\" : \"URL\"\n  }\n]\n</code></pre>"},{"location":"User/Global-Config/rest-services.json/#print-services","title":"Print services","text":"Name Required Type Default Description Example id yes String Unique <code>rest-services.json</code> entry ID <code>\"1\"</code> name yes String Service name <code>\"MapFishPrintService\"</code> typ yes String Service type <code>\"Print\"</code> url yes String Service URL <code>\"https://printbase.de/printfolder/\"</code> or <code>\"https://printbase.de/printfolder/print/\"</code> <pre><code>{\n    \"id\" : \"mapfish_internet\",\n    \"name\" : \"MapFishPrintService\",\n    \"typ\": \"Print\",\n    \"url\": \"https://printbase.de/printfolder/\"\n\n}\n</code></pre>"},{"location":"User/Global-Config/services.json/","title":"services.json","text":"<p>All services available for display in the Masterportal (WMS, WFS, SensorThings-API, and more) are configured and maintained in this JSON file. The file is linked to from the config.js of each individual portal by the layerConf parameter. For an example, see the services-internet.json included in the examples.zip at //examples/Basic/resources/.</p> <p>All layer information the portal needs to use the services is stored here. Configuration details differ between WMS, WFS, SensorThings-API and other services types. You may also use local GeoJSON files; see GeoJSON example.</p>"},{"location":"User/Global-Config/services.json/#wms-layer","title":"WMS layer","text":"Name Required Type Default Description Example cache no Boolean Is this layer part of a cached service? If <code>true</code>, this layer is preferred to layers that share the same metadata, but have <code>cache</code> set to <code>false</code>. This only works in portals with <code>\"treeType\": \"default\"</code> in their config.json. The parameter has no effects on other tree types. <code>false</code> datasets no datasets/Boolean Metadata specification. All metadata the layer data is referenced here. On clicking the \"i\" button in the layer tree, the information is retrieved by the CSW interface and shown to the user. For this, the rest-services.json has to provide the URL of the metadata catalog resp. its CSW interface. The values kategorie_opendata, kategorie_inspire, and kategorie_organisation are used for layer categorization if the config.json has <code>treeType</code> set to <code>\"default\"</code>. It is also possible to retrieve metadata with a <code>getMetaData</code> request, in this case there can also be additional informations displayed. To remove the \"i\" button altogether, explicitly set <code>\"datasets\": false</code>. featureCount yes String Amount of features retrieved on GFI requests. Corresponds to the GetFeatureInfo parameter \"FEATURE_COUNT\". <code>\"1\"</code> format yes String Image format of tiles requested via GetMap. Must match one of the service's formats listed in Capability/Request/GetMap/Format. <code>\"image/jpeg\"</code> gfiAttributes yes String/gfiAttributes GFI attributes to be shown <code>\"ignore\"</code> gfiTheme yes String/Object Display style of GFI information for this layer. Unless <code>\"default\"</code> is chosen, custom templates may be used to show GFI information in another format than the default table style. <code>\"default\"</code> gutter no String <code>\"0\"</code> Additionally loaded tile contents in border pixel width. Serves to avoid cut symbols on tile borders. <code>\"0\"</code> id yes String Arbitrary id <code>\"8\"</code> infoFormat no String \"text/xml\" services.json value. WMS GetFeatureInfo response format. The formats: <code>\"text/xml\"</code>, <code>\"text/html\"</code>, <code>\"application/json\"</code> <code>\"application/vnd.ogc.gml\"</code> are supported. When using <code>\"text/html\"</code>, the service response is checked and will only be used when it contains a fully valid and filled HTML table. <code>\"text/xml\"</code> layerAttribution no String <code>\"nicht vorhanden\"</code> Additional layer information to be shown in the portal's control element LayerAttribution, if configured to appear. If <code>\"nicht vorhanden\"</code> (technical key meaning \"not available\") is chosen, no layer attribution is shown. <code>\"nicht vorhanden\"</code> layers yes String The service's layer name. Must match a name of the service's capabilities in Layer/Layer/Name. <code>\"1\"</code> legendURL yes String/String[] Deprecated, please use \"legend\". Link to static legend image. <code>\"ignore\"</code>: No image is retrieved, <code>\"\"</code> (empty string): The service's GetLegendGraphic is called. <code>\"ignore\"</code> legend no Boolean/String/String[] Value of the services.json file. URL to be used to request a static legend image. Use a boolean value to dynamically generate the legend from a WMS request or the WFS styling respectively. Use a string to link an image or a PDF file. <code>false</code> maxScale yes String The layer is shown only up to this scale. <code>\"1000000\"</code> minScale yes String The layer is shown only down to this scale. <code>\"0\"</code> name yes String Arbitrary display name used in the layer tree. <code>\"Aerial View DOP 10\"</code> singleTile no Boolean <code>true</code>: Request map as a single tile of the current view. <code>false</code>: Build map from multiple smaller tiles. <code>false</code> tilesize yes String Tile height and width in pixels. Used if <code>singleTile</code> is <code>false</code>. <code>\"512\"</code> time no Boolean/time false If set to <code>true</code> or an object (time), the configured Layer is expected to be a WMS-T. <code>false</code> transparent yes Boolean Whether the tile background should be transparent. Corresponds to the GetMap parameter TRANSPARENT. <code>true</code> typ yes String Service type; in this case, \"WMS\". (WMTS docs, WFS docs, SensorThings-API docs) <code>\"WMS\"</code> url yes String Service URL <code>\"https://geodienste.hamburg.de/HH_WMS_DOP10\"</code> useProxy no Boolean <code>false</code> Deprecated in the next major release. GDI-DE recommends setting CORS headers on the required services instead. Only used for GFI requests. The request will contain the requested URL as path, with dots replaced by underscores. <code>false</code> version yes String Service version used for GetMap requests. <code>\"1.3.0\"</code> isSecured no Boolean false Displays whether the layer belongs to a secured service. (see below) false authenticationUrl no String Additional url called to trigger basic authentication in the browser. \"https://geodienste.hamburg.de/HH_WMS_DOP10?VERSION=1.3.0&amp;SERVICE=WMS&amp;REQUEST=GetCapabilities\" layerSequence no Number Number to determine the sequence of selected layers in treeType 'custom'. A Layer with sequence number 1 is always the top layer, etc. By default, Baselayer get a sequence number &gt; 1000 and Fachdaten layer get a sequence number &lt; 1000. <code>1</code> crs yes String Layer's coordinate reference system <code>\"EPSG:3857\"</code> <p>WMS example:</p> <pre><code>{\n      \"id\" : \"8\",\n      \"name\" : \"Aerial View DOP 10\",\n      \"url\" : \"https://geodienste.hamburg.de/HH_WMS_DOP10\",\n      \"typ\" : \"WMS\",\n      \"layers\" : \"1\",\n      \"format\" : \"image/jpeg\",\n      \"version\" : \"1.3.0\",\n      \"singleTile\" : false,\n      \"transparent\" : true,\n      \"tilesize\" : \"512\",\n      \"gutter\" : \"0\",\n      \"minScale\" : \"0\",\n      \"maxScale\" : \"1000000\",\n      \"infoFormat\": \"text/html\",\n      \"gfiAttributes\" : \"ignore\",\n      \"gfiTheme\" : \"default\",\n      \"layerAttribution\" : \"nicht vorhanden\",\n      \"legend\" : false,\n      \"cache\" : false,\n      \"featureCount\" : \"1\",\n      \"isSecured\": true,\n      \"authenticationUrl\": \"https://geodienste.hamburg.de/HH_WMS_DOP10?VERSION=1.3.0&amp;SERVICE=WMS&amp;REQUEST=GetCapabilities\",\n      \"layerSequence\": 1,\n      \"crs\": \"EPSG:3857\"\n      \"datasets\" : [\n         {\n            \"md_id\" : \"25DB0242-D6A3-48E2-BAE4-359FB28491BA\",\n            \"rs_id\" : \"HMDK/25DB0242-D6A3-48E2-BAE4-359FB28491BA\",\n            \"md_name\" : \"Digitale Orthophotos 10cm - FHHNET\",\n            \"bbox\" : \"461468.97,5916367.23,587010.91,5980347.76\",\n            \"kategorie_opendata\" : [\n               \"Sonstiges\"\n            ],\n            \"kategorie_inspire\" : [\n               \"nicht INSPIRE-identifiziert\"\n            ],\n            \"kategorie_organisation\" : \"Landesbetrieb Geoinformation und Vermessung\"\n         }\n      ]\n   }\n</code></pre>"},{"location":"User/Global-Config/services.json/#wms-layerissecured","title":"WMS-Layer.isSecured","text":"<p>WMS layer belonging to a secured WMS service.</p> <p>CAUTION: If the layer belongs to a secured service, the following changes must be made to the service!</p> <ul> <li>Two headers must be set based on the referer.</li> <li>The configuration for this must be done e.g. in the Apache web server.</li> <li><code>Access-Control-Allow-Credentials: true</code>.</li> <li>Dynamic rewrite of the following HTTP header from:  <code>Access-Control-Allow-Origin: *</code>  to  <code>Access-Control-Allow-Origin: URL of the accessing portal</code>.</li> </ul>"},{"location":"User/Global-Config/services.json/#wms-layertime","title":"WMS-Layer.time","text":"<p>Possible configuration for the time related parameters of a WMS-T. If a parameter is also present in the service, the definition in this config is used.</p> <p>\u26a0\ufe0f Please mind that <code>version</code> must be set to <code>1.1.1</code>. The Masterportal implementation does currently not support newer versions.</p> Name Verpflichtend Typ default Beschreibung Beispiel default no String Initial moment to be displayed for the WMS-T. Beware: If the configured value is not part of the time range of possible values, the default of the service is used instead. <code>\"1970\"</code> keyboardMovement no Number <code>5</code> Value in pixels that the swiper should be moved when using the arrow keys. <code>5</code> playbackDelay no Number <code>1</code> When using the playback function, this is the time in seconds which a moment should be shown before the rendering of the next moment is initiated. <code>42</code> dimensionName no String <code>\"time\"</code> Name of GetCapabilities  tag to use for layer; time format <code>\"REFERENCE_TIME\"</code> extentName no String <code>\"time\"</code> Name of GetCapabilities  tag to use for layer; contains valid points in time <code>\"REFERENCE_TIME\"</code>"},{"location":"User/Global-Config/services.json/#wmts-layer","title":"WMTS layer","text":"<p>WMTS layers can be added by</p> <ul> <li>entering all the following WMTS parameters (EPSG:4326 and EPSG:3857 only)</li> <li>using OpenLayers' <code>optionsFromCapabilities</code> method (see second example below)</li> </ul> Name Required Type Default Description Example capabilitiesUrl no String Service's capabilities URL <code>\"https://www.wmts.nrw.de/geobasis/wmts_nw_dtk/1.0.0/WMTSCapabilities.xml\"</code> coordinateSystem yes enum[\"EPSG:4326\", \"EPSG:3857\"] Layer's coordinate reference system <code>\"EPSG:3857\"</code> format yes String Image format of layer tiles. Only required with parameter <code>requestEncoding</code> set to <code>\"KVP\"</code> ist. <code>\"image/png\"</code> id yes String Arbitrary id <code>\"320\"</code> layers yes String Layer name. Must match the name noted in the WMTS capabilities. <code>\"geolandbasemap\"</code> layerAttribution no String <code>\"nicht vorhanden\"</code> Additional layer information to be shown in the portal's control element LayerAttribution, if configured to appear. If <code>\"nicht vorhanden\"</code> (technical key meaning \"not available\") is chosen, no layer attribution is shown. <code>\"nicht vorhanden\"</code> legendURL yes String/String[] Deprecated, please use \"legend\". Link to static legend image. <code>\"ignore\"</code>: No image is retrieved, <code>\"\"</code> (empty string): The service's GetLegendGraphic is called. <code>\"ignore\"</code> legend no String[] Value of the services.json file. URL to be used to request a static legend image. Use a string[] to link an image or a PDF file. <code>false</code> matrixSizes no Number[][] Number of tile rows and columns of the grid for each zoom level. The values here are the <code>TileMatrixWidth</code> and <code>TileMatrixHeight</code> advertised in the GetCapabilities response of the WMTS. [[1, 1], [2, 2], [4, 4], [8, 8], [16, 16], [32, 32], [64, 64], [128, 128], [256, 256], [512, 512], [1024, 1024], [2048, 2048], [4096, 4096], [8192, 8192], [16384, 16384], [32768, 32768], [65536, 65536], [131072, 131072], [262144, 262144], [524288, 524288]] maxScale yes String The layer is shown only up to this scale. <code>\"1000000\"</code> minScale yes String The layer is shown only down to this scale. <code>\"0\"</code> name yes String Arbitrary display name used in the layer tree. <code>\"Geoland Basemap\"</code> optionsFromCapabilities no Boolean If <code>true</code>, use the <code>getOptionsFromCapabilities</code> method for definitions. See following examples. <code>true</code> origin yes Number[] Tile raster origin. Can be fetched from the WMTS capabilities; usually the extent's top left corner. <code>[-20037508.3428, 20037508.3428]</code> requestEncoding yes enum[\"KVP\", \"REST\"] WMTS service request encoding. <code>\"REST\"</code> resLength yes String Length of resolution and matrixIds arrays. Required to configure the layer's maximum zoom level. <code>\"20\"</code> scales no Number[] The scale defined for each zoom level. The values are the <code>ScaleDenominator</code> of each <code>TileMatrix</code> of the <code>TileMatrixSet</code> as advertised in the GetCapabilities response of the WMTS. [559082264.029, 279541132.015, 139770566.007, 69885283.0036, 34942641.5018, 17471320.7509, 8735660.37545, 4367830.18773, 2183915.09386, 1091957.54693, 45978.773466, 272989.386733, 136494.693366, 68247.3466832, 34123.6733416, 17061.8366708, 8530.91833540, 4265.45916770, 2132.72958385, 1066.36479193] style no String \"normal\" Name of the style. Must match the noted in the WMTS capabilities. <code>\"normal\"</code> tileMatrixSet yes String Matrix set required to call the WMTS service. Do not use when using <code>optionsFromCapabilities</code>, a fitting TileMatrixSet is injected then. Using both may lead to erroneous behaviour. <code>\"google3857\"</code> tilesize yes String Tile height and width in pixels. <code>\"512\"</code> transparent yes Boolean Whether the tile background should be transparent. Corresponds to the GetMap parameter TRANSPARENT. <code>true</code> typ yes String Service type; in this case, \"WMTS\". (WMTS docs, WFS docs, SensorThings-API docs) <code>\"WMS\"</code> urls yes String[]/String WMTS service URL. If only a single URL is given, it's internally transformed to an array. <code>[\"https://maps1.wien.gv.at/basemap/geolandbasemap/{Style}/{TileMatrixSet}/{TileMatrix}/{TileRow}/{TileCol}.png\", \"https://maps2.wien.gv.at/basemap/geolandbasemap/{Style}/{TileMatrixSet}/{TileMatrix}/{TileRow}/{TileCol}.png\", \"https://maps3.wien.gv.at/basemap/geolandbasemap/{Style}/{TileMatrixSet}/{TileMatrix}/{TileRow}/{TileCol}.png\", \"https://maps4.wien.gv.at/basemap/geolandbasemap/{Style}/{TileMatrixSet}/{TileMatrix}/{TileRow}/{TileCol}.png\", \"https://maps.wien.gv.at/basemap/geolandbasemap/{Style}/{TileMatrixSet}/{TileMatrix}/{TileRow}/{TileCol}.png\"]</code> version yes String Service version used for GetMap requests. <code>\"1.0.0\"</code> wrapX no Boolean <code>false</code> Whether world should be wrapped horizontally. <code>true</code> <p>WMTS example 1:</p> <pre><code>{\n   \"id\": \"320\",\n   \"name\": \"Geoland Basemap\",\n   \"urls\": [\n      \"https://maps1.wien.gv.at/basemap/geolandbasemap/{Style}/{TileMatrixSet}/{TileMatrix}/{TileRow}/{TileCol}.png\",\n      \"https://maps2.wien.gv.at/basemap/geolandbasemap/{Style}/{TileMatrixSet}/{TileMatrix}/{TileRow}/{TileCol}.png\",\n      \"https://maps3.wien.gv.at/basemap/geolandbasemap/{Style}/{TileMatrixSet}/{TileMatrix}/{TileRow}/{TileCol}.png\",\n      \"https://maps4.wien.gv.at/basemap/geolandbasemap/{Style}/{TileMatrixSet}/{TileMatrix}/{TileRow}/{TileCol}.png\",\n      \"https://maps.wien.gv.at/basemap/geolandbasemap/{Style}/{TileMatrixSet}/{TileMatrix}/{TileRow}/{TileCol}.png\"\n   ],\n   \"typ\": \"WMTS\",\n   \"layer\": \"geolandbasemap\",\n   \"version\": \"1.0.0\",\n   \"format\": \"image/png\",\n   \"style\": \"normal\",\n   \"transparent\": false,\n   \"tileSize\": \"256\",\n   \"minScale\": \"0\",\n   \"maxScale\": \"2500000\",\n   \"tileMatrixSet\": \"google3857\",\n   \"matrixSizes\": [\n       [1, 1], [2, 2],\n       [4, 4], [8, 8],\n       [16, 16], [32, 32],\n       [64, 64], [128, 128],\n       [256, 256], [512, 512],\n       [1024, 1024], [2048, 2048],\n       [4096, 4096], [8192, 8192],\n       [16384, 16384], [32768, 32768],\n       [65536, 65536], [131072, 131072],\n       [262144, 262144], [524288, 524288]\n   ],\n   \"coordinateSystem\": \"EPSG:3857\",\n   \"layerAttribution\": \"nicht vorhanden\",\n   \"legend\": false,\n   \"cache\": true,\n   \"wrapX\": true,\n   \"origin\": [\n      -20037508.3428,\n      20037508.3428\n   ],\n   \"scales\": [\n       559082264.029, 279541132.015, 139770566.007, 69885283.0036,\n       34942641.5018, 17471320.7509, 8735660.37545, 4367830.18773,\n       2183915.09386, 1091957.54693, 45978.773466, 272989.386733,\n       136494.693366, 68247.3466832, 34123.6733416, 17061.8366708,\n       8530.91833540, 4265.45916770, 2132.72958385, 1066.36479193\n   ],\n   \"resLength\": \"20\",\n   \"requestEncoding\": \"REST\"\n}\n</code></pre> <p>WMTS example 2 (<code>optionsFromCapabilities</code> method):</p> <pre><code>{\n  \"id\": \"2020\",\n  \"name\": \"EOC Basemap\",\n  \"capabilitiesUrl\": \"https://tiles.geoservice.dlr.de/service/wmts?SERVICE=WMTS&amp;REQUEST=GetCapabilities\",\n  \"typ\": \"WMTS\",\n  \"layers\": \"eoc:basemap\",\n  \"optionsFromCapabilities\": true\n}\n</code></pre>"},{"location":"User/Global-Config/services.json/#wfs-layer","title":"WFS layer","text":"Name Required Type Default Description Example datasets yes datasets[]/Boolean Metadata specification. All metadata of the layer data is referenced here. By clicking the \"i\" button in the layer tree, the information is retrieved by the CSW interface and shown to the user. For this, the rest-services.json has to provide the URL of the metadata catalog resp. its CSW interface. The values kategorie_opendata, kategorie_inspire, and kategorie_organisation are used for layer categorization if the config.json has <code>treeType</code> set to <code>\"default\"</code>. It is also possible to retrieve metadata with a getMetaData request, in this case there can also be additional informations displayed. To remove the \"i\" button altogether, explicitly set <code>\"datasets\": false</code>. featureNS yes String Usually referenced in the WFS GetCapabilities' header. Used to resolve the namespace given in FeatureType/Name. <code>\"http://www.deegree.org/app\"</code> featureType yes String Feature type to load. Must match a value of FeatureTypeList/FeatureType/Name in the GetCapabilities response. Provide without namespace. <code>\"bab_vkl\"</code> featurePrefix no String Used to identify a FeatureType in the service. gfiAttributes yes String/gfiAttributes GFI attributes to be shown. <code>\"ignore\"</code> id yes String/wfs_id Arbitrary id or an object with id and suffix <code>\"44\"</code> layerAttribution no String <code>\"nicht vorhanden\"</code> Additional layer information to be shown in the portal's control element LayerAttribution, if configured to appear. If <code>\"nicht vorhanden\"</code> (technical key meaning \"not available\") is chosen, no layer attribution is shown. <code>\"nicht vorhanden\"</code> legendURL yes String/String[] Deprecated, please use \"legend\". Link to static legend image. <code>\"ignore\"</code>: No image is retrieved, <code>\"\"</code> (empty string): The service's GetLegendGraphic is called. <code>\"ignore\"</code> legend no Boolean/String/String[] Value of the services.json file. URL to be used to request a static legend image. Use a boolean value to dynamically generate the legend from a WMS request or the WFS styling respectively. Use a string to link an image or a PDF file. <code>false</code> name yes String Arbitrary display name used in the layer tree. <code>\"Traffic situation on freeways\"</code> typ yes String Service type; in this case, \"WFS\". (WMS (see above), WMTS (see above), and SensorThings-API (see below)) <code>\"WFS\"</code> url yes String Service URL <code>\"https://geodienste.hamburg.de/HH_WFS_Verkehr_opendata\"</code> version no String Service version to use in GetFeature requests. <code>\"1.1.0\"</code> altitudeMode no enum[\"clampToGround\",\"absolute\",\"relativeToGround\"] <code>\"clampToGround\"</code> Height mode in 3D mode. <code>\"absolute\"</code> altitude no Number Display height in 3D mode in meters. If an altitude is given, any existing z coordinate is overwritten. If no z coordinate exists, altitude is used as its value. <code>527</code> altitudeOffset no Number Height offset for display in 3D mode in meters. If given, any existing z coordinates will be increased by this value. If no z coordinate exists, this value is used as z coordinate. <code>10</code> gfiTheme yes String/Object Display style of GFI information for this layer. Unless <code>\"default\"</code> is chosen, custom templates may be used to show GFI information in another format than the default table style. <code>\"default\"</code> useProxy no Boolean <code>false</code> Deprecated in the next major release. GDI-DE recommends setting CORS headers on the required services instead. Only used for GFI requests. The request will contain the requested URL as path, with dots replaced by underscores. <code>false</code> wfsFilter no String Set to use xml ressource as wfs filter, the content of the filter file will be sent to the wfs server as POST request (see below). <code>\"ressources/xmlFilter/filterSchulenStadtteilschulen\"</code> doNotLoadInitially no String false if set to true the layer will be initialized without network call, an empty array of features is promoted - this is useful to add features later on (e.g. by filtering) to a full functional but initially empty layer false isSecured no Boolean false Displays whether the layer belongs to a secured service. (see below) false authenticationUrl no String Additional url called to trigger basic authentication in the browser. \"https://geodienste.hamburg.de/HH_WMS_DOP10?SERVICE=WFS&amp;VERSION=1.1.0&amp;REQUEST=DescribeFeatureType\" propertyNames no Array The attributes as PROPERTYNAME parameter to receive response from wfs layer <code>[\"properties\"]</code> wildCard no String The wildcard parameter for the highlightFeaturesByAttribute property query. Must be one character only. singleChar no String The singlechar parameter for the highlightFeaturesByAttribute property query. Must be one character only. escapeChar no String The escapechar parameter for the highlightFeaturesByAttribute property query. Must be one character only. <p>WFS example:</p> <pre><code>{\n      \"id\" : \"44\",\n      \"name\" : \"Traffic situation on freeways\",\n      \"url\" : \"https://geodienste.hamburg.de/HH_WFS_Verkehr_opendata\",\n      \"typ\" : \"WFS\",\n      \"featureType\" : \"bab_vkl\",\n      \"format\" : \"image/png\",\n      \"version\" : \"1.1.0\",\n      \"featureNS\" : \"http://www.deegree.org/app\",\n      \"gfiAttributes\" : \"showAll\",\n      \"wfsFilter\": \"ressources/xmlFilter/filterSchulenStadtteilschulen\",\n      \"layerAttribution\" : \"nicht vorhanden\",\n      \"legend\" : true,\n      \"isSecured\": true,\n      \"propertyNames\": [\n          \"bezirk_name\",\n          \"stadtteil_name\",\n          \"anzahl_sus_primarstufe\",\n          \"geom\"\n      ],\n      \"authenticationUrl\": \"https://geodienste.hamburg.de/HH_WMS_DOP10?SERVICE=WFS&amp;VERSION=1.1.0&amp;REQUEST=DescribeFeatureType\",\n      \"datasets\" : [\n         {\n            \"md_id\" : \"2FC4BBED-350C-4380-B138-4222C28F56C6\",\n            \"rs_id\" : \"HMDK/6f62c5f7-7ea3-4e31-99ba-97407b1af9ba\",\n            \"md_name\" : \"Verkehrslage auf Autobahnen (Schleifen) Hamburg\",\n            \"bbox\" : \"461468.97,5916367.23,587010.91,5980347.76\",\n            \"kategorie_opendata\" : [\n               \"Transport und Verkehr\"\n            ],\n            \"kategorie_inspire\" : [\n               \"nicht INSPIRE-identifiziert\"\n            ],\n            \"kategorie_organisation\" : \"Beh\u00f6rde f\u00fcr Wirtschaft, Verkehr und Innovation\"\n         }\n      ]\n   }\n</code></pre> <p>WFS-T example:</p> <pre><code>{\n    \"id\" : \"1234\",\n    \"name\" : \"WFSTLayer\",\n    \"url\" : \"http://IP-Adresse/Beispiel/Pfad\",\n    \"typ\" : \"WFS\",\n    \"featureType\" : \"wfstBsp\",\n    \"format\" : \"image/png\",\n    \"version\" : \"1.1.0\",\n    \"featureNS\" : \"http://beispiel.link.org/gmlsf\",\n    \"featurePrefix\" : \"sf\",\n    \"outputFormat\" : \"XML\",\n    \"gfiAttributes\" : \"showAll\",\n    \"layerAttribution\" : \"nicht vorhanden\",\n    \"legend\" : true,\n    \"datasets\" : [],\n    \"propertyNames\": [\n        \"bezirk_name\",\n        \"stadtteil_name\",\n        \"anzahl_sus_primarstufe\",\n        \"geom\"\n    ]\n  }\n</code></pre>"},{"location":"User/Global-Config/services.json/#wfsfilter","title":"wfsFilter","text":"<p>You can create an xml ressource using wfs standard to request your server with complex filters. To learn more about wfs filter encoding see https://mapserver.org/de/ogc/filter_encoding.html .</p> <p>Remember to use the correct feature namespace (see prop featureNS) for xmlns:app.</p> <p>Example</p> <p>A filter for primary schools with more than 2 parallel first classes in a file named \"primary_schools_with_more_than_two_first_classes.xml\". Remember to add/remove namespaces (e.g. xmlns:wfs and xmlns:ogc) for your purpose. If it doesn't work with the first try, go through your file - line for line - most of the time some prefix doesn't match a namespace or vice versa.</p> <p>Config:</p> <pre><code>{\n    \"wfsFilter\": \"primary_schools_with_more_than_two_first_classes.xml\"\n}\n</code></pre> <p>Content of primary_schools_with_more_than_two_first_classes.xml:</p> <pre><code>&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;\n&lt;wfs:GetFeature service=\"WFS\" version=\"1.1.0\" xmlns:app=\"http://www.deegree.org/app\" xmlns:wfs=\"http://www.opengis.net/wfs\" xmlns:ogc=\"http://www.opengis.net/ogc\"&gt;\n    &lt;wfs:Query typeName=\"app:schools\"&gt;\n        &lt;ogc:Filter&gt;\n            &lt;ogc:And&gt;\n                &lt;ogc:PropertyIsEqualTo&gt;\n                    &lt;ogc:PropertyName&gt;app:schoolname&lt;/ogc:PropertyName&gt;\n                    &lt;ogc:Literal&gt;Primaryschool&lt;/ogc:Literal&gt;\n                &lt;/ogc:PropertyIsEqualTo&gt;\n                &lt;ogc:PropertyIsGreaterThan&gt;\n                    &lt;ogc:PropertyName&gt;app:parallel_first_classes&lt;/ogc:PropertyName&gt;\n                    &lt;ogc:Literal&gt;2&lt;/ogc:Literal&gt;\n                &lt;/ogc:PropertyIsGreaterThan&gt;\n            &lt;/ogc:And&gt;\n        &lt;/ogc:Filter&gt;\n    &lt;/wfs:Query&gt;\n&lt;/wfs:GetFeature&gt;\n</code></pre>"},{"location":"User/Global-Config/services.json/#wfs_id","title":"wfs_id","text":"<p>If the layer id is in an object format, the content in the object should be in the format:</p> Name Required Type Default Description Example layerId yes String Attribute value layerId. <code>\"1234567\"</code> suffix yes String Attribute value suffix. <code>\"text\"</code> The layerId and suffix must be unique as a pair <p>wfs layer Id Object example:</p> <pre><code>{\n   \"id\": {\n        \"layerId\": \"1234567\",\n        \"suffix\": \"text\"\n   }\n}\n</code></pre>"},{"location":"User/Global-Config/services.json/#wfs-layerissecured","title":"WFS-Layer.isSecured","text":"<p>WFS layer belonging to a secured WFS service.</p> <p>CAUTION: If the layer belongs to a secured service, the following changes must be made to the service!</p> <ul> <li>Two headers must be set based on the referer.</li> <li>The configuration for this must be done e.g. in the Apache web server.</li> <li><code>Access-Control-Allow-Credentials: true</code>.</li> <li>Dynamic rewrite of the following HTTP header from:  <code>Access-Control-Allow-Origin: *</code>  to  <code>Access-Control-Allow-Origin: URL of the accessing portal</code>.</li> </ul> <p>CAUTION: If the layer is also a WFS-T layer of a secured service, the following additional change must be made to the service!</p> <ul> <li>A headers must be set based on the referer.</li> <li>The configuration for this must be done e.g. in the Apache web server.</li> <li>If no setting has yet been made for this header, the header must be set as follows to avoid any effects on other requests: <code>Access-Control-Allow-Headers: Content-Type, *</code></li> <li>If settings have already been made for this header, the following entry must be added to the <code>Access-Control-Allow-Headers</code> header: <code>Content-Type</code></li> </ul>"},{"location":"User/Global-Config/services.json/#vector-tile-layer","title":"Vector Tile Layer","text":"<p>Please note the VTL specification on what VTL exactly is capable of.</p> Name Required Type Default Description Example minZoom no Number The minimum zoom level 4 maxZoom no Number The maximum zoom level 15 zDirection no Number 1 Specifies, if the resolutions of the service and the portal are different, in which direction the resolution should be used. 1: the nearest higher resolution is used. 0: the nearest resolution is used. -1: the nearest lower resolution is used -1 datasets no datasets/Boolean Metadata specification. All metadata of the layer data is referenced here. By clicking the \"i\" button in the layer tree, the information is retrieved by the CSW interface and shown to the user. For this, the rest-services.json has to provide the URL of the metadata catalog resp. its CSW interface. The values kategorie_opendata, kategorie_inspire, and kategorie_organisation are used for layer categorization if the config.json has <code>treeType</code> set to <code>\"default\"</code>. It is also possible to retrieve metadata with a getMetaData request, in this case there can also be additional informations displayed. To remove the \"i\" button altogether, explicitly set <code>\"datasets\": false</code>. gfiAttributes yes String/gfiAttributes GFI attributes to be shown. <code>\"ignore\"</code> epsg no String The portal's default EPSG code. EPSG string used for checking the coordinate reference system. If the value does not match the VTL, a warning is shown. Vector tile services should offer the data in the target CRS for performance reasons. If <code>\"EPSG:3857\"</code> is set with neither <code>\"extend\"</code>, nor <code>\"origin\"</code>, <code>\"resolutions\"</code>, or <code>\"tileSize\"</code>, no GridSet is created. The OL default will be used instead. <code>\"EPSG:3857\"</code> extent no Number[4] Required to define the VTC's GridSet. If not set, the portal's coordinate reference system's extent is used. <code>[902186.674876469653, 7054472.60470921732, 1161598.35425907862, 7175683.41171819717]</code> origin no Number[2] Required to define the VTC's GridSet. If not set, the portal's coordinate reference system's top-left corner is used. <code>[-9497963.94293634221, 9997963.94293634221]</code> origins no Number[2][] Required to define the VTC's GridSet. If <code>\"origins\"</code> is used, the parameter <code>\"origin\"</code> is ignored; else, <code>\"origin\"</code> is used. <code>[[239323.44497139292, 9336416.0],[239323.44497139292, 9322080.0],[239323.44497139292, 9322080.0],[239323.44497139292, 9322080.0],[239323.44497139292, 9322080.0],[239323.44497139292, 9322080.0],[239323.44497139292, 9320288.0],[239323.44497139292, 9321005.0],[239323.44497139292, 9320646.0],[239323.44497139292, 9320467.0],[239323.44497139292, 9320288.0],[239323.44497139292, 9320109.0],[239323.44497139292, 9320145.0],[239323.44497139292, 9320109.0]]</code> resolutions no Number[] Required to define the VTC's GridSet. It not used, the portal's resolutions are used. Missing zoom levels are extrapolated only if the resolutions are explicitly specified. Therefore, only resolutions for which tiles exist may be specified. <code>[78271.5169640117238, 39135.7584820058619, 19567.8792410029309, 9783.93962050146547, 4891.96981025073273, 2445.98490512536637, 1222.99245256268318, 611.496226281341592, 305.7481131406708, 152.8740565703354, 76.437028285167699, 38.2185141425838495, 19.1092570712919247, 9.55462853564596237, 4.77731426782298119, 2.38865713391149059, 1.1943285669557453]</code> tileSize no Number <code>512</code> Required to define the size of a VTC tile. <code>256</code> id yes String Arbitrary id <code>\"41\"</code> layerAttribution no String <code>\"nicht vorhanden\"</code> Additional layer information to be shown in the portal's control element LayerAttribution, if configured to appear. If <code>\"nicht vorhanden\"</code> (technical key meaning \"not available\") is chosen, no layer attribution is shown. <code>\"nicht vorhanden\"</code> transparency no number <code>0</code> Initial layer transparency, 0 to 100 (inclusive) <code>0</code> visibility no boolean <code>false</code> Whether the layer is initially active <code>true</code> maxScale yes String The layer is shown only up to this scale. <code>\"1000000\"</code> minScale yes String The layer is shown only down to this scale. <code>\"0\"</code> name yes String Arbitrary display name used in the layer tree. <code>\"Traffic situation on freeways\"</code> vtStyles no vtStyle[] See example and definition in config.json. Describes available styles usable with the styleVT tool. see example below typ yes String Must be set to <code>\"VectorTile\"</code> for this layer. <code>\"VectorTile\"</code> url yes String Service URL <code>\"https://example.com/3857/tile/{z}/{y}/{x}.pbf\"</code> useProxy no Boolean <code>false</code> Deprecated in the next major release. GDI-DE recommends setting CORS headers on the required services instead. Only used for GFI requests. The request will contain the requested URL as path, with dots replaced by underscores. <code>false</code> gfiTheme yes String/Object Display style of GFI information for this layer. Unless <code>\"default\"</code> is chosen, custom templates may be used to show GFI information in another format than the default table style. <code>\"default\"</code> <p>VectorTile example:</p> <pre><code>{\n  \"id\": \"UNIQUE_ID\",\n  \"name\": \"Ein Vektortilelayername\",\n  \"epsg\": \"EPSG:3857\",\n  \"url\": \"https://example.com/3857/tile/{z}/{y}/{x}.pbf\",\n  \"typ\": \"VectorTile\",\n  \"transparency\": 0,\n  \"visibility\": true,\n  \"minScale\": 4000,\n  \"maxScale\": 200000,\n  \"legend\": false,\n  \"gfiAttributes\": \"showAll\",\n  \"gfiTheme\": \"default\",\n  \"vtStyles\": [\n    {\n      \"id\": \"STYLE_1\",\n      \"name\": \"Tagesansicht\",\n      \"url\": \"https://example.com/3857/resources/styles/day.json\",\n      \"defaultStyle\": true\n    },\n    {\n      \"id\": \"STYLE_2\",\n      \"name\": \"Nachtansicht\",\n      \"url\": \"https://example.com/3857/resources/styles/night.json\"\n    }\n  ]\n}\n</code></pre>"},{"location":"User/Global-Config/services.json/#sensorlayer","title":"SensorLayer","text":"<p>A feature kann hold multiple Datastreams. For each Datastream, the latest obervation is added as a feature attribute as <code>\"dataStream_[id]_[name]\"</code>, where <code>id</code> is the Datastream's <code>@iot.id</code>.</p> <p>The name is read from <code>datastream.properties.type</code>; if not available, <code>datastream.unitOfMeasurement.name</code> is used.</p> <p>For more details, consider reading the extensive SensorThings-API documentation..</p> Name Required Type Default Description Example altitude no Number Display height in 3D mode in meters. If an altitude is given, any existing z coordinate is overwritten. If no z coordinate exists, altitude is used as its value. <code>527</code> altitudeMode no enum[\"clampToGround\",\"absolute\",\"relativeToGround\"] <code>\"clampToGround\"</code> Height mode in 3D mode. <code>\"absolute\"</code> altitudeOffset no Number Height offset for display in 3D mode in meters. If given, any existing z coordinates will be increased by this value. If no z coordinate exists, this value is used as z coordinate. <code>10</code> epsg no String <code>\"EPSG:4326\"</code> SensorThings-API coordinate reference system <code>\"EPSG:4326\"</code> gfiAttributes yes String/gfiAttributes GFI attributes to be shown. Set to \"ignore\" to deactivate gfiTheme. <code>\"ignore\"</code> gfiTheme yes gfiTheme Display style of GFI information for this layer. Unless <code>\"default\"</code> is chosen, custom templates may be used to show GFI information in another format than the default table style. <code>\"default\"</code> id yes String Arbitrary id <code>\"999999\"</code> legend no Boolean/String/String[] Value of the services.json file. URL to be used to request a static legend image. Use a boolean value to dynamically generate the legend from a WMS request or the WFS styling respectively. Use a string to link an image or a PDF file. <code>false</code> legendURL yes String/String[] Deprecated, please use \"legend\". Link to static legend image. <code>\"ignore\"</code>: No image is retrieved, <code>\"\"</code> (empty string): The service's GetLegendGraphic is called. <code>\"ignore\"</code> loadThingsOnlyInCurrentExtent no Boolean <code>false</code> Whether Things are only to be fetched for the current extent. On changing the extent, another request is fired. <code>true</code> mqttOptions no mqttOptions mqtt web socket connection configuration mqttQos no Number 2 Quality of service subscription level. For more information see sensorThings 0 mqttRh no Number 2 This option specifies whether retained messages are sent on subscription. For more information see sensorThings 0 name yes String Arbitrary display name used in the layer tree. <code>\"Charging locations\"</code> noDataValue no String <code>\"no data\"</code> Placeholder for unavailable Observations to Datastreams. <code>\"no data\"</code> showNoDataValue no Boolean <code>true</code> Whether Datastreams should be given without Observations. <code>true</code> timezone no String <code>\"Europe/Berlin\"</code> <code>moment</code> time zone name used to convert a Sensor's PhaenomenonTime (UTC) to the client's time zone. Valid timezome documentation typ yes String Service type; in this case, <code>\"SensorThings\"</code>. (WMS, see above, WMTS, see above, and WFS, see above) <code>\"SensorThings\"</code> url yes String Service URL; may be extended by <code>urlParameter</code> <code>\"https://51.5.242.162/itsLGVhackathon\"</code> urlParameter no urlParameter Query options specification. These modify the request to sensor data, e.g. with <code>\"filter\"</code> or <code>\"expand\"</code>. useProxy no Boolean <code>false</code> Deprecated in the next major release. GDI-DE recommends setting CORS headers on the required services instead. Only used for GFI requests. The request will contain the requested URL as path, with dots replaced by underscores. <code>false</code> version no String \"1.1\" Service version used to request data. <code>\"1.0\"</code> intersect no Boolean true Setting if the sensor data is in intersect range or within range <code>true</code> observeLocation no Boolean false Enable to subscribe to locations <code>true</code> rotationUnit no String \"\" Defines the rotation unit for feature <code>degree</code> maxSpeedKmh no Number undefined Specifies the max. speed (km/h) of moving objects. Used to calculate a buffer around the extent in which the objects are subscribed. maxScaleForHistoricalFeatures no Number undefined Specifies the max. scale to show historical features. factor no Number 10 Is used for the calculation of the buffer around the extent. Ignored if maxSpeedKmh is not defined. historicalLocations no Number Set to an amount to enable historical locations for each moveable feature. The given amount of historical locations will be displayed on the map. <code>5</code> enableContinuousRequest no Boolean Set true to enable continuous requests in an interval based on the configured <code>factor</code>. Will be ignored if no <code>factor</code> is configured. <code>true</code> scaleStyleByZoom no Boolean Scales the style depending on the zoom level. Works only for image styles and subclasses. 'true' <p>Sensor example:</p> <pre><code>   {\n      \"id\" : \"999999\",\n      \"name\" : \"Live - Charging locations\",\n      \"typ\" : \"SensorThings\",\n      \"version\" : \"1.0\",\n      \"url\" : \"https://51.5.242.162/itsLGVhackathon\",\n      \"intersect\": true,\n      \"maxSpeedKmh\": 36,\n      \"maxScaleForHistoricalFeatures\": 40000,\n      \"factor\": 20,\n      \"enableContinuousRequest\": true,\n      \"urlParameter\" : {\n         \"root\" : \"Things\",\n         \"filter\" : \"startswith(Things/name,'Charging')\",\n         \"expand\" : \"Locations,Datastreams/Observations($orderby=phenomenonTime%20desc;$top=1)\"\n      },\n      \"epsg\": \"EPSG:4326\",\n      \"gfiTheme\" : \"default\",\n      \"gfiAttributes\" : {\n         \"phenomenonTime\" : \"Letze Zustands\u00e4nderung\",\n         \"state\" : \"Zustand\",\n         \"plug\" : \"Stecker\",\n         \"type\" : \"Typ\",\n         \"dataStreamId\" : \"DataStreamID\",\n         \"@Datastreams.0\": {\n            \"name\": \"Datastreams.0\",\n            \"type\": \"linechart\",\n            \"query\": \"Observations?$filter=(resultTime gt now() sub duration'PT24H')&amp;$orderby=phenomenonTime asc\",\n            \"format\": \"HH:mm\",\n            \"download\": true,\n            \"options\": {\n             \"pointRadius\": 3\n            }\n         }\n      },\n      \"mqttOptions\" : {\n          \"host\" : \"https://localhost\",\n          \"port\": \"1883\"\n      },\n      \"rotationUnit\": \"degree\"\n   }\n</code></pre>"},{"location":"User/Global-Config/services.json/#sensorlayermqttoptions","title":"SensorLayer.mqttOptions","text":"<p>Used to configure the target of a mqtt web socket connection. If nothing is set, the portal tries to infer the parameters from the service URL.</p> Name Required Type Default Description Example host no String https://localhost the server to connect to, keep in mind that port and path are seperate parameters <code>\"https://www.example.com\"</code> port no String the port to connect to, leave empty to use default by protocol <code>\"8883\"</code> path no String /mqtt the path on the server to connect to, keep in mind with Versions 3.1 or 3.1.1 to give a seperate rhPath if you want to simulate retained messaging <code>\"/mqtt\"</code> protocol no String wss the protocol to use <code>\"wss\"</code> mqttVersion no String 3.1.1 the mqtt version to use (3.1, 3.1.1 or 5.0) if any other is given, latest is used <code>\"3.1.1\"</code> rhPath no String for mqttVersion 3.1 and 3.1.1 to simulate retained handling based on SensorThingsApi, hint: the topic will be put onto this url to call the SensorThingsApi via http <code>\"https://example.com/\"</code> <p>Example mqttOptions: <pre><code>    {\n      \"mqttOptions\" : {\n         \"host\" : \"https://localhost\",\n         \"port\" : \"8883\",\n         \"path\": \"/mqtt\",\n         \"protocol\": \"wss\"\n      }\n   }\n</code></pre></p>"},{"location":"User/Global-Config/services.json/#sensorlayerurlparameter","title":"SensorLayer.urlParameter","text":"<p>Enables filtering SensorThingsAPI requests.</p> Name Required Type Default Description Example expand no String/Array See full documentation <code>\"Locations,Datastreams/Observations($orderby=phenomenonTime%20desc;$top=1)\"</code> filter no String See full documentation <code>\"startswith(Things/name,'Charging')\"</code> root no String \"Things\" The root element in the URL to which the query is applied. possible are <code>\"Things\"</code> or <code>\"Datastreams\"</code> \"Datastreams\" <p>urlParameter example: Show all Things where the name starts with <code>\"Charging\"</code>, and all Datastreams belonging to those Things. Show each Datastream's latest Observation.</p> <pre><code>{\n    \"urlParameter\" : {\n        \"filter\" : \"startswith(Things/name,'Charging')\",\n        \"expand\" : \"Locations,Datastreams/Observations($orderby=phenomenonTime%20desc;$top=1)\",\n        \"root\": \"Things\"\n    }\n}\n</code></pre> <p>urlParameter example: Show all Things where the name starts with <code>\"Charging\"</code>, and all Datastreams belonging to those Things where <code>\"Lastenrad\"</code> is part of the name. Show each Datastream's latest Observation and the Phaenomenon (ObversedProperty) that is observed. If available, the ObservedProperty will be used for dynamic attribute creation.</p> <pre><code>{\n    \"urlParameter\": {\n        \"filter\": \"startswith(Things/name,'Charging')\",\n        \"expand\": [\n            \"Locations\",\n            \"Datastreams($filter=indexof(Datastream/name,'Lastenrad') ge 1)\",\n            \"Datastreams/Observations($orderby=phenomenonTime%20desc;$top=1)\",\n        \"Datastreams/ObservedProperty\"\n        ]\n    }\n}\n</code></pre>"},{"location":"User/Global-Config/services.json/#wms_wfs_oaf_datasets","title":"WMS_WFS_OAF_datasets","text":"<p>Metadata specification. All metadata of the layer data is referenced here. By clicking the \"i\" button in the layer tree, the information is retrieved by the CSW interface and shown to the user. For this, the rest-services.json has to provide the URL of the metadata catalog resp. its CSW interface. The values kategorie_opendata, kategorie_inspire, and kategorie_organisation are used for layer categorization if the config.json has <code>treeType</code> set to <code>\"default\"</code>. It is also possible to retrieve metadata with a getMetaData request, in this case there can also be additional informations displayed. To remove the \"i\" button altogether, explicitly set <code>\"datasets\": false</code>.</p> Name Required Type Default Description md_id no String Metadata record identifier csw_url no String Link to the CSW service. From this, the data that is displayed in the layer information is retrieved. show_doc_url no String Link to the entry in the metadata catalog. The link to the metadata entry of the layer is created from this URL and the <code>\"md_id\"</code>. rs_id no String Resource identifier of the metadata record. md_name no String Record name. bbox no String Record extension. kategorie_opendata no String Opendata category from the govdata.de code list. kategorie_inspire no String Inspire category from the Inspire code list, if available; if not, set to <code>\"nicht Inspire-identifiziert\"</code>. kategorie_organisation no String Organization name of the data holding body. customMetadata no Boolean false Flag for requesting metadata via getMetaData and making customized metadata possible. attributes no Object Key and value pairs with paths to a specific metadata value. <p>datasets example:</p> <pre><code>\"datasets\" : [\n    {\n        \"md_id\" : \"9329C2CB-4552-4780-B343-0CC847538896\",\n        \"csw_url\" : \"https://metaver.de/csw\",\n        \"show_doc_url\" : \"https://metaver.de/trefferanzeige?cmd=doShowDocument&amp;docuuid=\",\n        \"rs_id\" : \"https://registry.gdi-de.org/id/de.hh/010d7370-5306-4b63-983b-59cdd6e94c3c\",\n        \"md_name\" : \"Krankenh\u00e4user Hamburg\",\n        \"bbox\" : \"461468.968928975,5916367.22980651,587010.909598947,5980347.75579767\",\n        \"kategorie_opendata\" : [ \"Gesundheit\" ],\n        \"kategorie_inspire\" : [ \"Versorgungswirtschaft und staatliche Dienste\" ],\n        \"kategorie_organisation\" : \"Beh\u00f6rde f\u00fcr Arbeit, Gesundheit, Soziales, Familie und Integration\"\n    }\n]\n</code></pre> <p>datasets example with getMetaData request:</p> <pre><code>\"datasets\": [{\n      \"customMetadata\": true,\n      \"csw_url\": \"https://mapservice....&amp;request=GetMetadata&amp;layer=beispielLayer\",\n      \"attributes\":\n        {\n        \"Titel\": \"MD_Metadata.fileIdentifier.CharacterString\",\n        \"URL\": \"MD_Metadata.contact.CI_ResponsibleParty.contactInfo.CI_Contact.onlineResource.CI_OnlineResource.linkage.URL\"\n        }\n      }],\n</code></pre>"},{"location":"User/Global-Config/services.json/#gfi_theme","title":"gfi_theme","text":"<p>This attribute may be either a string or an object. In case it's a string, the matching template will be used. In case it's an object, the following parameters are interpreted.</p> Name Required Type Default Description name yes String GFI template name params no params Template-specific attributes <p>gfiTheme example:</p> <pre><code>{\n    \"gfiTheme\": {\n        \"name\": \"default\",\n        \"params\": {}\n    }\n}\n</code></pre>"},{"location":"User/Global-Config/services.json/#gfi_theme_params","title":"gfi_theme_params","text":"<p>Definition of template-specific parameters.</p> Name params default params sensor params"},{"location":"User/Global-Config/services.json/#gfi_theme_default_params","title":"gfi_theme_default_params","text":"<p>Definition of parameters for GFI template <code>\"default\"</code>.</p> Name Required Type Default Description iframe no iframe Defines the size of the iframe. Only works if the infoFormat=\"text/html\" is configured for the layer. imageLinks no String/String[] <code>[\"bildlink\", \"link_bild\", \"Bild\", \"bild\"]</code> Defines in which attribute an image reference is given. Attributes will be searched in given order, and the first hit will be used. maxWidth no String <code>\"600px\"</code> Defines the max width of the gfi content. The max width must be at least 280px. showFavoriteIcons no Boolean <code>true</code> Specifies whether an icon bar allowing tool access is to be displayed. The icons are only displayed if the corresponding tools are configured. Usable tools: <code>compareFeatures</code> (not yet implemented for WMS). beautifyKeys no Boolean true Defines if the attribute keys are beautified (true) or not (false). showObjectKeys no Boolean false Displays attribute keys and values of objects in the data if set to true. <p>gfiTheme example for template \"Default\":</p> <p>Example for show images in the gfi: <pre><code>{\n    \"gfiTheme\": {\n        \"name\": \"default\",\n        \"params\": {\n            \"imageLinks\": [\n                \"bildlink\",\n                \"link_bild\",\n                \"Bild\",\n                \"bild\",\n                \"My_image_tag\"\n            ],\n            \"maxWidth\": \"500px\",\n            \"showFavoriteIcons\": true,\n            \"beautifyKeys\": true,\n            \"showObjectKeys\": false\n        }\n    }\n}\n</code></pre></p> <p>Example for set size of an iframe: <pre><code>{\n    \"gfiTheme\": {\n        \"name\": \"default\",\n        \"params\": {\n            \"iframe\": {\n                \"width\": \"800px\",\n                \"height\": \"20vh\"\n            }\n        }\n    }\n}\n</code></pre></p>"},{"location":"User/Global-Config/services.json/#gfi_theme_default_params_iframe","title":"gfi_theme_default_params_iframe","text":"<p>The GFI can be displayed as an iframe. Here you can define the size of the iframe.</p> <p>Note: Only works if the infoFormat=\"text/html\" is configured for the layer.</p> Name Required Type Default Description height no String \"450px\" Width of the iframe. width no String \"450px\" Height of the iframe. <p>Example for the size of an iframe: <pre><code>{\n    \"iframe\": {\n        \"width\": \"200px\",\n        \"height\": \"200px\"\n    }\n}\n</code></pre></p>"},{"location":"User/Global-Config/services.json/#gfi_theme_sensor_params","title":"gfi_theme_sensor_params","text":"<p>This theme allows the visualization of historical data regarding a SensorThings-API layer. For each configured Observation result an image is created. Therefore, this GFI theme is only usable for results providing a status; e.g., for charging stations such a status range is \"free\", \"loading\", \"out of order\".</p> Name Required Type Default Description charts yes charts Contains attributes for chart creation. data no data Data column names. header no Object <code>{\"name\": \"Name\", \"description\": \"Beschreibung\", \"ownerThing\": \"Eigent\u00fcmer\"}</code> Specifies which attributes are to be used for the headers. The display name of each attribute can be specified here, e.g. <code>\"description\"</code> may be displayed <code>\"Arbitrary String\"</code>. historicalData no historicalData Indicates for which period the historical Observations should be requested. beautifyKeys no Boolean true Defines if the attribute keys are beautified (true) or not (false). showObjectKeys no Boolean false Displays attribute keys and values of objects in the data if set to true. <p>gfiTheme example for template \"Sensor\":</p> <pre><code>{\n    \"gfiTheme\": {\n        \"name\": \"sensor\",\n        \"params\": {\n            \"header\": {\n                \"name\": \"Name\",\n                \"description\": \"Description\",\n                \"ownerThing\": \"Owner\"\n            },\n            \"data\": {\n                \"name\": \"Data\",\n                \"firstColumnHeaderName\": \"Properties\",\n                \"columnHeaderAttribute\": \"layerName\"\n            },\n            \"charts\": {\n                \"hoverBackgroundColor\": \"rgba(0, 0, 0, 0.8)\",\n                \"barPercentage\": 1.1,\n                \"values\": {\n                    \"available\": {\n                        \"title\": \"Available\",\n                        \"color\": \"rgba(0, 220, 0, 1)\"\n                    },\n                    \"charging\": {\n                        \"title\": \"Charging\",\n                        \"color\": \"rgba(220, 0, 0, 1)\"\n                    },\n                    \"outoforder\": {\n                        \"title\": \"common:modules.tools.gfi.themes.sensor.chargingStations.outoforder\",\n                        \"color\": \"rgba(175, 175, 175, 1)\"\n                    }\n                }\n            },\n            \"historicalData\": {\n                \"periodLength\": 3,\n                \"periodUnit\": \"month\"\n            },\n            \"beautifyKeys\": true,\n            \"showObjectKeys\": false\n        }\n    }\n}\n</code></pre>"},{"location":"User/Global-Config/services.json/#gfi_theme_sensor_params_charts","title":"gfi_theme_sensor_params_charts","text":"<p>Chart display parameters.</p> Name Required Type Default Description values yes String[]/valuesObject Definition of which Observation Results are turned into charts. A separate tab will be created for each result. Results may be entered as array or object; when given as object, further attributes may be defined. hoverBackgroundColor no String <code>\"rgba(0, 0, 0, 0.8)\"</code> Bar background color on hovering. barPercentage no Number <code>1.0</code> Bar width. <p>Configuration example with array value: <pre><code>{\n    \"charts\": {\n        \"hoverBackgroundColor\": \"rgba(0, 0, 0, 0.8)\",\n        \"barPercentage\": 1.1,\n        \"values\": [\n            \"available\",\n            \"charging\",\n            \"outoforder\"\n        ]\n    }\n}\n</code></pre></p> <p>Configuration example with object value: <pre><code>{\n    \"charts\": {\n        \"hoverBackgroundColor\": \"rgba(0, 0, 0, 0.8)\",\n        \"barPercentage\": 1.1,\n        \"values\": {\n            \"available\": {\n                \"title\": \"Available\",\n                \"color\": \"rgba(0, 220, 0, 1)\"\n            },\n            \"charging\": {\n                \"title\": \"Charging\",\n                \"color\": \"rgba(220, 0, 0, 1)\"\n            },\n            \"outoforder\": {\n                \"title\": \"Out Of Order\",\n                \"color\": \"rgba(175, 175, 175, 1)\"\n            }\n        }\n    }\n}\n</code></pre></p>"},{"location":"User/Global-Config/services.json/#gfi_theme_sensor_params_charts_valuesobject","title":"gfi_theme_sensor_params_charts_valuesObject","text":"<p>Layout definition for each result's chart.</p> Name Required Type Default Description title no String Chart image title. May also be set to a path in the translation files in <code>masterportal/locales</code>, which you may extend at your own discretion. color no String <code>\"rgba(0, 0, 0, 1)\"</code> Bar color. noticeText no String \"\" Text that gives a hint about the data. <pre><code>{\n    \"available\": {\n        \"title\": \"Available\",\n        \"color\": \"rgba(0, 220, 0, 1)\",\n        \"noticeText\": \"Explanation of the available data.\"\n    }\n}\n</code></pre> <pre><code>{\n    \"charging\": {\n        \"title\": \"common:modules.tools.gfi.themes.sensor.chargingStations.charging\",\n        \"color\": \"rgba(220, 0, 0, 1)\",\n        \"noticeText\": \"common:modules.tools.gfi.themes.sensor.sensorBarChart.noticeTextCharging\"\n    }\n}\n</code></pre>"},{"location":"User/Global-Config/services.json/#gfi_theme_sensor_params_data","title":"gfi_theme_sensor_params_data","text":"<p>Data display configuration.</p> Name Required Type Default Description Example name no String Tab name. firstColumnHeaderName no String <code>\"Properties\"</code> Column title for attribute names. columnHeaderAttribute no String <code>\"dataStreamName\"</code> Value column title. <pre><code>{\n    \"data\": {\n        \"name\": \"Data\",\n        \"firstColumnHeaderName\": \"Properties\",\n        \"columnHeaderAttribute\": \"layerName\"\n    }\n}\n</code></pre>"},{"location":"User/Global-Config/services.json/#gfi_theme_sensor_params_historicaldata","title":"gfi_theme_sensor_params_historicalData","text":"<p>Configuration of historical data period to be request.</p> Name Required Type Default Description name no String Tab name. periodLength no Number <code>3</code> Period length. periodUnit no String <code>\"month\"</code> Unit for period. Use <code>\"month\"</code> or <code>\"year\"</code>. <pre><code>{\n    \"historicalData\": {\n        \"periodLength\": 3,\n        \"periodUnit\": \"month\"\n    }\n}\n</code></pre>"},{"location":"User/Global-Config/services.json/#gfi_attributes","title":"gfi_attributes","text":"<p>Potentially cryptic service-side attribute names may be translated with these key-value pairs within the portal.</p> <p>Other options:</p> <ul> <li><code>\"ignore\"</code>: GFI requests disabled</li> <li><code>\"showAll\"</code>: All GFI attributes are requested and shown as given</li> </ul> <p>The portal excludes a set of standard attributes that have no information value to users. See config.js for details.</p> <p>gfiAttributes string example:</p> <pre><code>{\n   \"gfiAttributes\": \"showAll\"\n}\n</code></pre> <p>gfiAttributes string example:</p> <pre><code>{\n   \"gfiAttributes\": \"ignore\"\n}\n</code></pre> <p>gfiAttributes object example:</p> <pre><code>{\n   \"gfiAttributes\": {\n      \"key1\": \"key shown in the portal 1\",\n      \"key2\": \"key shown in the portal 2\",\n      \"key3\": \"key shown in the portal 3\"\n   }\n}\n</code></pre> <p>gfiAttributes nested object example:</p> <pre><code>/* for GFI example object from feature: {\n    \"address\": {\n        \"street\": \"Main Street\",\n        \"PLZ\": \"80673\"\n    }\n}*/\n{\n   \"gfiAttributes\": {\n      \"Address.Street\": \"Street\"\n   }\n}\n</code></pre> <p>gfiAttributes example object with Objektpfadverweis (object path reference): <pre><code>{\n   \"gfiAttributes\": {\n      \"key1\": \"key shown in the portal 1\",\n      \"key2\": \"key shown in the portal 2\",\n      \"@Datastreams.0.Observations.0.result\": \"key shown in the portal 3\"\n   }\n}\n</code></pre></p> <p>If the gfiAttributes are given as an object, a key's value may also be an object. In that case, the nested object defines a restriction for using that key.</p> Name Required Type Default Description Example name yes String Name to be shown on an exact match. <code>\"Test\"</code> condition yes enum[\"contains\", \"startsWith\", \"endsWith\"] Condition checked on each feature attribute. <code>\"startsWith\"</code> type no enum[\"string\", \"date\", \"number\", \"boolean\", \"html\"] <code>\"string\"</code> If <code>\"date\"</code>, the portal will attempt to parse the attribute value to a date; If <code>\"Number\"</code>, the portal will attempt to parse the attribute value to with thousand seperator; If \u201cboolean\u201d, the portal will attempt to parse the attribute value to boolean value. <code>\"date\"</code> html no html Object to define the html tag properties. this is neccessary if type ist set to 'html'. <code>\"Test\"</code> format no String/Object <code>\"YYYY-MM-DDTHH:mm:ss.SSSZ\"/{\"key\": \"value\"}</code> Data format. <code>\"DD.MM.YYY\"</code> prefix no String Attribute value prefix. Add string to value without whitespace <code>\"https://\"</code> suffix no String Attribute value suffix. <code>\"\u00b0C\"</code> <p>gfiAttributes example object using <code>suffix</code> and <code>prefix</code> :</p> <pre><code>{\n   \"gfiAttributes\": {\n      \"key1\": \"key shown in the portal 1\",\n      \"key2\": \"key shown in the portal 2\",\n      \"key3\": {\n         \"name\": \"key shown in the portal 3\",\n         \"condition\": \"contains\",\n         \"suffix\": \"\u00b0C\",\n         \"prefix\": \"https://\"\n      }\n   }\n}\n</code></pre> <p>gfiAttributes example object using <code>type</code> and <code>format</code>:</p> <pre><code>{\n   \"gfiAttributes\": {\n      \"key1\": \"key shown in the portal 1\",\n      \"key2\": \"key shown in the portal 2\",\n      \"key3\": {\n         \"name\": \"key shown in the portal 3\",\n         \"condition\": \"contains\",\n         \"type\": \"date\",\n         \"format\": \"DD.MM.YY\"\n      }\n   }\n}\n</code></pre> <p>gfiAttributes example object using <code>number</code>:</p> <pre><code>{\n   \"gfiAttributes\": {\n      \"key1\": \"key shown in the portal 1\",\n      \"key2\": \"key shown in the portal 2\",\n      \"key3\": {\n         \"name\": \"key shown in the portal 3\",\n         \"condition\": \"contains\",\n         \"type\": \"number\"\n      }\n   }\n}\n</code></pre> <p>gfiAttributes example object using <code>boolean</code> without <code>format</code>:</p> <pre><code>{\n   \"gfiAttributes\": {\n      \"key1\": \"key shown in the portal 1\",\n      \"key2\": \"key shown in the portal 2\",\n      \"key3\": {\n         \"name\": \"key shown in the portal 3\",\n         \"condition\": \"contains\",\n         \"type\": \"boolean\"\n      }\n   }\n}\n</code></pre> <p>gfiAttributes example object using <code>boolean</code> with <code>format</code> in translation key:</p> <pre><code>{\n   \"gfiAttributes\": {\n      \"key1\": \"key shown in the portal 1\",\n      \"key2\": \"key shown in the portal 2\",\n      \"key3\": {\n         \"name\": \"key shown in the portal 3\",\n         \"condition\": \"contains\",\n         \"type\": \"boolean\",\n         \"format\": {\n            \"true\": \"common:modules.tools.gfi.boolean.yes\",\n            \"false\": \"common:modules.tools.gfi.boolean.no\"\n         }\n      }\n   }\n}\n</code></pre> <p>gfiAttributes example object using <code>boolean</code> with <code>format</code> in normal text:</p> <pre><code>{\n   \"gfiAttributes\": {\n      \"key1\": \"key shown in the portal 1\",\n      \"key2\": \"key shown in the portal 2\",\n      \"key3\": {\n         \"name\": \"key shown in the portal 3\",\n         \"condition\": \"contains\",\n         \"type\": \"boolean\",\n         \"format\": {\n            \"true\": \"it is right\",\n            \"false\": \"it is wrong\"\n         }\n      }\n   }\n}\n</code></pre> <p>gfiAttributes example object with Objektpfadverweis (object path reference) key and object value:</p> <pre><code>{\n   \"gfiAttributes\": {\n      \"key1\": \"key shown in the portal 1\",\n      \"key2\": \"key shown in the portal 2\",\n      \"@Datastreams.0.Observations.0.result\": {\n        \"name\": \"Temperatur\",\n        \"suffix\": \"\u00b0C\"\n      }\n   }\n}\n</code></pre>"},{"location":"User/Global-Config/services.json/#gfiattributes-html","title":"gfiAttributes html","text":"<p>With these confurations a url in the feature properties can be displayed either as a link with configurable name, or as an img-tag or as an iframe. Furthermore properties for the tag can be configured.</p> Name Required Type Default Description Example tag yes String tag to be created <code>\"a\"</code> innerHTML no String innerHTML to be created. If innerHTML is set to \"%value%\", the attributes value is used. <code>\"Link\"</code> properties no Object properties to be set at the html tag. If value is set to \"%value%\", the attributes value is used <code>{\"target\": \"_blank\"}</code> <p>gfiAttributes example object using type <code>html</code> and tag <code>a</code></p> <pre><code>{\n   \"gfiAttributes\": {\n      \"key1\": {\n         \"name\": \"key shown in the portal \",\n         \"type\": \"html\",\n         \"html\": {\n          \"tag\": \"a\",\n          \"innerHTML\": \"zum Link\",\n          \"properties\": {\n            \"href\": \"%value%\",\n            \"target\": \"_blank\"\n          }\n        }\n      }\n   }\n}\n</code></pre> <p>gfiAttributes example object using type <code>html</code> and tag <code>img</code></p> <pre><code>{\n   \"gfiAttributes\": {\n      \"key1\": {\n         \"name\": \"key shown in the portal 1\",\n         \"type\": \"html\",\n         \"html\": {\n          \"tag\": \"img\",\n          \"properties\": {\n            \"src\": \"%value%\",\n            \"max-width\": \"150px\"\n          }\n        }\n      }\n   }\n}\n</code></pre> <p>gfiAttributes example object using type <code>html</code> and tag <code>iframe</code></p> <pre><code>{\n   \"gfiAttributes\": {\n      \"key1\": {\n         \"name\": \"key shown in the portal 1\",\n         \"type\": \"html\",\n         \"html\": {\n          \"tag\": \"iframe\",\n          \"properties\": {\n            \"src\": \"%value%\",\n            \"width\": \"250px\",\n            \"height\": \"250px\",\n            \"frameborder\": \"0\",\n            \"allow\": \"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\",\n            \"allowfullscreen\": true\n          }\n        }\n      }\n   }\n}\n</code></pre>"},{"location":"User/Global-Config/services.json/#geojson-layer","title":"GeoJSON layer","text":"Name Required Type Default Description Example gfiAttributes yes String/gfiAttributes GFI attributes to be shown. <code>\"ignore\"</code> id yes String Arbitrary id <code>\"11111\"</code> layerAttribution no String <code>\"nicht vorhanden\"</code> Additional layer information to be shown in the portal's control element LayerAttribution, if configured to appear. If <code>\"nicht vorhanden\"</code> (technical key meaning \"not available\") is chosen, no layer attribution is shown. <code>\"nicht vorhanden\"</code> legendURL yes String/String[] Deprecated, please use \"legend\". Link to static legend image. <code>\"ignore\"</code>: No image is retrieved, <code>\"\"</code> (empty string): The service's GetLegendGraphic is called. <code>\"ignore\"</code> legend no Boolean/String/String[] Value of the services.json file. URL to be used to request a static legend image. Use a boolean value to dynamically generate the legend from a WMS request or the WFS styling respectively. Use a string to link an image or a PDF file. <code>false</code> name yes String Arbitrary display name used in the layer tree. <code>\"local GeoJSON\"</code> typ yes String Service type; in this case, <code>\"GeoJSON\"</code>. <code>\"GeoJSON\"</code> subTyp no enum[\"OpenSenseMap\"] SubType to fetch special data. <code>\"OpenSenseMap\"</code> url yes String GeoJSON path/URL. The path must be given relative to the <code>index.html</code> file. <code>\"/myJsons/test.json\"</code> altitudeMode no enum[\"clampToGround\",\"absolute\",\"relativeToGround\"] <code>\"clampToGround\"</code> Height mode in 3D mode. <code>\"absolute\"</code> altitude no Number Display height in 3D mode in meters. If an altitude is given, any existing z coordinate is overwritten. If no z coordinate exists, altitude is used as its value. <code>527</code> altitudeOffset no Number Height offset for display in 3D mode in meters. If given, any existing z coordinates will be increased by this value. If no z coordinate exists, this value is used as z coordinate. <code>10</code> gfiTheme yes String/Object Display style of GFI information for this layer. Unless <code>\"default\"</code> is chosen, custom templates may be used to show GFI information in another format than the default table style. <code>\"default\"</code> <p>GeoJSON layer example:</p> <pre><code>    {\n      \"id\" : \"11111\",\n      \"name\" : \"lokale GeoJSON\",\n      \"url\" : \"myJsons/test.json\",\n      \"typ\" : \"GeoJSON\",\n      \"gfiAttributes\" : \"showAll\",\n      \"layerAttribution\" : \"nicht vorhanden\",\n      \"legendURL\" : \"\",\n      \"gfiTheme\": \"default\"\n   }\n</code></pre>"},{"location":"User/Global-Config/services.json/#oaf-layer","title":"OAF layer","text":"Name Required Type Default Description Example datasets yes datasets[]/Boolean Metadata specification. All metadata of the layer data is referenced here. By clicking the \"i\" button in the layer tree, the information is retrieved by the CSW interface and shown to the user. For this, the rest-services.json has to provide the URL of the metadata catalog resp. its CSW interface. The values kategorie_opendata, kategorie_inspire, and kategorie_organisation are used for layer categorization if the config.json has <code>treeType</code> set to <code>\"default\"</code>. It is also possible to retrieve metadata with a getMetaData request, in this case there can also be additional informations displayed. To remove the \"i\" button altogether, explicitly set <code>\"datasets\": false</code>. collection yes String Collection to load. <code>\"bab_vkl\"</code> gfiAttributes yes String/gfiAttributes GFI attributes to be shown. <code>\"ignore\"</code> id yes String/wfs_id Arbitrary id or an object with id and suffix <code>\"44\"</code> layerAttribution no String <code>\"nicht vorhanden\"</code> Additional layer information to be shown in the portal's control element LayerAttribution, if configured to appear. If <code>\"nicht vorhanden\"</code> (technical key meaning \"not available\") is chosen, no layer attribution is shown. <code>\"nicht vorhanden\"</code> legend no Boolean/String/String[] Value of the services.json file. URL to be used to request a static legend image. Use a boolean value to dynamically generate the legend from a OAF request or the OAF styling respectively. Use a string to link an image or a PDF file. <code>false</code> name yes String Arbitrary display name used in the layer tree. <code>\"Traffic situation on freeways\"</code> typ yes String Service type; in this case, \"OAF\". <code>\"OAF\"</code> url yes String Service URL <code>\"https://api.hamburg.de/datasets/v1/schulen\"</code> altitudeMode no enum[\"clampToGround\",\"absolute\",\"relativeToGround\"] <code>\"clampToGround\"</code> Height mode in 3D mode. <code>\"absolute\"</code> altitude no Number Display height in 3D mode in meters. If an altitude is given, any existing z coordinate is overwritten. If no z coordinate exists, altitude is used as its value. <code>527</code> altitudeOffset no Number Height offset for display in 3D mode in meters. If given, any existing z coordinates will be increased by this value. If no z coordinate exists, this value is used as z coordinate. <code>10</code> gfiTheme yes String/Object Display style of GFI information for this layer. Unless <code>\"default\"</code> is chosen, custom templates may be used to show GFI information in another format than the default table style. <code>\"default\"</code> isSecured no Boolean false Displays whether the layer belongs to a secured service. (see below) false authenticationUrl no String Additional url called to trigger basic authentication in the browser. \"https://api.hamburg.de/datasets/v1/schulen/collections/staatliche_schulen/appschema\" limit false Number Limits the number of items presented in the response document. Ignored if bulk is <code>true</code>. <code>10</code> crs false String http://www.opengis.net/def/crs/EPSG/0/25832 The coordinate reference system of the response geometries. If not supported, server will respond with error 400. See collections index of your oaf service for supported crs. e.g. https://api.hamburg.de/datasets/v1/schulen/collections. Can also be set to false to disable the crs parameter <code>\"EPSG:25832\"</code> <p>OAF example:</p> <pre><code>{\n    \"id\": \"5001\",\n    \"name\": \"Schulen\",\n    \"url\": \"https://api.hamburg.de/datasets/v1/schulen\",\n    \"collection\" : \"staatliche_schulen\",\n    \"typ\": \"OAF\",\n    \"limit\": 10,\n    \"crs\": \"http://www.opengis.net/def/crs/EPSG/0/25832\",\n    \"styleId\": \"8712\",\n    \"gfiAttributes\": \"showAll\",\n    \"gfiTheme\": \"default\"\n}\n</code></pre>"},{"location":"User/Global-Config/services.json/#heatmap-layer","title":"Heatmap layer","text":"Name Required Type Default Description Example id yes String Arbitrary id <code>\"11111\"</code> layerAttribution no String <code>\"nicht vorhanden\"</code> Additional layer information to be shown in the portal's control element LayerAttribution, if configured to appear. If <code>\"nicht vorhanden\"</code> (technical key meaning \"not available\") is chosen, no layer attribution is shown. <code>\"nicht vorhanden\"</code> name yes String Arbitrary display name used in the layer tree. <code>\"My heatmap layer\"</code> typ yes String Service type; in this case, <code>\"Heatmap\"</code>. <code>\"Heatmap\"</code> attribute no String <code>\"\"</code> Attribute name. Only features holding \"key\" and \"value\" will be used. <code>\"attr1\"</code> value no String <code>\"\"</code> Attribute value. Only features holding \"key\" and \"value\" will be used. <code>\"val1\"</code> radius no Number <code>10</code> Radius of a heatmap feature. <code>10</code> blur no Number <code>15</code> Blur of heatmap features. <code>15</code> gradient no String[] <code>[\"#00f\", \"#0ff\", \"#0f0\", \"#ff0\", \"#f00\"]</code> Heatmap color gradient. <code>[\"#f00\", \"#0f0\", \"#00f\"]</code> dataLayerId yes String Id of layer to use for heatmap features. <code>\"4321\"</code> <p>Heatmap layer example:</p> <pre><code>{\n    \"id\": \"1234\",\n    \"name\": \"Heatmap to vector layer 4321\",\n    \"typ\": \"Heatmap\",\n    \"attribute\": \"state\",\n    \"value\": \"charging\",\n    \"radius\": 20,\n    \"blur\": 30,\n    \"gradient\": [\n      \"#ffffb2\",\n      \"#fd8d3c\",\n      \"#fd8d3c\",\n      \"#f03b20\",\n      \"#bd0026\"\n    ],\n    \"gfiAttributes\": \"ignore\",\n    \"dataLayerId\": \"4321\"\n}\n</code></pre>"},{"location":"User/Global-Config/services.json/#3d-object-layer-tileset","title":"3D Object Layer TileSet","text":"Name Required Type Default Description Example datasets no datasets/Boolean Metadata specification. All metadata the layer data is referenced here. On clicking the \"i\" button in the layer tree, the information is retrieved by the CSW interface and shown to the user. For this, the rest-services.json has to provide the URL of the metadata catalog resp. its CSW interface. The values kategorie_opendata, kategorie_inspire, and kategorie_organisation are used for layer categorization if the config.json has <code>treeType</code> set to <code>\"default\"</code>. It is also possible to retrieve metadata with a getMetaData request, in this case there can also be additional informations displayed. To remove the \"i\" button altogether, explicitly set <code>\"datasets\": false</code>. gfiAttributes yes String/gfiAttributes GFI attributes to be shown. <code>\"ignore\"</code> id yes String Arbitrary id <code>\"44\"</code> layerAttribution no String <code>\"nicht vorhanden\"</code> Additional layer information to be shown in the portal's control element LayerAttribution, if configured to appear. If <code>\"nicht vorhanden\"</code> (technical key meaning \"not available\") is chosen, no layer attribution is shown. <code>\"nicht vorhanden\"</code> legendURL yes String/String[] Deprecated, please use \"legend\". Link to static legend image. <code>\"ignore\"</code>: No image is retrieved, <code>\"\"</code> (empty string): The service's GetLegendGraphic is called. <code>\"ignore\"</code> legend no Boolean/String/String[] Value of the services.json file. URL to be used to request a static legend image. Use a boolean value to dynamically generate the legend from a WMS request or the WFS styling respectively. Use a string to link an image or a PDF file. <code>false</code> name yes String Arbitrary display name used in the layer tree. <code>\"Traffic situation on freeways\"</code> hiddenFeatures no Array List of ids describing features to hide <code>[\"id_1\", \"id_2\"]</code> typ yes String Service type; in this case, <code>\"TileSet3D\"</code>. <code>\"TileSet3D\"</code> url yes String Dienste URL <code>\"https://geodienste.hamburg.de/buildings_lod2\"</code> cesium3DTilesetOptions no cesium3DTilesetOptions Cesium 3D tileset options directly forwarded to the cesium tileset object. E.g. <code>maximumScreenSpaceError</code> can be used for distance visibility. useProxy no Boolean <code>false</code> Deprecated in the next major release. GDI-DE recommends setting CORS headers on the required services instead. Only used for GFI requests. The request will contain the requested URL as path, with dots replaced by underscores. <code>false</code> <p>Tileset example:</p> <pre><code>{\n    \"id\": \"buildings\",\n    \"name\": \"Buildings\",\n    \"url\": \"https://geodienste.hamburg.de/b3dm_hamburg_lod2\",\n    \"typ\": \"Tileset3D\",\n    \"gfiAttributes\": \"showAll\",\n    \"layerAttribution\": \"nicht vorhanden\",\n    \"legend\": false,\n    \"hiddenFeatures\": [\"id1\", \"id2\"],\n    \"cesium3DTilesetOptions\": {\n        \"maximumScreenSpaceError\": 6\n    },\n    \"datasets\": [\n        {\n            \"md_id\": \"2FC4BBED-350C-4380-B138-4222C28F56C6\",\n            \"rs_id\": \"HMDK/6f62c5f7-7ea3-4e31-99ba-97407b1af9ba\",\n            \"md_name\": \"LOD 2 Geb\u00e4ude\",\n            \"bbox\": \"461468.97,5916367.23,587010.91,5980347.76\",\n            \"kategorie_opendata\": [\n                \"LOD 2 Geb\u00e4ude\"\n            ],\n            \"kategorie_inspire\": [\n                \"LOD 2 Geb\u00e4ude\"\n            ],\n            \"kategorie_organisation\": \"Beh\u00f6rde f\u00fcr Wirtschaft, Verkehr und Innovation\"\n        }\n    ]\n}\n</code></pre>"},{"location":"User/Global-Config/services.json/#terrain3d-quantized-mesh-dataset","title":"Terrain3D Quantized Mesh Dataset","text":"Name Required Type Default Description Example datasets no datasets/Boolean Metadata specification. All metadata of the layer data is referenced here. By clicking the \"i\" button in the layer tree, the information is retrieved by the CSW interface and shown to the user. For this, the rest-services.json has to provide the URL of the metadata catalog resp. its CSW interface. The values kategorie_opendata, kategorie_inspire, and kategorie_organisation are used for layer categorization if the config.json has <code>treeType</code> set to <code>\"default\"</code>. It is also possible to retrieve metadata with a getMetaData request, in this case there can also be additional informations displayed. To remove the \"i\" button altogether, explicitly set <code>\"datasets\": false</code>. id yes String Arbitrary id <code>\"44\"</code> layerAttribution no String <code>\"nicht vorhanden\"</code> Additional layer information to be shown in the portal's control element LayerAttribution, if configured to appear. If <code>\"nicht vorhanden\"</code> (technical key meaning \"not available\") is chosen, no layer attribution is shown. <code>\"nicht vorhanden\"</code> legendURL yes String/String[] Deprecated, please use \"legend\". Link to static legend image. <code>\"ignore\"</code>: No image is retrieved, <code>\"\"</code> (empty string): The service's GetLegendGraphic is called. <code>\"ignore\"</code> legend no Boolean/String/String[] Value of the services.json file. URL to be used to request a static legend image. Use a boolean value to dynamically generate the legend from a WMS request or the WFS styling respectively. Use a string to link an image or a PDF file. <code>false</code> name yes String Arbitrary display name used in the layer tree. <code>\"Charging locations\"</code> typ yes String Service type; in this case, <code>\"Terrain3D\"</code>. <code>\"Terrain3D\"</code> url yes String Service URL <code>\"https://geodienste.hamburg.de/terrain\"</code> cesiumTerrainProviderOptions no cesiumTerrainProviderOptions Cesium TerrainProvider options directly forwarded to the Cesium TerrainProvider. E.g. <code>requestVertexNormals</code> can be used for object shading. useProxy no Boolean <code>false</code> Deprecated in the next major release. GDI-DE recommends setting CORS headers on the required services instead. Only used for GFI requests. The request will contain the requested URL as path, with dots replaced by underscores. <code>false</code> <p>Terrain example:</p> <pre><code>   {\n      \"id\" : \"buildings\",\n      \"name\" : \"Terrain\",\n      \"url\" : \"https://geodienste.hamburg.de/terrain\",\n      \"typ\" : \"Terrain3D\",\n      \"gfiAttributes\" : \"showAll\",\n      \"layerAttribution\" : \"nicht vorhanden\",\n      \"legend\" : false,\n      \"cesiumTerrainProviderOptions\": {\n        \"requestVertexNormals\" : true\n      },\n      \"datasets\" : [\n         {\n            \"md_id\" : \"2FC4BBED-350C-4380-B138-4222C28F56C6\",\n            \"rs_id\" : \"HMDK/6f62c5f7-7ea3-4e31-99ba-97407b1af9ba\",\n            \"md_name\" : \"Terrain\",\n            \"bbox\" : \"461468.97,5916367.23,587010.91,5980347.76\",\n            \"kategorie_opendata\" : [\n               \"Terrain\"\n            ],\n            \"kategorie_inspire\" : [\n               \"Terrain\"\n            ],\n            \"kategorie_organisation\" : \"Beh\u00f6rde f\u00fcr Wirtschaft, Verkehr und Innovation\"\n         }\n      ]\n   }\n</code></pre>"},{"location":"User/Global-Config/services.json/#oblique-layer","title":"Oblique Layer","text":"Name Required Type Default Description Example datasets no datasets/Boolean Metadata specification. All metadata of the layer data is referenced here. By clicking the \"i\" button in the layer tree, the information is retrieved by the CSW interface and shown to the user. For this, the rest-services.json has to provide the URL of the metadata catalog resp. its CSW interface. The values kategorie_opendata, kategorie_inspire, and kategorie_organisation are used for layer categorization if the config.json has <code>treeType</code> set to <code>\"default\"</code>. It is also possible to retrieve metadata with a getMetaData request, in this case there can also be additional informations displayed. To remove the \"i\" button altogether, explicitly set <code>\"datasets\": false</code>. id yes String Arbitrary id <code>\"44\"</code> layerAttribution no String <code>\"nicht vorhanden\"</code> Additional layer information to be shown in the portal's control element LayerAttribution, if configured to appear. If <code>\"nicht vorhanden\"</code> (technical key meaning \"not available\") is chosen, no layer attribution is shown. <code>\"nicht vorhanden\"</code> name yes String Arbitrary display name used in the layer tree. <code>\"Charging locations\"</code> typ yes String Service type; in this case, <code>\"Oblique\"</code>. <code>\"Oblique\"</code> hideLevels no Number Amount of image levels of the image pyramid not to be shown. <code>0</code> minZoom no Number Minimal zoom level 0 shows the complete oblique image. <code>0</code> terrainUrl no String URL to the Cesium Quantized Mesh Terrain dataset. <code>\"https://geodienste.hamburg.de/terrain\"</code> resolution no Number Resolution of oblique images in centimeters. <code>10</code> projection yes String Projection of the oblique image layer. <code>EPSG:25832</code> url yes String Service URL <code>\"https://geodienste.hamburg.de/oblique\"</code> useProxy no Boolean <code>false</code> Deprecated in the next major release. GDI-DE recommends setting CORS headers on the required services instead. Only used for GFI requests. The request will contain the requested URL as path, with dots replaced by underscores. <code>false</code> <p>Oblique layer example:</p> <pre><code>   {\n      \"id\" : \"oblique\",\n      \"name\" : \"Oblique\",\n      \"url\" : \"https://geodienste.hamburg.de/oblique\",\n      \"typ\" : \"Oblique\",\n      \"gfiAttributes\" : \"showAll\",\n      \"layerAttribution\" : \"nicht vorhanden\",\n      \"legend\" : false,\n      \"datasets\" : [\n         {\n            \"md_id\" : \"2FC4BBED-350C-4380-B138-4222C28F56C6\",\n            \"rs_id\" : \"HMDK/6f62c5f7-7ea3-4e31-99ba-97407b1af9ba\",\n            \"md_name\" : \"Oblique\",\n            \"bbox\" : \"461468.97,5916367.23,587010.91,5980347.76\",\n            \"kategorie_opendata\" : [\n               \"Oblique\"\n            ],\n            \"kategorie_inspire\" : [\n               \"Oblique\"\n            ],\n            \"kategorie_organisation\" : \"Beh\u00f6rde f\u00fcr Wirtschaft, Verkehr und Innovation\"\n         }\n      ]\n   }\n</code></pre>"},{"location":"User/Global-Config/services.json/#entities-layer-3d","title":"Entities Layer 3D","text":"<p>Used to display 3D models in Gltf or Glb format.</p> Name Required Type Default Description Example datasets no datasets/Boolean Metadata specification. All metadata of the layer data is referenced here. By clicking the \"i\" button in the layer tree, the information is retrieved by the CSW interface and shown to the user. For this, the rest-services.json has to provide the URL of the metadata catalog resp. its CSW interface. The values kategorie_opendata, kategorie_inspire, and kategorie_organisation are used for layer categorization if the config.json has <code>treeType</code> set to <code>\"default\"</code>. It is also possible to retrieve metadata with a getMetaData request, in this case there can also be additional informations displayed. To remove the \"i\" button altogether, explicitly set <code>\"datasets\": false</code>. id yes String Arbitrary id <code>\"41\"</code> layerAttribution no String <code>\"nicht vorhanden\"</code> Additional layer information to be shown in the portal's control element LayerAttribution, if configured to appear. If <code>\"nicht vorhanden\"</code> (technical key meaning \"not available\") is chosen, no layer attribution is shown. <code>\"nicht vorhanden\"</code> name yes String Arbitrary display name used in the layer tree. <code>\"Charging locations\"</code> typ yes String Service type; in this case, <code>\"Entities3D\"</code>. <code>\"Entities3D\"</code> entities yes Array Models to be shown <code>[]</code> useProxy no Boolean <code>false</code> Deprecated in the next major release. GDI-DE recommends setting CORS headers on the required services instead. Only used for GFI requests. The request will contain the requested URL as path, with dots replaced by underscores. <code>false</code> <p>Entity options</p> Name Required Type Default Description Example url yes String <code>\"\"</code> Model URL <code>\"https://hamburg.virtualcitymap.de/gltf/4AQfNWNDHHFQzfBm.glb\"</code> attributes no Object <code>{}</code> Model attributes <code>{\"name\": \"test\"}</code> latitude yes Number Model origin latitude in degree <code>53.541831</code> longitude yes Number Model origin longitude in degree <code>9.917963</code> height no Number <code>0</code> Model origin height <code>10</code> heading no Number <code>0</code> Model origin rotation in degree <code>0</code> pitch no Number <code>0</code> Model pitch in degree <code>0</code> roll no Number <code>0</code> Model roll in degree <code>0</code> scale no Number <code>1</code> Model scale <code>1</code> allowPicking no Boolean <code>true</code> Whether model may be clicked for GFI <code>true</code> show no Boolean <code>true</code> Whether model should be visible (should be <code>true</code>) <code>true</code> <p>Entities3D layer example:</p> <pre><code>   {\n     \"id\": \"gltfLayer\",\n     \"name\": \"GltfLayer\",\n     \"typ\": \"Entities3D\",\n     \"layerAttribution\": \"nicht vorhanden\",\n     \"legend\": false,\n     \"entities\": [\n       {\n         \"url\": \"https://hamburg.virtualcitymap.de/gltf/4AQfNWNDHHFQzfBm.glb\",\n         \"attributes\": {\n           \"name\": \"Fernsehturm.kmz\"\n         },\n         \"latitude\": 53.541831,\n         \"longitude\": 9.917963,\n         \"height\": 10,\n         \"heading\": -1.2502079000000208,\n         \"pitch\": 0,\n         \"roll\": 0,\n         \"scale\": 5,\n         \"allowPicking\": true,\n         \"show\": true\n       }\n     ],\n     \"datasets\": [\n       {\n         \"md_id\": \"A39B4E86-15E2-4BF7-BA82-66F9913D5640\",\n         \"rs_id\": \"https://registry.gdi-de.org/id/de.hh/6D10BE89-636D-4359-8B27-4AB4DCA02F3A\",\n         \"md_name\": \"Digitales H\u00f6henmodell Hamburg DGM 1\",\n         \"bbox\": \"461468.97,5916367.23,587010.91,5980347.76\",\n         \"kategorie_opendata\": [\n           \"Geographie, Geologie und Geobasisdaten\"\n         ],\n         \"kategorie_inspire\": [\n           \"H\u00f6he\"\n         ],\n         \"kategorie_organisation\": \"Landesbetrieb Geoinformation und Vermessung\"\n       }\n     ]\n   }\n</code></pre> <p>Return to the Masterportal documentation.</p>"},{"location":"User/Global-Config/style.json/","title":"style.json","text":"<p>The style.json file describes visualization rules to control the styling of vector features. It may be used in all sorts of vector layers, namely WFS, GeoJSON, and Sensor.</p> <p>Style rules may be defined for 3DTileSets, too.</p>"},{"location":"User/Global-Config/style.json/#what-happens-on-masterportal-start-up","title":"What happens on Masterportal start-up","text":"<p>The Masterportal reads the configured style.json file and processes it to a list of defined styles in an internal data structure. Layers may request their respective styling instructions from it.</p> <p>At the time of layer visualization, the readied OpenLayers Styles are fetched from the internal data structure and applied to the features.</p> <p>\ud83d\udca1 Hint: Malformed style.json files will be rejected without repair attempt. A warning will be shown. We recommend using an online validator to check your file's syntax, e.g. jsonlint.</p>"},{"location":"User/Global-Config/style.json/#style-module-configuration","title":"Style module configuration","text":"<p>The style.json's path is defined in the config.js file. Follow the link for details. Please mind the following parameters::</p> <ul> <li>styleConf: Defining the file path</li> </ul> <p>\ud83d\udca1 Hint: Incorrect path information is reported with an error message.</p>"},{"location":"User/Global-Config/style.json/#layer-connection","title":"Layer connection","text":"<p>Within the config.json section Themenconfig.Layer.Vector the portal's layers are defined. This includes setting the obligatory styleId for vector layers. The styleId references a style.json's entry holding the very same styleId. See Structure.</p> <p>\ud83d\udca1 Hint: Incorrect style ids do not provoke a run-time error. A warning is logged to the console to inform administrators of the erroneous configuration. Portal users will only notice that the misconfigured layer has the OpenLayers default vector styling.</p>"},{"location":"User/Global-Config/style.json/#structure","title":"Structure","text":"<p>This chapter describes the syntactic and schematic structure as well as the functionality of the style.json.</p> <p>\ud83d\udca1 Hint: The basic JSON file syntax explained on json.org applies to the style.json file.</p> <p>The style.json holds an array of objects at root level. Each object corresponds to a style definition and may be referred to by any vector layer.</p> <p>Example 1: Two empty styles <pre><code>[\n    {},\n    {}\n]\n</code></pre></p> <p>To connect a style of the array to a layer, the attribute styleId is required. See chapter Layer connection.</p> <p>Example 2: Style with id <pre><code>{\n    \"styleId\": \"1711\"\n}\n</code></pre></p> <p>Next to the styleId attribute, a rules attribute is required. This is another array and encompasses all the layer's styling rules.</p> <p>Example 3: Style with rules <pre><code>{\n    \"styleId\": \"1711\",\n    \"rules\": []\n}\n</code></pre></p> <p>Each of the rules array entries is another object with at least the attribute style. This attribute holds the display instructions to be applied if the current rule is met. Please see Display rules for details.</p> <p>Example 4: Value for a <code>rules</code> entry <pre><code>[\n    {\n        \"style\": {}\n    }\n]\n</code></pre></p> <p>Next to the style attribute an optional conditions can be added. This is supposed to contain the conditions to be met for the style to be applied to a feature. See chapter Conditions for details.</p> <p>Example 5: Value for a <code>rules</code> entry with optional conditions entry <pre><code>[\n    {\n        \"conditions\": {},\n        \"style\": {}\n    }\n]\n</code></pre></p> <p>A RULE IS APPLIED TO A FEATURE BY A LOGICAL OR, WHERE THE ARRAY IS CHECKED TOP-DOWN (INDEX 0 TO MAX), WHEREAS EACH RULE APPLIES A LOGICAL AND OF PROPERTIES and SEQUENCE (IN CONDITIONS).</p> <p>THE FEATURE WILL HAVE THE FIRST RULE'S STYLE APPLIED WHERE IT FULLY MEETS THE CONDITIONS.</p> <p>\ud83d\udca1 Hint: If no rule's conditions are met, an empty style object is used, effectively rendering the feature invisible.</p> <p>Unless this is desired behavior, we suggest providing a rule without conditions as fallback.</p> <p>Example 6: Fallback solution <pre><code>\"rules\": [\n    {\n        \"conditions\": {},\n        \"style\": {}\n    },\n    {\n        \"style\": {}\n    }\n]\n</code></pre></p> <p>\ud83d\udca1 Hint: The order of array elements is essential. The style with the first matching conditions is used, and all rules following are ignored. Hence, all rules following a default style (any style without conditions) are ignored. If the rules in example 6 were swapped, the condition-free rule would always be met and applied, and the rule holding conditions would have been made obsolete.</p>"},{"location":"User/Global-Config/style.json/#conditions","title":"Conditions","text":"<p>This section describes the file structure for the conditions value as introduced in the chapter Structure.</p> <p>Two optional condition types may be used in a condition:</p> <ul> <li>properties</li> <li>sequence</li> </ul> <pre><code>\"conditions\": {\n    \"properties\": {},\n    \"sequence\": []\n}\n</code></pre>"},{"location":"User/Global-Config/style.json/#properties","title":"properties","text":"<p>The attribute properties activates a feature property check by comparing the noted values with the actual feature properties. properties are combined with a logical AND, meaning all key-value pairs must hold; in this fashion, all conditions are connected.</p> <p>properties are defined as an object, where the key corresponds to a feature attribute's name, and the value to the value expected for it.</p> <pre><code>\"conditions\": {\n    \"properties\": {\n        \"key\": \"value\",\n        \"key2\": \"value2\"\n    }\n}\n</code></pre> <p>properties can also be configured as an array of objects. properties as objects are combined with a logical AND, meaning all key-value pairs must hold; in this fashion, all conditions are connected.</p> Name Required Type Default Description Example attrName yes String Name of attribute. <code>\"attr1\"</code> value yes String/Number/[String]/[Number] Value or Array of values to be checked <pre><code>\"conditions\": {\n    \"properties\": [\n        {\n            \"attrName\": \"key\",\n            \"value\": [0, 100]\n        }\n    ]\n}\n</code></pre>"},{"location":"User/Global-Config/style.json/#attributeobject","title":"attributeObject","text":"<p>Then it is possible to configure an object instead of an attribute key.</p> <p>If the attrName is given as an object, the following configurations are possible.</p> Name Required Type Default Description Example name yes String Name to be shown on an exact match. <code>\"Test\"</code> condition yes enum[\"contains\", \"startsWith\", \"endsWith\"] Condition checked on each feature attribute. <code>\"startsWith\"</code> type no enum[\"string\", \"date\", \"number\", \"boolean\"] <code>\"string\"</code> If <code>\"date\"</code>, the portal will attempt to parse the attribute value to a date; If <code>\"Number\"</code>, the portal will attempt to parse the attribute value to with thousand seperator; If \u201cboolean\u201d, the portal will attempt to parse the attribute value to boolean value. <code>\"date\"</code> format no String/Object <code>\"DD.MM.YYYY HH:mm:ss\"/{\"key\": \"value\"}</code> Data format. <code>\"DD.MM.YYY\"</code> prefix no String Attribute value prefix. Add string to value without whitespace <code>\"https://\"</code> suffix no String Attribute value suffix. <code>\"\u00b0C\"</code> <pre><code>\"conditions\": {\n    \"properties\": [\n        {\n        \"attrName\": {\n            \"name\": \"-fillLevel\",\n            \"condition\": \"endsWith\"\n        },\n        \"value\": [0, 100]\n        }\n    ]\n}\n</code></pre>"},{"location":"User/Global-Config/style.json/#key","title":"key","text":"<p>The key is a feature attribute's name of a direct feature child element.</p> <p>\ud83d\udca1 Hint: If a key does not exist, the condition is not met.</p> <p>Alternatively an arbitrarily nested property within the feature may be addressed by utilizing an object path reference.</p> <p>\ud83d\udca1 Hint: Object paths are e.g. used by sensor layers in properties using multiple Datastreams.</p> <p>A key is always of type String or an attributeObject.</p>"},{"location":"User/Global-Config/style.json/#value","title":"value","text":"<p>A value is the reference value which is compared to the feature's property with name key. Values may have these types:</p> Type Description Boolean Direct equality comparison between feature attribute and reference value. String Direct equality comparison between feature attribute and reference value. Number Direct equality comparison of the numerical feature attribute and reference value. Should the attribute value be of type String, casting it to a numerical value for comparison is attempted. [Number, Number] An array with two numerical values defines a range interpreted as [minValue, maxValue]. It is checked whether the feature attribute is within that range. Should the attribute value be of type String, casting it to a numerical value for comparison is attempted. [Number, Number, Number, Number] An array with four numerical values defines a relative range [minValue, maxValue, minRelative, maxRelative]. The attribute value is brought in relation to relativeMin and relativeMax, and it is checked whether the result is within the range [minValue, maxValue]. Should the attribute value be of type String, casting it to a numerical value for comparison is attempted. <p>\ud83d\udca1 Hint: Checking an attribute value <code>x</code> against a relative range happens by checking whether <code>1/(relativMax-relativMin)(x-relativMin)</code> is in range <code>[minValue, maxValue]</code>.</p> <p>\ud83d\udca1 Hint: <code>x</code> is in a range <code>[minValue, maxValue]</code> if <code>minValue &lt;= x &lt; maxValue</code> is true.</p> <p>Alternatively a value for any of the previously mentioned data types may refer to an arbitrarily nested attribute within a feature property. See chapter Object path reference for details.</p>"},{"location":"User/Global-Config/style.json/#example","title":"Example","text":"<p>This is an exemplary configuration of properties. It is assumed features offer matching attributes name, type, bedCount, staffCount, operationCount, hamburgOverall.OperationsTargetMin, and hamburgOverall.OperationsTargetMax.</p> <pre><code>{\n    \"conditions\": {\n        \"properties\": {\n            \"name\": \"Children's hospital Wilhelmsstift\",\n            \"type\": 1,\n            \"bedCount\": [50, 100],\n            \"staffCount\": [25, 50, 100, 500],\n            \"operationCount\": [0, 50, \"@hamburgGesamt.OperationenSollMin\", \"@hamburgGesamt.OperationenSollMax\"]\n        }\n    }\n}\n</code></pre>"},{"location":"User/Global-Config/style.json/#sequence","title":"sequence","text":"<p>The attribute sequence controls an indexical check for MultiGeometry features. It is only relevant to these geometry types:</p> <ul> <li>MultiPoint</li> <li>MultiLinestring</li> <li>MultiPolygon</li> <li>GeometryCollection</li> </ul> <p>\ud83d\udca1 Hint: The check is skipped for features with geometry types not listed.</p> <p>All MultiGeometry-Features  consist of simple Features. Each Feature within a MultiGeometry feature is iterated over and styled individually. Using sequence, an index range of features within the MultiGeometry feature can be defined, and only features in this range will be checked for meeting the condition.</p> <p>The range is defined with an array of two numerical values [lowerIndex, upperIndex], so that in the following example the second and third feature are checked in a MultiGeometry feature with at least three Features.</p> <p>\ud83d\udca1 Hint: Arrays are zero-based. The first feature of a Multi-Geometry is indexed as zeroth entry.</p> <pre><code>{\n    \"sequence\": [1, 2]\n}\n</code></pre> <p>\ud83d\udca1 Hint: Sequence is optional for MultiGeometry features.</p>"},{"location":"User/Global-Config/style.json/#object-path-reference","title":"Object path reference","text":"<p>Object path references may be set for both keys and values in the properties.</p> <p>Any string prefixed <code>@</code> is interpreted as object path reference.</p> <p>Using such a reference is e.g. useful when attributes contain nested values that need to be referred to.</p> <p>\ud83d\udca1 Hint: Object paths are especially used in sensor layers as they partially work on multiple Datastreams that need to be differentiated.</p> <p>For example, an object path <code>\"@Datastreams.0.ObservedProperty.name\"</code> returns <code>\"myName\"</code> from the following structure:</p> <pre><code>{\n    \"featureProperties\": {\n        \"name\": \"Children's hospital Wilhelmsstift\",\n        \"Datastreams\": [\n            {\n                \"ObservedProperty\": {\n                    \"name\": \"myName\"\n                }\n            }\n        ]\n    }\n}\n</code></pre> <p>\ud83d\udca1 Hint: Object paths may contain both objects and arrays. The entry <code>Datastrams.0</code> describes following an arrays first entry.</p> <p>\ud83d\udca1 Hint: Arrays are zero-based. An array's first entry is adressed with <code>Datastreams.0</code>, its second with <code>Datastreams.1</code>, and so on.</p> <p>You may also use object path references for direct child elements. For example, features with direct child properties may be structured like this:</p> <pre><code>{\n    \"featureProperties\": {\n        \"name\": \"Children's hospital Wilhelmsstift\",\n        \"alternativeName\": \"Wartestube\"\n    }\n}\n</code></pre> <p>You can check whether the fields <code>\"name\"</code> and <code>\"alternativeName\"</code> are identical with this condition:</p> <pre><code>{\n    \"conditions\": {\n        \"properties\": {\n            \"name\": \"@alternativeName\"\n        }\n    }\n}\n</code></pre>"},{"location":"User/Global-Config/style.json/#display-rules","title":"Display rules","text":"<p>This chapter describes how a style as introduced in the Structure chapter is constructed.</p> <p>Styling depends on the GeometryType of a Feature. All MultiGeometry features  consist of simpler Features. Within a MultiGeomtry feature all child Features are iterated and each one is styled individually. The following GeometryTypes can currently be styled:</p> <ul> <li>Linestring</li> <li>Point</li> <li>Polygon</li> <li>Cesium</li> </ul> <p>\ud83d\udca1 Hint: MultiGeometries defined within a GeometryCollection (doubly nested) can currently not be styled.</p> <p>The GeometryType is determined by calling the DescribeFeatureTypes service of a WFS layer. In some cases, the type \"Geometry\" is returned, which leads to the creation of styles for LineString, Point, and Polygon. You may override this behaviour on the config.json's styleGeometryType parameter of each layer.</p> <p>Styling is based on the feature's GeometryType. For each type, default display rules are applied that may be overwritten by style entries.</p> <p>This allows styling multiple GeometryTypes (Point, Linestring, Polygon, ...) within a style by adding display rules.</p> <p>Furthermore, all named geometry types may receive a text annotation. See chapter Text for details.</p> <p>For individual legend texts, see chapter Legend.</p> <p>If the number of child Features  of a MultiGeomtry feature is higher than the number of rules or no rule can be found, and no fallbacks shall be used you can set the property styleMultiGeomOnlyWithRule to true.</p> Name Required Type Default Description styleMultiGeomOnlyWithRule Boolean false if true, use no fallback for styling Style Example<pre><code>{\n    \"styleId\": \"styleId\",\n    \"styleMultiGeomOnlyWithRule\": true,\n}\n</code></pre>"},{"location":"User/Global-Config/style.json/#point","title":"Point","text":"<p>The display rules for points are separated in</p> <ul> <li>simple point geometries: See the following parameter type.</li> <li>clustered points: If the layer configuration in the (config.json) file has clusterDistance set, a ClusterStyle is created. See the following parameter clusterType.</li> </ul> Name Required Type Default Description type String <code>\"circle\"</code> Type of styling; one of icon, circle, nominal, interval. clusterType String <code>\"circle\"</code> Type of styling for clustered points; one of icon, circle. <p>In the following, all options are described in detail.</p>"},{"location":"User/Global-Config/style.json/#pointicon","title":"Point.Icon","text":"<p>Please see the OpenLayers Icon documentation for additional details.</p> Name Required Type Default Description imageName String <code>\"blank.png\"</code> Image name: may contain the icon name or a relative path to config.js <code>wfsImgPath</code>, a complete path or an svg. imageWidth String <code>1</code> Image width imageHeight String <code>1</code> Image height imageScale String <code>1</code> Image scale imageOffsetX Float <code>0.5</code> Image x Offset imageOffsetY Float <code>0.5</code> Image y offset imageOffsetXUnit String <code>\"fraction\"</code> Units in which the anchor x value is specified. imageOffsetYUnit String <code>\"fraction\"</code> Units in which the anchor y value is specified. rotation no rotation <code>0</code> Attribute for rotation of wfs features. If not set, the default value is <code>0</code> to show icons in standard alignment. <p>style example: <pre><code>{\n    \"style\": {\n        \"imageName\": \"hospital.png\",\n        \"clusterImageName\": \"hospital.png\"\n    }\n}\n</code></pre> style example with relative path in imageName: <pre><code>{\n    \"style\": {\n        \"imageName\": \"/icons/hospital.svg\",\n        \"clusterImageName\": \"/icons/clusterHospital.svg\"\n        }\n}\n</code></pre> style example with complete path in imageName: <pre><code>{\n    \"style\": {\n        \"imageName\": \"https://host.de/geodaten/icons/hospital.svg\",\n        \"clusterImageName\": \"/icons/clusterHospital.svg\"\n        }\n}\n</code></pre></p> <p>style example with svg in imageName: <pre><code>{\n    \"style\": {\n        \"imageName\": \"&lt;svg xmlns='http://www.w3.org/2000/svg' width='16' height='16' fill='#E10019' class='bi bi-geo-fill' viewBox='0 0 16 16'&gt;&lt;path fill-rule='evenodd' d='M4 4a4 4 0 1 1 4.5 3.969V13.5a.5.5 0 0 1-1 0V7.97A4 4 0 0 1 4 3.999zm2.493 8.574a.5.5 0 0 1-.411.575c-.712.118-1.28.295-1.655.493a1.319 1.319 0 0 0-.37.265.301.301 0 0 0-.057.09V14l.002.008a.147.147 0 0 0 .016.033.617.617 0 0 0 .145.15c.165.13.435.27.813.395.751.25 1.82.414 3.024.414s2.273-.163 3.024-.414c.378-.126.648-.265.813-.395a.619.619 0 0 0 .146-.15.148.148 0 0 0 .015-.033L12 14v-.004a.301.301 0 0 0-.057-.09 1.318 1.318 0 0 0-.37-.264c-.376-.198-.943-.375-1.655-.493a.5.5 0 1 1 .164-.986c.77.127 1.452.328 1.957.594C12.5 13 13 13.4 13 14c0 .426-.26.752-.544.977-.29.228-.68.413-1.116.558-.878.293-2.059.465-3.34.465-1.281 0-2.462-.172-3.34-.465-.436-.145-.826-.33-1.116-.558C3.26 14.752 3 14.426 3 14c0-.599.5-1 .961-1.243.505-.266 1.187-.467 1.957-.594a.5.5 0 0 1 .575.411z'/&gt;&lt;/svg&gt;\",\n    }\n}\n</code></pre></p>"},{"location":"User/Global-Config/style.json/#pointiconrotation","title":"Point.Icon.rotation","text":"<p>If set, the entry <code>rotation</code> has to be from type object with the following attributes:</p> Name Required Type Default Description rotation.isDegree Boolean <code>false</code> Whether value should be treated as degrees or radiants. rotation.value Number <code>0</code> Rotation value (positive rotation clockwise)."},{"location":"User/Global-Config/style.json/#pointcircle","title":"Point.Circle","text":"<p>Please see the OpenLayers Circle documentation for additional details.</p> Name Required Type Default Description circleRadius Integer <code>10</code> Circle radius circleStrokeColor Integer[] <code>[0, 0, 0, 1]</code> Circle stroke color as rgba circleStrokeWidth Integer <code>2</code> Circle stroke width in pixels circleFillColor Integer[] <code>[0, 153, 255, 1]</code> Circle fill color as rgba"},{"location":"User/Global-Config/style.json/#pointinterval","title":"Point.Interval","text":"<p>A dynamic style is set for each feature. This style supports sensor feature updates for numerical data having a natural order, e.g. meters and degree Celsius.</p> Name Required Type Default Description scalingShape yes String Display type <code>\"CIRCLE_BAR\"</code> scalingAttribute yes String Attribute used for styling circleBarScalingFactor Float <code>1</code> Factor by which the attribute value is scaled. Required for very large positive or negative values and values nearby zero. circleBarRadius Float <code>6</code> Point radius circleBarLineStroke Float <code>5</code> Bar width circleBarCircleFillColor Integer[] <code>[0, 0, 0, 1]</code> Point color fill in rgba circleBarCircleStrokeColor Integer[] <code>[0, 0, 0, 1]</code> Point stroke color in rgba circleBarCircleStrokeWidth <code>1</code> Point stroke width in pixels circleBarLineStrokeColor Integer[] <code>[0, 0, 0, 1]</code> Bar color in rgba"},{"location":"User/Global-Config/style.json/#pointnominal","title":"Point.Nominal","text":"<p>A dynamic style is set for each feature. This style supports sensor feature updates for data without natural order, e.g. colors and shapes.</p> Name Required Type Default Description scalingShape yes String Display type <code>\"CIRCLESEGMENTS\"</code> scalingAttribute yes String Attribute used for styling. You may use an object path reference. scalingValues Object Attribute values with defined color, e.g. <code>{\"charging\" : [220, 0, 0, 1]}</code>. An arbitrary amount of attribute values may be specified. scalingValueDefaultColor Integer[] <code>[0, 0, 0, 1]</code> Default color for all values not defined in the previously described scalingValues field. circleSegmentsRadius Float <code>10</code> Circle segment radius circleSegmentsStrokeWidth Float <code>4</code> Circle segment width circleSegmentsGap Float <code>10</code> Space between circle segments circleSegmentsBackgroundColor Integer[] <code>[255, 255, 255, 0]</code> Circle color"},{"location":"User/Global-Config/style.json/#pointcluster","title":"Point.Cluster","text":"<p>Clustered points represent multiple close-by features with a single symbol. See the OpenLayers Cluster documentation for further details. Display depends upon amount and position of features, current zoom level, and the layer's defined clusterDistance. PointClusters may be displayed with these types:</p> <ul> <li>Icon</li> <li>Circle</li> </ul> <p>You may also add text to clustered points. This is usually done to add the amount of clustered points to a feature. See chapter ClusterText.</p>"},{"location":"User/Global-Config/style.json/#pointclustericon","title":"Point.Cluster.Icon","text":"<p>Please see the OpenLayers Icon documentation for additional details.</p> Name Required Type Default Description clusterImageName String <code>\"blank.png\"</code> Cluster style image name clusterImageWidth Integer <code>1</code> Cluster style image width clusterImageHeight Integer <code>1</code> Cluster style image height clusterImageScale Integer <code>1</code> Cluster style image scale clusterImageOffsetX Float <code>0.5</code> Cluster style X offset clusterImageOffsetY Float <code>0.5</code> Cluster style Y offset"},{"location":"User/Global-Config/style.json/#pointclustercircle","title":"Point.Cluster.Circle","text":"<p>Please see the OpenLayers Circle documentation for additional details.</p> Name Required Type Default Description clusterCircleRadius Integer <code>10</code> Cluster style circle radius clusterCircleFillColor Integer[] <code>[0, 153, 255, 1]</code> Cluster style circle fill in rgba clusterCircleStrokeColor Integer[] <code>[0, 0, 0, 1]</code> Cluster style stroke color in rgba clusterCircleStrokeWidth Integer <code>2</code> Cluster style stroke width in pixels"},{"location":"User/Global-Config/style.json/#pointclustertext","title":"Point.Cluster.Text","text":"<p>Please see the OpenLayers Text documentation for additional details.</p> <p>Two types of cluster types may be shown, depending on the attribute clusterTextType:</p> <ul> <li>counter: amount of clustered features</li> <li>text: a fixed text</li> <li>none: no text at all</li> </ul> Name Required Type Default Description clusterTextType String <code>\"counter\"</code> One of <code>\"counter\"</code>, <code>\"none\"</code>, <code>\"text\"</code> clusterText only if clusterTextType is set to <code>\"text\"</code> String <code>\"undefined\"</code> Text to be displayed clusterTextAlign String <code>\"center\"</code> Text alignment clusterTextFont String <code>\"Comic Sans MS\"</code> Text font clusterTextScale Integer <code>2</code> Text scale clusterTextOffsetX Integer <code>0</code> Text x offset clusterTextOffsetY Integer <code>2</code> Text y offset clusterTextFillColor Integer[] <code>[255, 255, 255, 1]</code> Text fill color in rgba clusterTextStrokeColor Integer[] <code>[0, 0, 0, 0]</code> Text stroke color in rgba clusterTextStrokeWidth Integer <code>0</code> Text stroke width <p>\ud83d\udca1 Hint: A cluster text is prioritized to a general text.</p>"},{"location":"User/Global-Config/style.json/#linestring","title":"LineString","text":"<p>Please see the OpenLayers Stroke documentation for additional details.</p> Name Required Type Default Description lineStrokeColor Integer[] <code>[255, 0, 0, 1]</code> Line color in rgba lineStrokeWidth Integer <code>5</code> Line width lineStrokeCap String <code>\"round\"</code> Line cap style lineStrokeJoin String \"round\"` Line join style lineStrokeDash Integer[] <code>null</code> Line dash style lineStrokeDashOffset Integer <code>0</code> Line dash offset lineStrokeMiterLimit Integer <code>10</code> Miter limit"},{"location":"User/Global-Config/style.json/#polygon","title":"Polygon","text":"<p>Please see the OpenLayers Fill and OpenLayers Stroke documentation for additional details.</p> Name Required Type Default Description polygonStrokeColor Integer[] <code>[0, 0, 0, 1]</code> Line color in rgba polygonStrokeWidth Integer <code>1</code> Line width polygonStrokeCap String <code>\"round\"</code> Line cap style polygonStrokeJoin String <code>\"round\"</code> Line join style polygonStrokeDash Integer[] <code>null</code> Line dash style polygonStrokeDashOffset Integer <code>0</code> Line dash offset polygonStrokeMiterLimit Integer <code>10</code> <code>Miter limit</code> polygonFillColor no Integer[] <code>[10, 200, 100, 0.5]</code> Fill color in rgba polygonFillHatch no polygonFillHatch[] <code>undefined</code> Can be used to define a hatch pattern. Mutually exclusive to polygonFillColor \u2013 only one of the fields may be used. If both are defined, <code>polygonFillHatch</code> takes precedence."},{"location":"User/Global-Config/style.json/#polygonpolygonfillhatch","title":"Polygon.polygonFillHatch","text":"<p>The polygonFillHatch allows drawing various patterns to distinguish polygons by style configuration. Use these patterns to enhance accessibility. This article about cake diagrams also applies to polygons.</p> <p>\u26a0\ufe0f Please mind that hatch patterns for vector layers are not supported by the MapFish JSON parser, and hence can't be printed.</p> Name Required Type Default Description pattern no enum[\"diagonal\", \"diagonal-right\", \"zig-line\", \"zig-line-horizontal\", \"circle\", \"rectangle\", \"triangle\", \"diamond\"]/Object <code>\"diagonal\"</code> Draw pattern. You may either use a pre-defined pattern from the enum or specify one yourself. For both, examples are given below. size no Number <code>30</code> Edge length of a singular repeated pattern element. lineWidth no Number <code>10</code> Line width of drawn pattern. To achieve an even distribution in diagonal and zig-line pattern, choose lineWidth as (1/3 * size). For triangle and diamond, a lineWidth of 1 must be chosen. For rectangle, a lineWidth of at most (1/4 * size) should be chosen. Deviating from these rules is not harmful, but patterns may seem off. backgroundColor no Number[] <code>[0, 0, 0, 1]</code> Background color of polygon. patternColor no Number[] <code>[255, 255, 255, 1]</code> Fill color of pattern drawn on polygon. <pre><code>{\n    \"polygonStrokeColor\": [0, 0, 0, 1],\n    \"polygonStrokeWidth\": 2,\n    \"polygonFillHatch\": {\n        \"pattern\": \"diagonal\",\n        \"lineWidth\": 10,\n        \"size\": 30,\n        \"backgroundColor\": [100, 100, 255, 0.5],\n        \"patternColor\": [255, 255, 255, 1]\n    }\n}\n</code></pre> <p>With the example style above, the following patterns are rendered, where <code>pattern</code> and <code>lineWidth</code> are adjusted as follows:</p> <code>polygonFillHatch</code> override Result <code>{\"patternCode\": \"rectangle\", \"lineWidth\": 2}</code> <code>{\"patternCode\": \"triangle\", \"lineWidth\": 1}</code> <code>{\"patternCode\": \"diamond\", \"lineWidth\": 1}</code> <code>{\"patternCode\": \"circle\", \"lineWidth\": 2}</code> <code>{\"patternCode\": \"circle\", \"lineWidth\": 10}</code> <code>{\"patternCode\": \"diagonal\", \"lineWidth\": 10}</code> <code>{\"patternCode\": \"zig-line\", \"lineWidth\": 10}</code> <p>The alternatives <code>\"zig-lines-horizontal\"</code> and <code>\"diagonal-right\"</code> match the above patterns rotated by 90\u00b0.</p> <p>\ud83d\udee0\ufe0f Expert feature: Defining your own pattern.</p> <p>Should the givens pattern not suffice, you may use an object defining the hatch rules. For example, the following object will draw a triangle and rotate it around its center by 90 degrees. The given parameters are relative to size. In this example, the starting point is \"half way to the right, one third from the top\". You may also use numbers above 1 and below 0 to draw over the borders. This will be cut, but may come in handy for using rotation.</p> <pre><code>{\n    \"draw\": [\n        {\n            \"type\": \"line\",\n            \"parameters\": [\n                [0.5, 0.33],\n                [0.66, 0.66],\n                [0.33, 0.66],\n                [0.5, 0.33]\n            ]\n        }\n    ],\n    \"rotate\": 90\n}\n</code></pre> <p>To draw circles or circle parts, this syntax can be used:</p> <pre><code>{\n    \"draw\": [\n        {\n            \"type\": \"arc\",\n            \"parameters\": [\n                0.75, 0.75, 2.5, 0, 6.283185307179586\n            ]\n        }\n    ]\n}\n</code></pre> <p>The parameters match the arc function parameters.</p> <p>With these, the following example pattern resembling a commonly used deciduous tree symbol can be produced:</p> <p></p> <p>It is drawn with three elements: A 2/3 circle describing the general shape, and a 1/3 circle to the right and a short line at the ground level to indicate shadow.</p> <pre><code>{\n    \"pattern\": {\n        \"draw\": [\n            {\n                \"type\": \"arc\",\n                \"parameters\": [\n                    0.5, 0.5, 7.5, -4.14, 1.14\n                ]\n            },\n            {\n                \"type\": \"arc\",\n                \"parameters\": [\n                    0.55, 0.5, 7.5, -2, 1.14\n                ]\n            },\n            {\n                \"type\": \"line\",\n                \"parameters\": [\n                    [0.66, 0.75],\n                    [1, 0.75]\n                ]\n            }\n        ]\n    },\n    \"lineWidth\": 1,\n    \"size\": 30,\n    \"backgroundColor\": [255, 255, 255, 1],\n    \"patternColor\": [0, 100, 0, 1]\n}\n</code></pre> <p>You may also use rect for convenience. In that case, \"parameters\" is an array of call argument arrays, matching the <code>rect</code> function definition. The following is the default implementation for the \"rectangle\" pattern.</p> <pre><code>{\"type\": \"rect\", \"parameters\": [\n    [0.125, 0.125, 0.25, 0.25],\n    [0.625, 0.625, 0.25, 0.25]\n]}\n</code></pre>"},{"location":"User/Global-Config/style.json/#cesium","title":"Cesium","text":"Name Required Type Default Description color String Color as rgb(a) string"},{"location":"User/Global-Config/style.json/#3dtilesets-example","title":"3DTileSets example","text":"<pre><code>{\n    \"styleId\": \"3DTileSetStyle\",\n    \"rules\": [\n        {\n            \"conditions\": {\n                \"attr3\": [15, 17],\n                \"attr4\": \"abc\"\n            },\n            \"style\": {\n                \"type\": \"cesium\",\n                \"color\": \"rgba(0, 0, 255, 0.5)\"\n            }\n        },\n        {\n            \"conditions\": {\n                \"attr2\": [0, 10]\n            },\n            \"style\": {\n                \"type\": \"cesium\",\n                \"color\": \"rgba(0, 255, 0, 0.5)\"\n            }\n        },\n        {\n            \"conditions\": {\n                \"attr1\": 50.5\n            },\n            \"style\": {\n                \"type\": \"cesium\",\n                \"color\": \"rgb(255, 0, 0)\"\n            }\n        },\n        {\n            \"style\": {\n                \"type\": \"cesium\",\n                \"color\": \"rgba(150, 150, 150, 0.5)\"\n            }\n        }\n    ]\n}\n</code></pre>"},{"location":"User/Global-Config/style.json/#text","title":"Text","text":"<p>Please see the OpenLayers Text documentation for additional details.</p> <p>Use the attribute labelField within the style to choose one of the FeatureProperties to be printed and styled to the feature. .</p> <p>\ud83d\udca1 Hint: Is no attribute labelField is set, no label will be created.</p> Name Required Type Default Description labelField yes String <code>\"undefined\"</code> Feature attribute to be used as label. You may also use an object path reference or an attributeObject. textAlign String <code>\"center\"</code> Text alignment textFont String <code>\"Comic Sans MS\"</code> Text font textScale Integer <code>2</code> Text scale textOffsetX Integer <code>10</code> Text x offset textOffsetY Integer <code>-8</code> Text y offset textFillColor Integer[] `[69, 96, 166, 1] Text fill color in rgba textStrokeColor Integer[] <code>[240, 240, 240, 1]</code> Text stroke color in rgba textStrokeWidth Integer <code>3</code> Text stroke width in pixels textSuffix no String <code>\"\"</code> Text suffix added to each text <p>\ud83d\udca1 Hint: A cluster text is prioritized to this.</p>"},{"location":"User/Global-Config/style.json/#legend","title":"Legend","text":"<p>The textual legend description can be controlled by setting the parameter legendValue accordingly.</p> <pre><code>{\n    \"style\": {\n        \"legendValue\": \"my legend text\"\n    }\n}\n</code></pre> <p>\ud83d\udca1 Hint: The attribute legendValue must be unique per layer and geometry type; else, the legend will be incomplete.</p>"},{"location":"User/Global-Config/style.json/#example_1","title":"Example","text":"<p>A SensorLayer example configuration.</p> <pre><code>[\n    {\n        \"styleId\": \"1711\",\n        \"rules\": [\n            {\n                \"conditions\": {\n                    \"properties\": {\n                        \"@Datastreams.1.Observations.0.result\": [1, 3]\n                    }\n                },\n                \"style\": {\n                    \"type\": \"circle\",\n                    \"circleFillColor\": [255, 0, 0, 1],\n                    \"clusterType\": \"circle\"\n                }\n            },\n            {\n                \"conditions\": {\n                    \"properties\": {\n                        \"@Datastreams.1.Observations.0.result\": [3, 8]\n                    }\n                },\n                \"style\": {\n                    \"type\": \"circle\",\n                    \"circleFillColor\": [255, 255, 102, 1],\n                    \"clusterType\": \"circle\"\n                }\n            },\n            {\n                \"conditions\": {\n                    \"properties\": {\n                        \"@Datastreams.1.Observations.0.result\": [8, 50]\n                    }\n                },\n                \"style\": {\n                    \"type\": \"circle\",\n                    \"circleFillColor\": [132, 222, 2, 1],\n                    \"clusterType\": \"circle\"\n                }\n            },\n            {\n                \"conditions\": {\n                    \"properties\": {\n                        \"@Datastreams.1.Observations.0.result\": \"no data\"\n                    }\n                },\n                \"style\": {\n                    \"type\": \"circle\",\n                    \"circleFillColor\": [200, 200, 1, 1],\n                    \"clusterType\": \"circle\"\n                }\n            },\n            {\n                \"conditions\": {\n                    \"properties\":{\n                        \"@Datastreams.0.Observations.0.result\":true\n                    }\n                },\n                \"style\": {\n                    \"lineStrokeColor\": [44,127,184, 0.7]\n                }\n            },\n            {\n                \"style\": {\n                    \"type\": \"circle\",\n                    \"circleFillColor\": [211, 211, 211, 1],\n                    \"clusterType\": \"circle\"\n                }\n            }\n        ]\n    }\n]\n</code></pre>"},{"location":"User/Global-Config/style.json/#highlightfeaturesbyattribute","title":"HighlightFeaturesByAttribute","text":"<p>The styling of the polygon, line and point features can be overwritten by defining styles for \"defaultHighlightFeaturesPolygon\", \"defaultHighlightFeaturesLine\" and \"defaultHighlightFeaturesPoint\".</p>"},{"location":"User/Global-Config/style.json/#example_2","title":"Example","text":"<p>A highlightFeaturesByAttribute example configuration for all types of features (polygon, line and point).</p> <pre><code>[\n  {\n    \"styleId\": \"defaultHighlightFeaturesPoint\",\n    \"rules\": [{\n        \"style\": {\n            \"type\": \"circle\",\n            \"circleFillColor\": [255, 255, 0, 0.9],\n            \"circleRadius\": 8,\n            \"circleStrokeColor\": [0, 0, 0, 1],\n            \"circleStrokeWidth\": 2\n        }\n    }]\n  },\n  {\n    \"styleId\": \"defaultHighlightFeaturesLine\",\n    \"rules\": [{\n        \"style\": {\n            \"lineStrokeColor\": [255, 0, 0, 1],\n            \"lineStrokeWidth\": 5\n        }\n    }]\n  },\n  {\n    \"styleId\": \"defaultHighlightFeaturesPolygon\",\n    \"rules\": [{\n        \"style\": {\n            \"polygonStrokeColor\": [8, 119, 95, 1],\n            \"polygonStrokeWidth\": 4,\n            \"polygonFillColor\": [8, 119, 95, 0.3],\n            \"polygonStrokeDash\": [8]\n        }\n    }]\n  }\n]\n</code></pre>"},{"location":"User/Misc/quickHelp/","title":"QuickHelp Documentation","text":"<p>This documentation describes how the QuickHelp window of the Masterportal can be modified, extended and new QuickHelp windows can be created. The QuickHelp window - if activated - is currently integrated in three places in the Masterportal by default.</p> <ol> <li>At the Top on the right side of the search bar as ?-button (hereinafter referred to as \"search\" QuickHelp).</li> <li>When using the \"custom\" topic tree type, when you expand the topic tree, the ?-icon at the very top of the topic tree (hereafter called \"tree\" QuickHelp).</li> <li>In the routing tool.</li> </ol> <p>All default QuickHelp windows are given standard content in all languages available for the Masterportal.</p>"},{"location":"User/Misc/quickHelp/#first-part-activate-the-quickhelp","title":"First part - activate the QuickHelp","text":"<p>The default QuickHelp is activated in the config.js file of your portal. Here, an additional entry in the config object {quickHelp: true} is needed. This activates the standard \"search\" and \"tree\" QuickHelp.</p> <pre><code>const Config = {\n    // (...)\n    \"quickHelp\": true,\n    // (...)\n};\n</code></pre>"},{"location":"User/Misc/quickHelp/#set-the-image-path","title":"set the image path","text":"<p>With the simple {\"quickHelp\": true} only, the QuickHelp is displayed without screenshots and looks broken.</p> <ul> <li>You can remove the broken default images (see third part).</li> <li>Or you can store them for correct display and link them correctly.</li> </ul> <p>To link the standard images correctly create the images (see image table) and set the basic path to the images by using an object instead of the simple {\"quickHelp\": true}.</p> <p>In the following example, the images are loaded from the LGV Hamburg servers and the screenshots are displayed correctly. You can use this setting for your project, but you woun't be able to change our screenshots. If you have your own server, create your own screenshots or download the images (see image table), upload them to your server and adjust the imgPath in config.js.</p> <pre><code>const Config = {\n    // (...)\n    \"quickHelp\": {\n        \"imgPath\": \"https://geodienste.hamburg.de/lgv-config/img/\"\n    },\n    // (...)\n};\n</code></pre>"},{"location":"User/Misc/quickHelp/#rename-the-images","title":"rename the images","text":"<p>The QuickHelp uses standard images. The image names are mostly in German language. If you want to create your own images/screenshots in your own language, change the imgPath to point to one of your servers and create new images as you like.</p> <p>You can overconfigure any default image name by using the respective image key. A list of usable image keys can be found here.</p> <p>Example:</p> <pre><code>const Config = {\n    // (...)\n    \"quickHelp\": {\n        \"imgPath\": \"https://example.com/myFolder/\",\n        \"searchbarAllgemeines1\": \"labusca_com\u00fan.png\",\n        \"searchbarAllgemeines2\": \"labusca_com\u00fan2.png\"\n    },\n    // (...)\n};\n</code></pre>"},{"location":"User/Misc/quickHelp/#second-part-removing-the-default-content","title":"Second part - removing the default content","text":"<p>Each section in the prepared standard contents of the QuickHelp windows can be removed using its Section Key. A list of all available Section Keys are listed here.</p> <p>For example, if you want to remove the first section of the \"search\" QuickHelp, use the Section Key \"generalInfo\". To do this, open your config.json and use the \"quickHelp\" element at the highest structure level to manipulate the QuickHelp window.</p> <pre><code>{\n    \"Portalconfig\": {\n        // (...)\n        \"quickHelp\": {\n            \"configs\": {\n                \"search\": {\n                    \"content\": [\n                        {\"hide\": \"generalInfo\"}\n                    ]\n                }\n            }\n        },\n        // (...)\n    }\n}\n</code></pre>"},{"location":"User/Misc/quickHelp/#third-part-adding-your-own-sections","title":"Third part - adding your own sections","text":"<p>You can extend the default content via config.json as you like and change already existing sections by a delete-add combination.</p>"},{"location":"User/Misc/quickHelp/#easy-addition-of-content","title":"Easy addition of content","text":"<p>To add new content as section to existing content, you can add a section object with \"title\" and a list \"list\" of paragraphs and images to config.json. The new section is inserted at the end of the existing content.</p> <p>Here is the example of a simple add of a new section at the end of the \"search\" QuickHelp.</p> <pre><code>{\n    \"Portalconfig\": {\n        // (...)\n        \"quickHelp\": {\n            \"configs\": {\n                \"search\": {\n                    \"content\": [\n                        {\n                            \"title\": \"Title of the new section\",\n                            \"list\": [\n                                {\n                                    \"text\": \"This is the first paragraph.\",\n                                    \"type\": \"text/plain\"\n                                },\n                                {\n                                    \"imgName\": \"allgemein.png\",\n                                    \"imgPath\": \"https://geodienste.hamburg.de/lgv-config/img/\"\n                                },\n                                {\n                                    \"text\": \"This is the second &lt;i&gt;paragraph&lt;/i&gt; with html content.\",\n                                    \"type\": \"text/html\"\n                                }\n                            ]\n                        }\n                    ]\n                }\n            }\n        },\n        // (...)\n    }\n}\n</code></pre>"},{"location":"User/Misc/quickHelp/#complex-addition-of-content","title":"Complex addition of content","text":"<p>You can insert new sections into the standard QuickHelp at any position if you use the \"before\" and \"after\" attributes with the appropriate Section Keys (see Section Keys).</p> <p>Here is the example of adding a new section after the first section with Section Key \"generalInfo\" into the default \"search\" QuickHelp.</p> <pre><code>{\n    \"Portalconfig\": {\n        // (...)\n        \"quickHelp\": {-\n            \"configs\": {\n                \"search\": {\n                    \"content\": [\n                        {\n                            \"after\": \"generalInfo\",\n                            \"title\": \"Title of the new section\",\n                            \"list\": [\n                                {\n                                    \"text\": \"This is the first paragraph.\",\n                                    \"type\": \"text/plain\"\n                                },\n                                {\n                                    \"imgName\": \"allgemein.png\",\n                                    \"imgPath\": \"https://geodienste.hamburg.de/lgv-config/img/\"\n                                },\n                                {\n                                    \"text\": \"This is the second &lt;i&gt;paragraph&lt;/i&gt; with html content.\",\n                                    \"type\": \"text/html\"\n                                }\n                            ]\n                        }\n                    ]\n                }\n            }\n        },\n        // (...)\n    }\n}\n</code></pre>"},{"location":"User/Misc/quickHelp/#replacing-content","title":"Replacing content","text":"<p>You can replace existing sections with new content by adding your content and removing old sections.</p> <p>Here is an example of adding a section identical to \"generalInfo\" - only without screenshots - and then removing the old \"generalInfo\" section from the content.</p> <pre><code>{\n    \"Portalconfig\": {\n        // (...)\n        \"quickHelp\": {\n            \"configs\": {\n                \"search\": {\n                    \"content\": [\n                        {\n                            \"after\": \"generalInfo\",\n                            \"title\": \"common:modules.quickHelp.search.generalInfo\",\n                            \"list\": [\n                                {\n                                    \"text\": \"common:modules.quickHelp.search.generalInfoHelp1\",\n                                    \"type\": \"text/html\"\n                                },\n                                {\n                                    \"text\": \"common:modules.quickHelp.search.generalInfoHelp2\",\n                                    \"type\": \"text/html\"\n                                }\n                            ]\n                        },\n                        {\n                            \"hide\": \"generalInfo\"\n                        }\n                    ]\n                }\n            }\n        },\n        // (...)\n    }\n}\n</code></pre>"},{"location":"User/Misc/quickHelp/#fourth-part-creating-a-new-quickhelp-window","title":"Fourth part - creating a new QuickHelp window","text":"<p>You can create and fill completely new custom QuickHelp windows with content via your config.json and attach them to any element (e.g. a button) in the Masterportal. You may want to use your own addon or help to improve the core with new features.</p>"},{"location":"User/Misc/quickHelp/#connection-of-quickhelp-to-the-portal-logic","title":"Connection of QuickHelp to the portal logic","text":"<p>In the code, use the VueX store and activate the desired QuickHelp via a specific store commit.</p> <p>Here is an example of a function that sets the QuickHelp to the \"search\" content and opens or closes it.</p> <pre><code>import store from \"./src/app-store/index\";\n\nexport default function toggleQuickHelpOfSearchBar () {\n    if (!store.getters[\"QuickHelp/active\"]) {\n        store.commit(\"QuickHelp/setQuickHelpKey\", \"search\");\n        store.commit(\"QuickHelp/setActive\", true);\n    }\n    else {\n        store.commit(\"QuickHelp/setActive\", false);\n    }\n}\n</code></pre>"},{"location":"User/Misc/quickHelp/#integration-of-a-custom-quickhelp-into-the-portal-logic","title":"Integration of a custom QuickHelp into the portal logic","text":"<p>Combining a custom function that can enable/disable QuickHelp via the VueX store and creating entirely new content in config.json, you can generate an arbitrary QuickHelp window.</p> <p>Here is an example of the configuration and activation of a new QuickHelp window \"testhelp\" via code and config.json:</p> <p>code: <pre><code>import store from \"./src/app-store/index\";\n\nexport default function toggleQuickHelpOfSearchBar () {\n    if (!store.getters[\"QuickHelp/active\"]) {\n        store.commit(\"QuickHelp/setQuickHelpKey\", \"testhelp\");\n        store.commit(\"QuickHelp/setActive\", true);\n    }\n    else {\n        store.commit(\"QuickHelp/setActive\", false);\n    }\n}\n</code></pre></p> <p>config.json: <pre><code>{\n    \"Portalconfig\": {\n        // (...)\n        \"quickHelp\": {\n            \"configs\": {\n                \"testhelp\": {\n                    \"title\": \"Test help\",\n                    \"content\": [\n                        {\n                            \"title\": \"Title of the first section\",\n                            \"list\": [\n                                {\n                                    \"text\": \"This is a completely new paragraph.\",\n                                    \"type\": \"text/plain\"\n                                },\n                                {\n                                    \"imgName\": \"allgemein.png\",\n                                    \"imgPath\": \"https://geodienste.hamburg.de/lgv-config/img/\"\n                                }\n                            ]\n                        },\n                        {\n                            \"title\": \"Title of the second section\",\n                            \"list\": [\n                                {\n                                    \"text\": \"This is an &lt;b&gt;even more recent&lt;/b&gt; paragraph.\",\n                                    \"type\": \"text/html\"\n                                },\n                                {\n                                    \"imgName\": \"allgemein.png\",\n                                    \"imgPath\": \"https://geodienste.hamburg.de/lgv-config/img/\"\n                                }\n                            ]\n                        }\n                    ]\n                }\n            }\n        },\n        // (...)\n    }\n}\n</code></pre></p>"},{"location":"User/Misc/quickHelp/#request-existence-of-quickhelp","title":"Request existence of QuickHelp","text":"<p>You may want to show your QuickHelp open button only if QuickHelp is configured to be displayed. The QuickHelp can be deactivated by setting it to {\"quickHelp\": false} in the config.js.</p> <p>To request the state, use the getter for QuickHelp isSet in the VueX store: <pre><code>import store from \"./src/app-store/index\";\n\nexport default function isQuickHelpEnabled () {\n    return store.getters[\"QuickHelp/isSet\"];\n}\n</code></pre></p>"},{"location":"User/Misc/quickHelp/#part-five-pitfalls-tips-tricks","title":"Part Five - Pitfalls, Tips &amp; Tricks","text":"<p>In this part we go into things worth knowing, some of which have been omitted from the rest of this documentation due to their complexity.</p>"},{"location":"User/Misc/quickHelp/#pitfall-removing-a-section-before-adding-a-section","title":"Pitfall: Removing a section before adding a section","text":"<p>If you want to insert a new section before or after an existing section (with \"before\" or \"after\"), but first remove the existing section you are referring to (with \"hide\"), the new section will not be displayed.</p> <p>This is a false example (!). The section \"generalInfo\" is not displayed. <pre><code>{\n    \"Portalconfig\": {\n        // (...)\n        \"quickHelp\": {\n            \"configs\": {\n                \"search\": {\n                    \"content\": [\n                        {\n                            \"hide\": \"generalInfo\"\n                        },\n                        {\n                            \"after\": \"generalInfo\",\n                            \"title\": \"False example! This section is never displayed as its reference is hidden before.\",\n                            \"list\": [\n                                \"common:this.is.never.displayed.anyway\"\n                            ]\n                        }\n                    ]\n                }\n            }\n        },\n        // (...)\n    }\n}\n</code></pre></p>"},{"location":"User/Misc/quickHelp/#pitfall-use-of-translation-keys","title":"Pitfall: Use of translation keys","text":"<p>If you prefer to use translation keys instead of plain text, you can simply insert it as value for the text attribute of paragraph elements. Please note the specification of the correct namespace (\"common:\" for core, \"additional:\" for addons) and that the text is available in language files in the different languages of your project.</p>"},{"location":"User/Misc/quickHelp/#tips-tricks-translation-keys-and-interpolation","title":"Tips &amp; Tricks: Translation keys and interpolation","text":"<p>When using translation keys, it may happen that you want to use a so-called \"interpolation\". Interpolation for translations is the inclusion of a variable into the translation.</p> <p>Here is an example of the correct use of interpolation in a QuickHelp paragraph:</p> <pre><code>// additional Translation file\n{\n    \"addons\": {\n        \"myAddon\": {\n            \"quickHelp\": {\n                \"info\": \"If you see this icon (&lt;span class=\\\"{{iconCls}}\\\"&gt;&lt;/span&gt;) you are good to go.\"\n            }\n        }\n    }\n}\n\n// config.json\n{\n    \"Portalconfig\": {\n        // (...)\n        \"quickHelp\": {\n            \"configs\": {\n                \"search\": {\n                    \"content\": [\n                        {\n                            \"title\": \"Yet another Title\",\n                            \"list\": [\n                                {\n                                    \"text\": \"additional:addons.myAddon.quickHelp.info\",\n                                    \"type\": \"text/html\",\n                                    \"interpolation\": {\n                                        \"iconCls\": \"bi-info-circle-fill\"\n                                    }\n                                }\n                            ]\n                        }\n                    ]\n                }\n            }\n        },\n        // (...)\n    }\n}\n</code></pre>"},{"location":"User/Misc/quickHelp/#tips-tricks-shortened-spelling","title":"Tips &amp; Tricks: Shortened spelling","text":"<p>You can abbreviate/shorten the paragraphs notation if your paragraph is \"text/plain\" (has no html in it). You can also abbreviate/shorten the image notation if you want the image to use the imgPath in config.js of the QuickHelp.</p> <p>Note that free text must always be specified as object {text, type}, because only translation keys are automatically recognized and converted to a \"text/plain\" object. Also note that image names that have a \":\" in their file name (imgName) must be specified as image object {imgName, imgPath}, otherwise they will be misinterpreted as translation key.</p> <p>The following two examples are identical in their outcome (with different titles only):</p> <p>Example A: <pre><code>{\n    \"Portalconfig\": {\n        // (...)\n        \"quickHelp\": {\n            \"configs\": {\n                \"search\": {\n                    \"content\": [\n                        {\n                            \"title\": \"This is an example of a simplified notation.\",\n                            \"list\": [\n                                \"common:modules.quickHelp.search.generalInfoHelp1\",\n                                \"an_image_that_is_on_imgPath.jpg\"\n                            ]\n                        }\n                    ]\n                }\n            }\n        },\n        // (...)\n    }\n}\n</code></pre></p> <p>Example B: <pre><code>{\n    \"Portalconfig\": {\n        // (...)\n        \"quickHelp\": {\n            \"configs\": {\n                \"search\": {\n                    \"content\": [\n                        {\n                            \"title\": \"This is an example that corresponds to the simplified example shown above.\",\n                            \"list\": [\n                                {\n                                    \"text\": \"common:modules.quickHelp.search.generalInfoHelp1\",\n                                    \"type\": \"text/plain\"\n                                },\n                                {\n                                    \"imgName\": \"an_image_that_is_on_imgPath.jpg\",\n                                    \"imgPath\": \"https://default_url_to_imgPath_in_config.js/\"\n                                }\n                            ]\n                        }\n                    ]\n                }\n            }\n        },\n        // (...)\n    }\n}\n</code></pre></p>"},{"location":"User/Misc/quickHelp/#tips-tricks-your-own-hashtags","title":"Tips &amp; Tricks: Your own Hashtags","text":"<p>If you click on the headings tabs in your newly created QuickHelp window (should jump down to the section in doing so), you will see the addition of a hashtag (e.g. \"#info-239\") in the url of the browser. These are unique keys that are automatically generated by QuickHelp as jump markers. If you want to get control over these hashtags, instead of a content array, specify a content object with the desired hash values as keys.</p> <p>In the following example clicking on the second tab (\"Title of the second section\"), the browser will jump to the second section using \"#yourOwnHashtagB\" as hashtag in the browser url.</p> <pre><code>{\n    \"Portalconfig\": {\n        // (...)\n        \"quickHelp\": {\n            \"configs\": {\n                \"testhelp\": {\n                    \"title\": \"This is a test with hashtags as content keys.\",\n                    \"content\": {\n                        \"yourOwnHashtagA\": {\n                            \"title\": \"Title of the first section\",\n                            \"list\": [\n                                // (...)\n                            ]\n                        },\n                        \"yourOwnHashtagB\": {\n                            \"title\": \"Title of the second section\",\n                            \"list\": [\n                                // (...)\n                            ]\n                        }\n                    }\n                }\n            }\n        },\n        // (...)\n    }\n}\n</code></pre>"},{"location":"User/Misc/quickHelp/#tips-tricks-change-the-title","title":"Tips &amp; Tricks: Change the title","text":"<p>You can change the title of an existing QuickHelp with a new title using the \"title\" key. The default search QuickHelp will stay as it is in the following example, only the general title of the QuickHelp window is altered:</p> <pre><code>{\n    \"Portalconfig\": {\n        // (...)\n        \"quickHelp\": {\n            \"configs\": {\n                \"search\": {\n                    \"title\": \"Changed title of search QuickHelp\"\n                }\n            }\n        }\n    }\n}\n</code></pre>"},{"location":"User/Misc/quickHelp/#tips-tricks-open-the-quickhelp-via-url","title":"Tips &amp; Tricks: Open the QuickHelp via url","text":"<p>You can conveniently open the QuickHelp by url by using the standard functions of the Masterportal to set the VueX store by url.</p> <p>Example: <pre><code>https://www.geoportal-hamburg.de/bildungsatlas/?QuickHelp/active=true\n</code></pre></p> <p>If you have built your own QuickHelp or you want to open a specific QuickHelp, set the \"quickHelpKey\" the same way.</p> <p>Examples: <pre><code>https://www.geoportal-hamburg.de/bildungsatlas/?QuickHelp/quickHelpKey=tree&amp;QuickHelp/active=true\nhttps://www.geoportal-hamburg.de/bildungsatlas/?QuickHelp/quickHelpKey=routing&amp;QuickHelp/active=true\n\nhttps://www.geoportal-hamburg.de/bildungsatlas/?QuickHelp/quickHelpKey=myOwnQuickHelp&amp;QuickHelp/active=true\n</code></pre></p>"},{"location":"User/Misc/quickHelp/#tables","title":"Tables","text":"<p>The following tables contain contents for a quick overview. In other parts of this documentation, the meaning of these tables and their usage is discussed.</p>"},{"location":"User/Misc/quickHelp/#section-keys","title":"Section Keys","text":"<p>Section Keys are Strings used to identify the sections of existing QuickHelp content.</p> \"search\" QuickHelp Section Keys generalInfo addressSearch houseNumberHelp topicSearchHelp parcelSearch \"tree\" QuickHelp Section Keys generalInfo topics selection saveSelection \"routing\" QuickHelp Section Keys generalInfo routePlanning routingBatchProcessing isochrones isochronesBatchProcessing"},{"location":"User/Misc/quickHelp/#default-images","title":"Default Images","text":"<p>See config.js documentation for similar details.</p> <p>Default images are used for existing content. This is a list of these images. For historical reasons the image keys and names are in German language. You may use image names in your own language, but the keys are fix.</p> Key \"search\" QuickHelp Images searchbarAllgemeines1 https://geodienste.hamburg.de/lgv-config/img/allgemein.png searchbarAllgemeines2 https://geodienste.hamburg.de/lgv-config/img/allgemein_2.png searchbarAllgemeines3 https://geodienste.hamburg.de/lgv-config/img/allgemein_3.png searchbarFlurstueckssuche https://geodienste.hamburg.de/lgv-config/img/allgemein_4.png Key \"tree\" QuickHelp Images aufbau1 https://geodienste.hamburg.de/lgv-config/img/themen.png aufbau2 https://geodienste.hamburg.de/lgv-config/img/themen_2.png Key \"routing\" QuickHelp Images routingTool1 https://geodienste.hamburg.de/lgv-config/img/routing_1.png routingTool2 https://geodienste.hamburg.de/lgv-config/img/routing_2.png routingTool3 https://geodienste.hamburg.de/lgv-config/img/routing_3.png routingTool4 https://geodienste.hamburg.de/lgv-config/img/routing_4.png routingTool5 https://geodienste.hamburg.de/lgv-config/img/routing_5.png routingTool6 https://geodienste.hamburg.de/lgv-config/img/routing_6.png routingTool7 https://geodienste.hamburg.de/lgv-config/img/routing_7.png routingTool8 https://geodienste.hamburg.de/lgv-config/img/routing_8.png routingTool9 https://geodienste.hamburg.de/lgv-config/img/routing_9.png routingTool10 https://geodienste.hamburg.de/lgv-config/img/routing_10.png routingTool11 https://geodienste.hamburg.de/lgv-config/img/routing_11.png routingTool12 https://geodienste.hamburg.de/lgv-config/img/routing_12.png routingTool13 https://geodienste.hamburg.de/lgv-config/img/routing_13.png routingTool14 https://geodienste.hamburg.de/lgv-config/img/routing_14.png routingTool15 https://geodienste.hamburg.de/lgv-config/img/routing_15.png routingTool16 https://geodienste.hamburg.de/lgv-config/img/routing_16.png"},{"location":"User/Misc/sensorThings/","title":"Sensor Layer","text":"<p>This document describes the technical details of the Masterportal's sensor layer based on the SensorThingsAPI.</p>"},{"location":"User/Misc/sensorThings/#definition-of-terms","title":"Definition of terms","text":""},{"location":"User/Misc/sensorThings/#ogc-sensorthingsapi","title":"OGC SensorThingsAPI","text":"<p>The OGC's (Open Geospatial Consortium) SensorThingsAPI \"provides an open standard-based and geospatial-enabled framework to interconnect the Internet of Things devices, data, and applications over the Web.\" (source) The framework provides a data model describing the connection between the \"Broker\" (Server), a network of \"Publishers\" (Sensors), and \"Clients\" (in this case, the Masterportal application).</p> <p>For more information on the open standard-based SensorThingsAPI, visit:</p> <ul> <li>https://docs.opengeospatial.org/is/15-078r6/15-078r6.html#1</li> <li>http://developers.sensorup.com/docs/</li> <li>https://gost1.docs.apiary.io/#reference/0/things</li> </ul> <p>For a quick overview of the data model, see The Sensing Entities.</p>"},{"location":"User/Misc/sensorThings/#frost-server","title":"FROST Server","text":"<p>The FROST Server is an open source SensorThings Server developed by the Fraunhofer Institut. It is \"a Server implementation of the OGC SensorThings API.\" (source) It acts as the Broker, establishing a link between Publishers (sensors) and the Client (Masterportal, browser). Calls to the FROST Server can be in pure http to use its REST API, or you may establish a bidirectional link via mqtt or CoAP.</p>"},{"location":"User/Misc/sensorThings/#the-rest-api-http","title":"The REST API - HTTP","text":"<p>To subscribe to required IDs of Things, use a HTTP REST call to fetch all required IDs.</p> <p>\u26a0\ufe0f <code>expand</code>, <code>filter</code>, and so on as URL query parameters are usable with HTTP REST calls only. With mqtt, you may subscribe to a plain path, and URL queries (\"?\" and beyond) will be ignored.</p> <p>Basic examples for data calls via REST API:</p> <ul> <li>Overview</li> <li>All things of the SensorThingsAPI</li> <li>One thing of the SensorThingsAPI</li> <li>One data stream</li> <li>All data streams of one thing</li> <li>All observations of a data stream</li> </ul> <p>The FROST Server implements a REST API that allows you to <code>expand</code> and <code>filter</code> the query based on a query language comparable to SQL. To join tables, use the <code>$expand</code> tag as URL query parameter, and separate multiple joins with a comma.</p> <ul> <li>One Thing with its Location</li> <li>One Thing with its Location and Observations (note that observations are in relation to data streams, not things)</li> </ul> <p>To filter things without knowing their identifier, use <code>$filter</code> as URL query parameter.</p> <ul> <li>Find a Thing by its name with <code>$filter=name eq '...'</code></li> </ul> <p>To order things, use <code>$orderby</code>. This can e.g. be used to retrieve the latest Observation by ordering Observations descending by date and adding <code>$top=1</code> to fetch the first element only.</p> <ul> <li>Order the Observations and pick the first one using <code>$orderby=phenomenonTime desc&amp;$top=1</code></li> </ul> <p>You may also use nested statements:</p> <ul> <li><code>?$expand=Datastreams($expand=Observations),Locations</code></li> </ul> <p>To retrieve Things within an extent, use a <code>POLYGON</code>:</p> <ul> <li>Retrieve things within a polygon</li> </ul> <p>URL in detail:</p> <ul> <li>https://iot.hamburg.de/v1.0/Things?</li> <li>$filter=</li> <li>startswith(Things/name,'StadtRad-Station')</li> <li>and st_within(<ul> <li>Locations/location,geograph'POLYGON ((</li> <li>10.0270 53.5695,</li> <li>10.0370 53.5695,</li> <li>10.0370 53.5795,</li> <li>10.0270 53.5795,</li> <li>10.0270 53.5695</li> <li>))'</li> </ul> </li> <li>)</li> <li>&amp;$expand=Locations</li> </ul> <p>You will only receive Things located within the given polygon. Use this to increase network request speed by only retrieving and subscribing to Things in the user's current view.</p>"},{"location":"User/Misc/sensorThings/#the-rest-api-mqtt","title":"The REST API - mqtt","text":"<p>mqtt is a protocol developed for the Internet of Things to keep an open connection to servers and communicate with pull (commands from client to server) and push (messages from server to client) requests, using an established connection that does not close in the meantime.</p> <p>In the browser, this might e.g. be implemented by using socket.io.</p> <p>If you use npm, refer to the mqtt package instead.</p> <p>The Client uses the mqtt protocol to subscribe to a Topic. A Topic is a plain path to something, e.g. <code>v1.0/Datastreams(74)/Observations</code>. Note that the host is given to mqtt during the connect operation, and is omitted during further interaction.</p> <p>After subscribing to a Topic (e.g. <code>v1.0/Datastreams(74)/Observations</code>), the server will push every new message (in this case, a new Observation in Datastream 74), using the opened mqtt connection, to the Client.</p> <p>As mqtt may only subscribe and unsubscribe Topics, you have to use HTTP requests (as shown above) to assemble the parts of your Topic. All entities of the SensorThingsAPI can be requested as Topic.</p> <p>As mentioned before, you can only subscribe to plain REST URLs. Everything in the query part will be ignored:</p> <ul> <li>positive mqtt example: <code>mqtt://iot.hamburg.de/v1.0/Datastreams(74)/Observations</code></li> <li>negative mqtt example: <code>mqtt://iot.hamburg.de/v1.0/Datastreams(74)?$expand=Observations</code></li> </ul> <p>Currently used mqtt versions:</p> <ul> <li>mqtt v3.1</li> <li>mqtt v3.1.1</li> <li>mqtt v5.0</li> </ul>"},{"location":"User/Misc/sensorThings/#sensorthingshttp","title":"SensorThingsHttp","text":"<p>The SensorThingsAPI provides automatic splitting of server responses to chunks to avoid overly large payloads. This allows displaying the progress of SensorThingsAPI calls for improved user experience. See Automatic Split for details.</p> <p>The request can be minimized further by limiting it to the extent currently visible in the browser. See Automatic call in Extent for details.</p> <p>The Masterportal implements a software layer called <code>SensorThingsHttp</code> that provides the both split and extent handling.</p> <p>\u26a0\ufe0f Please mind that automatic progress and \"call in extent\" are only available if your server side implementation of the SensorThingsAPI (e.g. the FROST Server) provides - and has set to active! - the skip and geography functions.</p>"},{"location":"User/Misc/sensorThings/#automatic-split","title":"Automatic split","text":"<p>Your server configuration should activate the automatic splitting of responses. When activated, responses too large for a single response will contain a follow-up link (\"@iot.nextLink\") to the next data chunk. The total number of chunks is included as \"@iot.count\" value.</p> <p>Using the <code>SensorThingsHttp.get()</code> function, the <code>SensorThingsHttp</code> layer handles \"@iot.nextLink\" (see The \"@iot.nextLink\" Value) and \"@iot.count\" (see The \"@iot.count\" Value) for you.</p> <p>Here is a basic implementation of <code>SensorThingsHttp</code>, using basic events of the Masterportal, to show its functionality:</p> <pre><code>import {SensorThingsHttp} from \"@src/utils/sensorThingsHttp\";\nimport LoaderOverlay from \"/src/utils/loaderOverlay\";\n\nconst http = new SensorThingsHttp(),\n    url = \"https://iot.hamburg.de/v1.0/Things\";\nhttp.get(url, function (response) {\n    // onsuccess\n    // do something with the complete response\n}, function () {\n    // onstart\n    LoaderOverlay.show();\n}, function () {\n    // oncomplete (always called finally)\n    LoaderOverlay.hide();\n}, function (error) {\n    // onerror\n    console.warn(error);\n}, function (progress) {\n    // onprogress\n    // the progress (percentage = Math.round(progress * 100)) to update your progress bar with\n});\n</code></pre> <p>Please note that the <code>http.get</code> call in itself is asynchronous. All parameters of <code>SensorThingsHttp.get()</code>, except for <code>url</code>, are optional. At least a function for <code>onsuccess</code> should be provided anyway, or the response is lost.</p>"},{"location":"User/Misc/sensorThings/#configuration","title":"Configuration","text":"<p>SensorThingsHttp can be configured with two parameters via constructor.</p> name mandatory type default description example removeIotLinks No Boolean false removes all \"@iot.navigationLink\" and \"@iot.selfLink\" from the response to reduce the size of the result <code>const http = new SensorThingsHttp({removeIotLinks: true});</code> httpClient No Function null can be used to change the default http handler (in our case axios), e.g. for testing <code>const http = new SensorThingsHttp({httpClient: (url, onsuccess, onerror) =&gt; {}});</code>"},{"location":"User/Misc/sensorThings/#the-iotnextlink-value","title":"The \"@iot.nextLink\" value","text":"<p>If you don't want to use <code>SensorThingsHttp</code> to automatically split the data, here are some hints regarding your implementation.</p> <p>If a call's response contains too many datasets, the server splits the result into chunks, indicated by a \"@iot.nextLink\" for the follow-up chunk. You can follow through all \"@iot.nextLink\" URLs, gathering the responses until the end of data is received. If no follow-up link (\"@iot.nextLink\") exists, all chunks have been retrieved.</p>"},{"location":"User/Misc/sensorThings/#example","title":"Example","text":"<p>The following URL will fetch 100 datasets, and the response will include an \"@iot.nextLink\" to the next chunk: All Things</p> <pre><code>{\n  \"@iot.nextLink\" : \"https://iot.hamburg.de/v1.0/Things?$skip=100\",\n  \"value\" : [{\n      \"...\": \"...\"\n  }]\n}\n</code></pre> <p>Calling the nextLink (https://iot.hamburg.de/v1.0/Things?$skip=100) provides you with the next chunk of data and another follow-up link (\"@iot.nextLink\") and so on, until the last dataset is reached.</p>"},{"location":"User/Misc/sensorThings/#iotnextlink-structures","title":"@iot.nextLink structures","text":"<p>If you don't want to use <code>SensorThingsHttp</code> to automatically follow @iot.nextLinks, please mind the following hint.</p> <p>Complex calls to the SensorThingsAPI may result in many chunks. The FROST Server is capable to split any delivered array - also in sub-structures - and provide them with an @iot.nextLink. These links hold the split array's key as prefix; e.g. Observations@iot.nextLink, or Datastreams@iot.nextLink.</p>"},{"location":"User/Misc/sensorThings/#example_1","title":"Example","text":"<ul> <li>URL: https://udh-hh-iot-qs.germanynortheast.cloudapp.microsoftazure.de/v1.0/Things?$expand=Datastreams($top=2;$expand=Observations($top=2))</li> <li>Response: Many Things, with lots of Datastreams and Observations.</li> <li>Hint: In this example, we use <code>$top=2</code> to enforce splitting with [prefix]@iot.nextLink on any expanded sublevel.</li> </ul> <pre><code>{\n    \"@iot.nextLink\" : \"https://udh-hh-iot-qs.germanynortheast.cloudapp.microsoftazure.de/v1.0/Things?$skip=100&amp;$expand=Datastreams%28%24top%3D2%3B%24expand%3DObservations%28%24top%3D2%29%29\",\n    \"value\" : [ {\n        \"Datastreams\" : [ {\n            \"Observations\" : [...],\n            \"Observations@iot.nextLink\" : \"https://udh-hh-iot-qs.germanynortheast.cloudapp.microsoftazure.de/v1.0/Datastreams(13976)/Observations?$top=2&amp;$skip=2\",\n        }, {\n            \"Observations\" : [...],\n            \"Observations@iot.nextLink\" : \"https://udh-hh-iot-qs.germanynortheast.cloudapp.microsoftazure.de/v1.0/Datastreams(13978)/Observations?$top=2&amp;$skip=2\",\n        } ],\n        \"Datastreams@iot.nextLink\" : \"https://udh-hh-iot-qs.germanynortheast.cloudapp.microsoftazure.de/v1.0/Things(5432)/Datastreams?$top=2&amp;$skip=2&amp;$expand=Observations%28%24top%3D2%29\",\n    }]\n}\n</code></pre> <p>On following the Datastreams@iot.nextLink, a structure describing further Datastreams is returned:</p> <pre><code>{\n    \"@iot.nextLink\" : \"https://udh-hh-iot-qs.germanynortheast.cloudapp.microsoftazure.de/v1.0/Things(5432)/Datastreams?$top=2&amp;$skip=4&amp;$expand=Observations%28%24top%3D2%29\",\n    \"value\" : [ {\n        \"Observations\" : [...],\n        \"Observations@iot.nextLink\" : \"https://udh-hh-iot-qs.germanynortheast.cloudapp.microsoftazure.de/v1.0/Datastreams(13980)/Observations?$top=2&amp;$skip=2\",\n    }]\n}\n</code></pre> <p>Keep in mind that a single Thing has neither an @iot.nextLink, nor a \"value\" key. E.g. this link returns such a feature. Still, this case contains [prefix]@iot.nextLinks to follow in nested structures.</p>"},{"location":"User/Misc/sensorThings/#iotnextlink-and-depth-barriers","title":"@iot.nextLink and depth barriers","text":"<p>The end of @iot.nextLink follow-ups is marked by the absence of a next @iot.nextLink to follow.</p> <p>However: If you limit the response using <code>$top=X</code> (with X being the number of entities to load), an @iot.nextLink may exist. Following these links will lead to a cascade of server calls - for example, <code>$top=1</code> on a request that would return 1000 entities would start 1000 server calls, slowing down the system immensely.</p> <p>Example call for this scenario <pre><code>{\n  \"@iot.nextLink\" : \"https://udh-hh-iot-qs.germanynortheast.cloudapp.microsoftazure.de/v1.0/Datastreams(13980)/Observations?$top=1&amp;$skip=1\",\n  \"value\" : [ {...} ]\n}\n</code></pre></p> <p>Unfortunately, you may not simply ignore @iot.nextLinks if you find a <code>$top=X</code> in the @iot.nextLink, as the X in <code>$top=X</code> may exceed \"the service-driven pagination limitation\", and multiple requests are required to actually retrieve X entities:</p> <p>\"In addition, if the $top value exceeds the service-driven pagination limitation (...), the $top query option SHALL be discarded and the server-side pagination limitation SHALL be imposed.\" (source)</p> <p>An @iot.nextLink search for <code>$top=X</code> or <code>%24top=X</code> in combination with <code>$skip=Y</code> or <code>%24skip=Y</code> will do the trick, as any <code>$top=X</code> not related to the root structure is url encoded with \"%3D\" instead of \"=\".</p> <p>Example: https://udh-hh-iot-qs.germanynortheast.cloudapp.microsoftazure.de/v1.0/Things(5432)/Datastreams?%24top=2&amp;%24skip=2&amp;%24expand=Observations%28%24top%3D2%29</p> <ul> <li>Regex for <code>$top=X</code>: <code>/[\\$|%24]top=([0-9]+)/</code></li> <li>Regex for <code>$skip=X</code>: <code>/[\\$|%24]skip=([0-9]+)/</code></li> </ul> <p>Use this pseudo-code as guideline for your additional depth barrier:</p> <pre><code>// pseudo code, some nextLink is given\nint topX = fetchTopFromNextLink(nextLink);\nint skipX = fetchSkipFromNextLink(nextLink);\n\nif (topX &gt; 0 &amp;&amp; topX &lt;= skipX) {\n    // do not follow (depth barrier reached)\n}\n</code></pre>"},{"location":"User/Misc/sensorThings/#the-iotcount-value","title":"The \"@iot.count\" Value","text":"<p>The number of expected chunks can be requested by adding <code>$count=true</code> to the call, which will fill the value for \"@iot.count\" in the response.</p> <p>This total number in combination with the current skip value can be used to calculate the loading progress of the application, which may then be shown to the user by a loading bar or other UI elements.</p>"},{"location":"User/Misc/sensorThings/#example_2","title":"Example","text":"<p>To get the total number of datasets to expect from a call, simply add <code>$count=true</code> to any SensorThingsAPI URL: https://iot.hamburg.de/v1.0/Things?$count=true</p> <pre><code>{\n  \"@iot.count\" : 4723,\n  \"@iot.nextLink\" : \"https://iot.hamburg.de/v1.0/Things?$skip=100&amp;$count=true\",\n  \"value\" : [ {\n      \"...\": \"...\"\n  }]\n}\n</code></pre> <p>Combining the absolute number (\"@iot.count\") and the value of the current <code>$skip</code> parameter gives you the progress with <code>1 / @iot.count * skip</code>.</p>"},{"location":"User/Misc/sensorThings/#automatic-use-of-extent","title":"Automatic use of extent","text":"<p>You may want your server implementation of the SensorThingsAPI (e.g. the FROST Server) to return data only within a given extent (e.g. a polygon). The FROST Server provides you with this functionality. To use this feature, the <code>SensorThingsHttp</code> layer provides a method <code>SensorThingsHttp.getInExtent()</code> to retrieve data only within the given extent.</p> <p>Using <code>SensorThingsHttp.getInExtent()</code>, you may also use the splitting progress explained above. The <code>SensorThingsHttp</code> layer creates the correct URL query parameter <code>st_within(Locations/location,geography'POLYGON ((...))')</code> (see The use of POLYGON) for you.</p> <p>The extent needs to be described including its source projection and target projection. The following extent options are mandatory for the use of <code>SensorThingsHttp.getInExtent()</code>:</p> name mandatory type default description example extent yes Number[] - the extent of your current view [556925.7670922858, 5925584.829527992, 573934.2329077142, 5942355.170472008] sourceProjection yes String - the extent's projection \"EPSG:25832\" targetProjection yes String - projection expected by the SensorThingsAPI server \"EPSG:4326\" <p>See this basic implementation of <code>SensorThingsHttp</code> to receive data within the browser's current view extent only, using Masterportal events to show its functionality, as an example:</p> <pre><code>import {SensorThingsHttp} from \"@src/utils/sensorThingsHttp\";\nimport LoaderOverlay from \"/src/utils/loaderOverlay\";\n\nconst http = new SensorThingsHttp(),\n    extent = Radio.request(\"MapView\", \"getCurrentExtent\"),\n    projection = Radio.request(\"MapView\", \"getProjection\").getCode(),\n    epsg = this.get(\"epsg\"),\n    url = \"https://iot.hamburg.de/v1.0/Things\";\n\nhttp.getInExtent(url, {\n    extent: extent,\n    sourceProjection: projection,\n    targetProjection: epsg\n}, function (response) {\n    // on success\n    // do something with the response\n\n}, function () {\n    // on start (always called)\n    LoaderOverlay.show();\n\n}, function () {\n    // on complete (always called)\n    LoaderOverlay.hide();\n\n}, function (error) {\n    // on error\n    console.warn(error);\n\n}, function (progress) {\n    // on wait\n    // the progress to update your progress bar with\n    // to get the percentage use Math.round(progress * 100)\n});\n</code></pre> <p>When using <code>SensorThingsHttp.getInExtent()</code>, the <code>url</code> and <code>extent</code> parameters are mandatory. To retrieve the response you need to set the third parameter as an on success function. The others are optional.</p> <p>An optional eighth parameter <code>httpClient</code> exists that can be used to replace the default HTTP handler, which is <code>axios</code>. This optional <code>httpClient</code>, if used, must be a function with parameters <code>url</code>, <code>onsuccess</code>, and <code>onerror</code>.</p>"},{"location":"User/Misc/sensorThings/#the-use-of-polygon","title":"The use of <code>POLYGON</code>","text":"<p>If you don't want to use <code>SensorThingsHttp</code> software layer to access sensors in the current map view, consider these hints for your convenience.</p> <p>To receive data only in a specified extent, the SensorThingsAPI provides certain geospatial functions using <code>POINT</code> or <code>POLYGON</code> structures. See the documentation for more details. You may set your extent by using such a <code>POLYGON</code>, using the Location of Things to filter them by,</p> <p>Basic example:</p> <p>https://iot.hamburg.de/v1.0/Things?$filter=st_within(Locations/location,geography%27POLYGON%20((10.0270%2053.5695,10.0370%2053.5695,10.0370%2053.5795,10.0270%2053.5795,10.0270%2053.5695))%27)&amp;$expand=Locations</p> <p>\u26a0\ufe0f Convert your projection to the projection used by the SensorThingsAPI. If the server uses \"EPSG:4326\", but your Masterportal is set to \"EPSG:25832\", you must use OpenLayers (or <code>masterportalAPI/src/crs</code>, exporting a <code>transform</code> function) to convert the coordinates.</p> <p>Example to transform a Location from your current projection into \"EPSG:4326\":</p> <pre><code>import crs from \"@masterportal/masterportalapi/src/crs\";\n\nconst extent = Radio.request(\"MapView\", \"getCurrentExtent\"),\n    projection = Radio.request(\"MapView\", \"getProjection\").getCode(),\n    epsg = \"EPSG:4326\",\n    topLeftCorner = crs.transform(projection, epsg, {x: extent[0], y: extent[1]}),\n    bottomRightCorner = crs.transform(projection, epsg, {x: extent[2], y: extent[3]});\n</code></pre> <p>This way you will get the top left and bottom right corner of the view. To draw yourself a <code>POLYGON</code> to be used with SensorThingsAPI from that, the rectangle needs to be constructed as follows:</p> <pre><code>const extent = Radio.request(\"MapView\", \"getCurrentExtent\"),\n    polygon = [\n        {x: extent[0], y: extent[1]},\n        {x: extent[2], y: extent[1]},\n        {x: extent[2], y: extent[3]},\n        {x: extent[0], y: extent[3]},\n        {x: extent[0], y: extent[1]}\n    ];\n</code></pre>"},{"location":"User/Misc/sensorThings/#sensorthingsmqtt","title":"SensorThingsMqtt","text":"<p>The Masterportal SensorThings software layer is capable of handling mqtt subscriptions for <code>mqtt 3.1</code>, <code>mqtt 3.1.1</code>, and <code>mqtt 5.0</code>. The mqtt version running on the server to be used has to be known and used in <code>SensorThingsMqtt</code>'s constructor.</p> <p>This is a basic example for <code>mqtt 5.0</code>:</p> <pre><code>import {SensorThingsMqtt} from \"./sensorThingsMqtt\";\n\nconst mqtt = new SensorThingsMqtt({\n        mqttUrl: \"wss://iot.hamburg.de/mqtt\",\n        mqttVersion: \"5.0\",\n        context: this\n    });\n\nmqtt.on(\"message\", (topic, message, packet) =&gt; {\n    // handler\n    console.log(\"received message:\", topic, message, packet);\n}, error =&gt; {\n    // onerror\n    console.warn(error);\n});\n\nmqtt.subscribe(\"v1.0/Datastreams(1234)/Observations\", {\n    rh: 0\n}, () =&gt; {\n    // onsuccess\n    console.log(\"success\");\n}, error =&gt; {\n    // onerror\n    console.warn(error);\n});\n</code></pre> <p>This is a basic example for <code>mqtt 3.1</code> and <code>3.1.1</code>:</p> <pre><code>import {SensorThingsMqtt} from \"./sensorThingsMqtt\";\n\nconst mqtt = new SensorThingsMqtt({\n        mqttUrl: \"wss://iot.hamburg.de/mqtt\",\n        mqttVersion: \"3.1.1\", // \"3.1\" respective\n        rhPath: \"https://iot.hamburg.de\",\n        context: this\n    });\n\nmqtt.on(\"message\", (topic, message, packet) =&gt; {\n    // handler\n    console.log(\"received message:\", topic, message, packet);\n}, error =&gt; {\n    // onerror\n    console.warn(error);\n});\n\nmqtt.subscribe(\"v1.0/Datastreams(1234)/Observations\", {\n    rh: 0\n}, () =&gt; {\n    // onsuccess\n    console.log(\"success\");\n}, error =&gt; {\n    // onerror\n    console.warn(error);\n});\n</code></pre> <p>Please note that Messages are not received when using \"subscribe\", but will come in via an <code>on(message)</code> event.</p> <p>The <code>on(message)</code> event's messages must be redirected to your processes with help of the supplied topics.</p>"},{"location":"User/Misc/sensorThings/#configuration-constructor","title":"Configuration - Constructor","text":"<p>The software layer <code>SensorThingsMqtt</code> is a class to be configured at construction time. Creating a new instance, the connection to the mqtt Server is established once per instance in the background.</p> name mandatory type default description example mqttUrl yes String \"\" The url to your mqtt server. \"wss://iot.hamburg.de/mqtt\" mqttVersion no String \"3.1.1\" The mqtt version your server runs on. \"3.1\", \"3.1.1\", \"5.0\" rhPath no String \"\" For 3.1 and 3.1.1 only, you need to set the basic http path to your SensorThingsAPI to simulate Retained Handling. \"https://iot.hamburg.de\" context no JavaScript Scope The scope to run the events in. If you set the context to <code>this</code>, you can use <code>this</code> in your event functions to reach your current module. this"},{"location":"User/Misc/sensorThings/#mqtturl","title":"mqttUrl","text":"<p>mqttUrl is the URL to connect to the mqtt service. The URL may use any of the protocols 'mqtt', 'mqtts', 'tcp', 'tls', 'ws', or 'wss'. See the mqtt package documentation for additional details.</p>"},{"location":"User/Misc/sensorThings/#mqttversion","title":"mqttVersion","text":"<p>The mqttVersion will trigger different behavior of the <code>SensorThingsMqtt</code> software layer.</p> <ul> <li>\"3.1\": the internal protocolId is \"MQIsdp\" (3.1.1 and 5.0 use \"MQTT\"); the internal protocolVersion is 3 (3.1.1 and 5.0 use protocolVersion 4); simulation of Retained Handling will be activated if you provide a rhPath</li> <li>\"3.1.1\": simulation of Retained Handling will be activated if you provide a rhPath</li> <li>\"5.0\": no simulation of Retained Handling necessary (you must not provide a rhPath!), the event <code>on(\"disconnect\")</code> is provided as feature for 5.0</li> </ul>"},{"location":"User/Misc/sensorThings/#rhpath","title":"rhPath","text":"<p>The rhPath is used to simulate Retained Handling on mqtt versions 3.1 and 3.1.1, and has to be set to protocol plus domain. To figure out your rhPath, think of it as the missing prefix for a Topic.</p> <p>E.g., if you accessed your SensorThingsAPI via \"https://iot.hamburg.de/v1.0/Things(1234)/Datastreams\", you'd subscribe to a Topic via mqtt with \"v1.0/Things(1234)/Datastreams\". The rhPath is the leftover URL part missing to actually receive data via http. In this case, \"https://iot.hamburg.de\" is the rhPath.</p> <p>Be aware that your http path might differ from your mqtt path depending on the protocol to be used; e.g. \"wss://iot.hamburg.de/mqtt\" could be an rhPath to subscribe to \"v1.0/Things(1234)/Datastreams\".</p> <p>Examples:  - SensorThingsAPI: \"https://iot.hamburg.de/v1.0/Things(1234)/Datastreams\"  - mqttUrl: \"wss://iot.hamburg.de/mqtt\"  - Topic: \"v1.0/Things(1234)/Datastreams\"  - rhPath: \"https://iot.hamburg.de\"</p>"},{"location":"User/Misc/sensorThings/#configuration-subscribe","title":"Configuration - Subscribe","text":"<p>After construction, you can subscribe using the instance of <code>SensorThingsMqtt</code>.</p> name mandatory type default description example qos no Number 0 Quality of service subscription level, see documentation. 0, 1, or 2 rh no Number 2 \"This option specifies whether retained messages are sent on subscription.\" (source) 0, 1, or 2"},{"location":"User/Misc/sensorThings/#rh","title":"rh","text":"<p>Retained Handling (rh) between Client and Server is only available for mqtt 5.0, since previous version to not support this feature.</p> <p>However, for 3.1 and 3.1.1, <code>SensorThingsMqtt</code> may simulate Retained Messages by bypassing mqtt with http, internally using <code>SensorThingsHttp</code> to receive the latest sensor message.</p> <p>The Retained Handling can be configured as rh := 0, 1, or 2.</p> <ul> <li>rh := 0; On subscription, you'll receive one old message (the latest message) from the Sensor immediately by message event.</li> <li>rh := 1; On subscription, you'll receive one old message (the latest message), but only if it's the first process in the application to subscribe to this topic.</li> <li>rh := 2; On subscription, you will not receive any latest message of the Sensor, but \"fresh\" messages in the future.</li> </ul>"},{"location":"User/Misc/sensorThings/#retained-handling","title":"Retained Handling","text":"<p>An important option for mqtt subscriptions is the so-called \"Retained Handling\" (rh).</p> <p>A \"Retained Message\" is a Sensor message sent in the past, but stored by the server to send immediately after subscription.</p> <pre><code>import {SensorThingsMqtt} from \"./sensorThingsMqtt\";\n\nconst mqtt = new SensorThingsMqtt({\n        mqttUrl: \"wss://iot.hamburg.de/mqtt\",\n        mqttVersion: \"5.0\",\n        context: this\n    });\n\nmqtt.on(\"message\", (topic, message, packet) =&gt; {\n    if (packet.retain === 1) {\n        console.log(\"this is a retained message\");\n    }\n    else {\n        console.log(\"this is a new message\");\n    }\n});\n\nmqtt.subscribe(\"v1.0/Datastreams(1234)/Observations\", {rh: 0});\n</code></pre> <p>As this might be an unwanted behavior, Retained Handling is inactive by default, that is, rh is set to 2 by default.</p> <pre><code>import {SensorThingsMqtt} from \"./sensorThingsMqtt\";\n\nconst mqtt = new SensorThingsMqtt({\n        mqttUrl: \"wss://iot.hamburg.de/mqtt\",\n        mqttVersion: \"5.0\",\n        context: this\n    });\n\nmqtt.on(\"message\", (topic, message, packet) =&gt; {\n    if (packet.retain === 1) {\n        console.log(\"this will never happen\");\n    }\n    else {\n        console.log(\"this is a new message\");\n    }\n});\n\nmqtt.subscribe(\"v1.0/Datastreams(1234)/Observations\");\n</code></pre> <p>To identify whether a message is a Retained Message, check the <code>packet.retain</code> flag included.</p> <pre><code>import {SensorThingsMqtt} from \"./sensorThingsMqtt\";\n\nconst mqtt = new SensorThingsMqtt({\n        mqttUrl: \"wss://iot.hamburg.de/mqtt\",\n        mqttVersion: \"5.0\",\n        context: this\n    });\n\nmqtt.on(\"message\", (topic, message, packet) =&gt; {\n    if (topic === \"v1.0/Datastreams(1234)/Observations\" &amp;&amp; packet.retain === 1) {\n        console.log(\"this is for the second subscription only\");\n    }\n    else if (topic === \"v1.0/Datastreams(1234)/Observations\") {\n        console.log(\"this is for the first and second subscription\");\n    }\n    else if (topic === \"v1.0/Things(4321)/Datastreams\") {\n        console.log(\"this is for the third subscription, retain flag is\", packet.retain);\n    }\n});\n\n// first subscription\nmqtt.subscribe(\"v1.0/Datastreams(1234)/Observations\", {rh: 2});\n\n// second subscription\nmqtt.subscribe(\"v1.0/Datastreams(1234)/Observations\", {rh: 0});\n\n// third subscription\nmqtt.subscribe(\"v1.0/Things(4321)/Datastreams\", {rh: 0});\n</code></pre>"},{"location":"User/Misc/sensorThings/#closing-a-mqtt-connection","title":"Closing a mqtt connection","text":"<p>To close a mqtt connection, execute <code>end</code> on the <code>SensorThingsMqtt</code> instance.</p> <pre><code>import {SensorThingsMqtt} from \"./sensorThingsMqtt\";\n\nconst mqtt = new SensorThingsMqtt({\n        mqttUrl: \"wss://iot.hamburg.de/mqtt\",\n        mqttVersion: \"5.0\",\n        context: this\n    });\n\nmqtt.end(false, {}, () =&gt; {\n    console.log(\"finished\");\n});\n</code></pre> <p>For more information on the <code>end</code> function parameters, visit the end function documentation of mqtt; this called is passed through to the mqtt package without further effects.</p>"},{"location":"User/Misc/translations/","title":"Masterportal Translation Guide","text":"<p>This document describes how to work with languages and translations in the Masterportal. It is intended for beginners, advanced users, and experts.</p> <p>These are the objectives of the document:</p> <ol> <li>Explain how to expand language files and add new languages (beginners)</li> <li>Explain how to use localization in new models (advanced users)</li> <li>Explain how the internationalization system works (experts)</li> </ol>"},{"location":"User/Misc/translations/#background","title":"Background","text":"<p>This section provides background information and common knowledge on working with translations and languages in the Masterportal.</p>"},{"location":"User/Misc/translations/#technology","title":"Technology","text":"<p>The Masterportal uses the i18next technology for translations.</p> <p>For advanced users and experts, we recommend reading the short and on-point i18next documentation.</p> <p>The following i18next plugins are used:</p> <ul> <li>i18next-http-backend to use language files rather than hard coded translations</li> <li>i18next-browser-languagedetector to detect the browser language, use the localStorage, and react to the URL query</li> </ul> <p>An i18next language change is currently broadcasted with this <code>Backbone.Radio</code> event: <code>\"i18next#RadioTriggerLanguageChanged\"</code>. i18next is available as global variable (also named <code>i18next</code>) and can be accessed in browser consoles via <code>Backbone.i18next</code>.</p> <p>\u26a0\ufe0f Please mind that Backbone is deprecated and will eventually be replaced with the VueX store.</p>"},{"location":"User/Misc/translations/#languages","title":"Languages","text":"<p>The Masterportal's main development team is seated in Hamburg, Germany. For this reason, the fallback language is currently German. You may change the fallback language within the <code>config.js</code> file.</p> <p>A complete english translation is provided.</p>"},{"location":"User/Misc/translations/#configuration","title":"Configuration","text":"<p>i18next's languages are configured in the <code>config.js</code> file. See the config.js documentation for details.</p>"},{"location":"User/Misc/translations/#language-files","title":"Language files","text":"<p>Language files are used to store translations by keys. These keys are used to access translations in-code and in the Masterportal configuration. To work with language files, basic JSON syntax knowledge is required.</p> <p>For beginners, we recommend a quick look at these JSON guides:</p> <ul> <li>https://restfulapi.net/json-syntax/</li> <li>https://www.w3schools.com/js/js_json_syntax.asp</li> </ul>"},{"location":"User/Misc/translations/#language-files_1","title":"Language files","text":"<p>Language files are translation core. To support a language, a separate language file is needed for it. We decided to split translations into two files:</p> <ol> <li>common</li> <li>additional</li> </ol> <p>See the i18next architecture on how these files are used.</p>"},{"location":"User/Misc/translations/#common-language-file-commonjson","title":"Common language file - <code>common.json</code>","text":"<p>The common language file contains all translations used throughout the Masterportal in its standard configuration. This includes common modules as well as the most used menu entries and application logic.</p>"},{"location":"User/Misc/translations/#additional-language-file-additionaljson","title":"Additional language file - <code>additional.json</code>","text":"<p>The additional language file is used for add-ons (formerly custom modules).</p>"},{"location":"User/Misc/translations/#translation-of-configjson-names","title":"Translation of config.json names","text":"<p>This section describes how to use i18next to translate config.json values</p> <p>After a best practice scenario, the background mechanisms are explained in detail.</p>"},{"location":"User/Misc/translations/#best-practice-scenario","title":"Best practice scenario","text":""},{"location":"User/Misc/translations/#menu","title":"Menu","text":"<p>To translate a config.json value, the value itself must be formatted correctly. The formatted value must then be added to the translation files. If the part of the config.json is considered for translations by the Masterportal, the translation will take place. Please mind that only the field <code>\"name\"</code> is considered during translation.</p> <p>Translation file common.json:</p> <pre><code>{\n    \"foo\": {\n        \"bar\": {\n            \"exampleMenuTitle\": \"titulum menu\",\n            \"exampleLayerName\": \"aliquid\",\n            \"exampleSubjectData\": \"subject data\"\n        }\n    }\n}\n</code></pre> <p>Translatable config.json menu part:</p> <pre><code>{\n    \"Portalconfig\": {\n        \"menu\": {\n            \"example\": {\n                \"name\": \"translate#common:foo.bar.exampleMenuTitle\",\n                \"icon\": \"bi-list-ul\",\n                \"isInitOpen\": false\n            }\n        }\n    }\n}\n</code></pre> <p>The translation key must be prefixed with <code>\"translate#\"</code> and the file name. The structure of such a key is <code>translate#[filename]:[path.to.key]</code>, resulting in e.g. <code>translate#common:foo.bar.exampleMenuTitle</code>.</p> <p>The menu is programmed to react to the translation prefix <code>\"translate#\"</code>, and no further action is required.</p>"},{"location":"User/Misc/translations/#layer-tree","title":"Layer tree","text":"<p>The layer tree (de: \"Themenbaum\") can be translated as well.</p> <p>\u26a0\ufe0f Plate note: Adding a translation key to a layer tree entry will overwrite any title or name of the service.</p> <p>If the treeType is <code>\"default\"</code> or <code>\"custom\"</code>, folder names can be specified. In the following example, the tree would show the value for the key <code>\"foo.bar.exampleSubjectData\"</code> instead of \"Subject data\".</p> <p>Default translations:</p> <ul> <li>Baselayer: \"Background maps\" (de: \"Hintergrundkarten\")</li> <li>Overlay: \"Subject data\" (de: \"Fachthemen\")</li> <li>3d-layer: \"3D data\" (de: \"3D Daten\")</li> </ul> <p>Translatable config.json layer tree part:</p> <pre><code>{\n    \"Themenconfig\": {\n        \"Fachdaten\": {\n            \"name\": \"translate#common:foo.bar.exampleSubjectData\",\n            \"Layer\": [\n                  {\n                    \"id\": \"2128\",\n                    \"name\": \"translate#common:foo.bar.exampleLayerName\"\n                  }\n            ]\n        }\n    }\n}\n</code></pre> <p>These possibilities and hierarchy exist:</p> <ul> <li><code>\"name\": \"my special subjects\"</code> is never translated</li> <li><code>\"name\": \"translate#common:foo.bar.exampleMenuTitle\"</code> is translated if the key exists</li> <li>if no name is specified (that is, the field name does not exist), the default translation is applied (see above)</li> </ul>"},{"location":"User/Misc/translations/#tools","title":"Tools","text":"<p>Tools (de: \"Werkzeuge\") can be translated similarly to tools. This includes the menu entry within the \"Tools\" folder and the tool window's title.</p> <p>Translatable config.json tool part:</p> <pre><code>{\n    \"tools\": {\n        \"name\": \"Tools\",\n        \"icon\": \"bi-tools\",\n        \"children\": {\n            \"draw\": {\n                \"name\": \"translate#common:foo.bar.exampleMenuTitle\",\n                \"icon\": \"bi-pencil-fill\"\n            },\n        }\n    }\n}\n</code></pre> <p>The following possibilities and hierarchy exist:</p> <ul> <li><code>\"name\": \"Draw / Write\"</code> is never translated</li> <li><code>\"name\": \"translate#common:foo.bar.exampleMenuTitle\"</code> is translated if the key exists</li> <li>if no name is specified (that is, the field name does not exist), the name is set by the model.js (in this scenario, <code>../tools/draw/model.js</code>)</li> </ul>"},{"location":"User/Misc/translations/#define-tool-name-in-the-modeljs","title":"Define tool name in the <code>model.js</code>","text":"<p>If the field <code>\"name\"</code> in the <code>model.js</code> is filled, it is interpreted as default name, and not translated.</p> <pre><code>const DrawTool = Tool.extend(/** @lends DrawTool.prototype */{\n    defaults: Object.assign({}, Tool.prototype.defaults, {\n        name: \"Draw / Write\",\n        ...\n</code></pre> <p>To add translation, use the attribute name <code>\"nameTranslationKey\"</code> to provide the key instead.</p> <pre><code>const DrawTool = Tool.extend(/** @lends DrawTool.prototype */{\n    defaults: Object.assign({}, Tool.prototype.defaults, {\n        nameTranslationKey: \"common:menu.tools.draw\",\n        ...\n</code></pre>"},{"location":"User/Misc/translations/#translation-in-add-ons","title":"Translation in add-ons","text":"<p>The language files can be found under <code>./addons/{addon-name}/locales/{language}/additional.json</code>.</p> <p>A translation is implemented this way:</p> <pre><code>i18next.t(\"additional:modules.tools.example.title\"),\n</code></pre> <p>See this for an example.</p>"},{"location":"User/Misc/translations/#interesting-i18nxt-translation-functions","title":"Interesting i18nxt translation functions","text":""},{"location":"User/Misc/translations/#interpolation","title":"Interpolation","text":"<p>Use dynamic values in your translations.</p> <p>Key</p> <pre><code>{\n    \"key\": \"{{what}} is {{how}}\"\n}\n</code></pre> <p>Example</p> <pre><code>i18next.t('key', { what: 'i18next', how: 'great' });\n// -&gt; \"i18next is great\"\n</code></pre> <p>See the i18next interpolation documentation for further details.</p>"},{"location":"User/Misc/translations/#singular-plural","title":"Singular / Plural","text":"<p>i18next features automatic recognition of singular and plural forms.</p> <p>\u26a0\ufe0f Note: The variable name must be <code>count</code>!</p> <p>Keys</p> <pre><code>{\n  \"key_one\": \"item\",\n  \"key_other\": \"items\",\n  \"keyWithCount_one\": \"{{count}} item\",\n  \"keyWithCount_other\": \"{{count}} items\"\n}\n</code></pre> <p>Example</p> <pre><code>i18next.t('key', {count: 0}); // -&gt; \"items\"\ni18next.t('key', {count: 1}); // -&gt; \"item\"\ni18next.t('key', {count: 5}); // -&gt; \"items\"\ni18next.t('key', {count: 100}); // -&gt; \"items\"\ni18next.t('keyWithCount', {count: 0}); // -&gt; \"0 items\"\ni18next.t('keyWithCount', {count: 1}); // -&gt; \"1 item\"\ni18next.t('keyWithCount', {count: 5}); // -&gt; \"5 items\"\ni18next.t('keyWithCount', {count: 100}); // -&gt; \"100 items\"\n</code></pre> <p>See the i18next singular-plural documentation for more details.</p>"},{"location":"User/Misc/translations/#nesting","title":"Nesting","text":"<p>Nesting allows you to reference other keys within a translation.</p> <p>Keys</p> <pre><code>{\n    \"nesting1\": \"1 $t(nesting2)\",\n    \"nesting2\": \"2 $t(nesting3)\",\n    \"nesting3\": \"3\",\n}\n</code></pre> <p>Example</p> <pre><code>i18next.t('nesting1'); // -&gt; \"1 2 3\"\n</code></pre> <p>See the i18next nesting documentation for more details.</p>"},{"location":"User/Misc/translations/#formatting","title":"Formatting","text":"<p>Please read the i18next formatting documentation regarding this topic.</p>"},{"location":"User/Misc/translations/#common-errors","title":"Common errors","text":"<p>You have set a translation key, but instead of the actual translation, the key is visible.</p> <p>Please check the correct spelling of the key. i18next can't find this key neither in the selected language file nor in the fallback language file.</p> <p>You have set a translation key in the config.json, but the translation does not change on language changes.</p> <p>Please check first whether the module controlled by this part of the config.json has been programmed to react to translations at all.</p> <p>Expert hint: The <code>config.json</code> is translated initially when the Masterportal starts. For language changes, <code>i18next.translate</code> must be used in the code. If not used, the content will permanently remain in the initially active language.</p>"},{"location":"User/Misc/translations/#how-to-use-i18next-in-production-vue","title":"How to use i18next in production Vue","text":"<p>The following section is a guide on how to integrate i18next into your MP project using Vue.</p>"},{"location":"User/Misc/translations/#translate-in-the-template","title":"Translate in the template","text":"<p>The translation of the values to be displayed can be done directly in the template of a Vue component. For this purpose <code>$t()</code> is used. In the following example, the <code>name</code> attribute is translated.</p> <p>ExampleTemplate <pre><code>&lt;template lang=\"html\"&gt;\n    &lt;Tool\n        :title=\"$t(name)\"\n        :icon=\"icon\"\n    &gt;\n&lt;/template&gt;\n</code></pre></p>"},{"location":"User/Misc/translations/#translate-in-script","title":"Translate in script","text":"<p>To translate the values in the script part of a Vue component, this must be done in the computed property. For this purpose <code>this.$t()</code> is used.</p> <pre><code> computed: {\n    /**\n    * Gets the exmaple attributes.\n    * @returns {Object} The exmaple attributes.\n    */\n    example: function () {\n        const example = {\n            exampleTitle: this.$t(\"common:foo.bar.exampleTitle\"),\n            exampleText: this.$t(\"common:foo.bar.exampleText\")\n        };\n\n        return example;\n    },\n }\n</code></pre>"},{"location":"User/Misc/translations/#translate-to-unit-tests","title":"Translate to unit tests","text":"<p>i18next provides a test mode for unit tests. In test mode, no real translation is performed (no files are loaded). Instead, i18next always responds with the specified key.</p> <p>For unit tests in the master portal, we use \"Chai\". When i18next exits in a component, a mock must be created in the associated unit test.</p> <pre><code>import {config} from \"@vue/test-utils\";\nconfig.mocks.$t = key =&gt; key;\n</code></pre>"},{"location":"User/Misc/translations/#how-to-use-i18next-in-production-backbone-deprecated","title":"How to use i18next in production Backbone (Deprecated)","text":"<p>This section is a guide on how to integrate i18next into your Masterportal project using MV*.</p>"},{"location":"User/Misc/translations/#translate-your-model","title":"Translate your model","text":"<p>To translate values for your model with i18next, simply set the values using the translation function of i18next. Listening to the <code>Backbone.Radio</code> event <code>\"i18next#RadioTriggerLanguageChanged\"</code> allows value changes to the currently chosen language at run-time.</p> <p>ExampleModel:</p> <pre><code>const ExampleModel = Backbone.Model.extend(/** @lends ExampleModel.prototype */ {\n    defaults: {\n        currentLng: \"\",\n        exampleTitle: \"\",\n        exampleText: \"\"\n    },\n    /**\n     * @class ExampleModel\n     * @extends Backbone.Model\n     * @memberof Example\n     * @constructs\n     * @listens i18next#RadioTriggerLanguageChanged\n     */\n    initialize: function () {\n        this.listenTo(Radio.channel(\"i18next\"), {\n            \"languageChanged\": this.changeLang\n        });\n\n        this.changeLang(i18next.language);\n    },\n    /**\n     * change language - sets default values for the language\n     * @param {String} lng the language changed to\n     * @returns {Void}  -\n     */\n    changeLang: function (lng) {\n        this.set({\n            currentLng: lng,\n            exampleTitle: i18next.t(\"common:foo.bar.exampleTitle\"),\n            exampleText: i18next.t(\"common:foo.bar.exampleText\")\n        });\n    }\n});\n\nexport default ExampleModel;\n</code></pre>"},{"location":"User/Misc/translations/#listen-to-your-model","title":"Listen to your model","text":"<p>If set up properly, the view listens to model changes and renders the template when required. The Masterportal uses Underscore.js for templating. To show how this SHOULD be implemented, the model from above is used to set up the MV* in the following example.</p> <p>ExampleTemplate:</p> <pre><code>&lt;!DOCTYPE html&gt;\n&lt;div class=\"title\"&gt;&lt;%= exampleTitle %&gt;&lt;/div&gt;\n&lt;div class=\"text\"&gt;&lt;%= exampleText %&gt;&lt;/div&gt;\n</code></pre> <p>ExampleView:</p> <pre><code>import ExampleTemplate from \"text-loader!./template.html\";\nimport ExampleModel from \"./model\";\n\nconst ExampleView = Backbone.View.extend(/** @lends ExampleView.prototype */{\n    /**\n     * @class ExampleView\n     * @extends Backbone.View\n     * @memberof Example\n     * @constructs\n     * @listens ExampleModel#changeExampleText\n     */\n    initialize: function () {\n        this.model = new ExampleModel();\n\n        this.listenTo(this.model, {\n            \"change:currentLng\": this.render\n        });\n\n        this.render();\n    },\n\n    /**\n     * renders the view\n     * @param {ExampleModel} model the model of the view\n     * @param {Boolean} value the values of the changes made to the model\n     * @returns {Void}  -\n     */\n    render: function () {\n        const template = _.template(ExampleTemplate),\n            params = this.model.toJSON();\n\n        this.$el.html(template(params));\n\n        return this;\n    }\n});\n\nexport default ExampleView;\n</code></pre>"},{"location":"User/Misc/translations/#unit-tests","title":"Unit Tests","text":"<p>i18next provides a test mode for unit testing. In test mode, no real translation will be provided, and no files are loaded. Instead, i18next simply responds with the given key.</p> <p>For Masterportal unit testing, <code>chai</code> is used as an assertion library.</p> <p>To set up i18next for unit testing, initialize it in the language <code>\"cimode\"</code>. This sets i18next to test mode.</p> <pre><code>before(function () {\n    i18next.init({\n        lng: \"cimode\",\n        debug: false\n    });\n    model = new Model();\n});\n</code></pre>"},{"location":"User/Portal-Config/config.js/","title":"config.js","text":"<p>The <code>config.js</code> contains Masterportal configuration not directly related to UI or layers. For example, paths to other configuration files belong here. This file is usually placed next to the <code>index.html</code> and <code>config.json</code> files.</p> <p>In the following, all configuration options are described. For all configuration options of type <code>object</code>, further nested options are linked and described in detail after the main table. You may also refer to this config.js example file.</p> Name Required Type Default Description Example layerConf yes String Path to the services.json file containing all available WMS layers and WFS feature types. The path is relative to js/main.js. <code>https://geodienste.hamburg.de/lgv-config/services-internet.json\"</code> namedProjections yes String[] Definition of the usable coordinate systems. See syntax definition for details.. <code>[[\"EPSG:25832\", \"+title=ETRS89/UTM 32N +proj=utm +zone=32 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs\"]]</code> restConf yes String Path to the rest-services.json file describing further services, e.g. print service, WPS, CSW. The path is relative to js/main.js. <code>https://geodienste.hamburg.de/lgv-config/rest-services-internet.json\"</code> styleConf yes String Path to the style.json file describing vector layer (WFS) styles. The path is relative to js/main.js. <code>https://geodienste.hamburg.de/lgv-config/style.json\"</code> addons no String[] <code>[]</code> List of names for custom modules. The modules are to be placed in the folder <code>/addons/</code>, with their entry points being defined in the <code>addonsConf.json</code>. <code>[\"myAddon1\", \"myAddon2\"]</code> alerting no alerting <code>{\"category\": \"alert-info\", \"isDismissable\": true, \"isConfirmable\": false, \"position\": \"top-center\", \"fadeOut\": null}</code> Overrides the alert module's default values. {fadeOut: 6000} cameraParameter no cameraParameter Initial camera parameter cesiumParameter no cesiumParameter Cesium flags cswId no String <code>\"3\"</code> Reference to a CSW interface used to retrieve layer information. The ID will be resolved to a service defined in the rest-services.json file. <code>\"my CSW-ID\"</code> defaultToolId no String <code>\"gfi\"</code> The tool with the given ID will be active when no other tool is active. \"filter\" layerSelector no layerSelector Module to configure interactions with the layertree and the map, executed on a defined event. featureViaURL no featureViaURL Optional configuration for the URL parameter <code>featureViaURL</code>. See urlParameter for details. Implemented for treeTypes light and custom. footer no footer If set, a footer is shown and configured with this object. gfiWindow no String <code>\"detached\"</code> Deprecated in the next major release. Please use the attribute \"Portalconfig.menu.tool.gfi.desktopType\" of the config.json instead. Display type and attribute information for all layer types. attached: the attribute information window is opened at click position detached: the attribute information window is opened at the top right of the map; a marker is set to the click position. <code>\"attached\"</code> ignoredKeys no String[] <code>[\"BOUNDEDBY\", \"SHAPE\", \"SHAPE_LENGTH\", \"SHAPE_AREA\", \"OBJECTID\", \"GLOBALID\", \"GEOMETRY\", \"SHP\", \"SHP_AREA\", \"SHP_LENGTH\",\"GEOM\"]</code> List of attribute names to be ignored for attribute information lists of all layer types. Only used with \"gfiAttributes\": \"showAll\". <code>[\"BOUNDEDBY\", \"SHAPE\", \"SHAPE_LENGTH\", \"SHAPE_AREA\", \"OBJECTID\", \"GLOBALID\", \"GEOMETRY\", \"SHP\", \"SHP_AREA\", \"SHP_LENGTH\",\"GEOM\"]</code> infoJson no String <code>\"info.json\"</code> Path to the <code>info.json</code> file containing additional information on snippets. The path is relative to the index.html. <code>\"info.json\"</code> inputMap no Object <code>{}</code> If this object is set, and its field <code>setMarker</code> is set to true, the Masterportal is configured as input element for data. In that case, each click sets a Map Marker and communicates the coordinates via remoteInterface in the chosen coordinate reference system. <code>{setMarker: true, targetProjection: \"EPSG:4326\", setCenter: false}</code> inputMap.setCenter no Boolean <code>false</code> Center on a marker after producing it? <code>setCenter: true</code> inputMap.setMarker no Boolean <code>false</code> Flag to activate the 'setMarker' functionality. <code>setMarker: true</code> inputMap.targetProjection no String <code>\"EPSG:25832\"</code> The target coordinate reference system. Coordinates will be translated to it before being communicated via remoteInterface. <code>targetprojection: \"EPSG:4326\"</code> login no Object <code>{}</code> Activates the Login module. This displays a login button in the toolbar that allows login and logout with an IDM server, e.g. keycloak, as configured. mapInteractions no mapInteractions Overrides the ol map interactions. Provides further configuration possibilities for control behaviour and keyboardEventTarget. mapMarker no mapMarker Overrides the map marker module's default values. Useful for 3D markers since OpenLayers's overlays can not be displayed in 3D mode. For this, the map marker has to be defined as vector layer. metaDataCatalogueId no String <code>\"2\"</code> URL to the metadata catalog linked to in the layer information window. The ID is resolved to a service of the rest-services.json file. Note: This attribute is only necessary, when no \"show_doc_url\" is configured in the metadata dataset in the services.json. The url can either be set globally (config.js) or layer-specific(services.json). <code>\"MetaDataCatalogueUrl\"</code> metadata no metadata Allows configuration of which metadata URLs are to be resolved via proxy. mouseHover no mouseHover Activates the MouseHover feature for vector layers, both WFS and GeoJSON. For per-layer configuration, see the config.json's section Themenconfig.Fachdaten.Layer. <code>true</code> obliqueMap no Boolean <code>false</code> If set to <code>true</code>, an oblique map layer is created. An additional oblique layer must be defined. portalConf no String <code>\"config.json\"</code> Path to the portal's <code>config.json</code> file. You may also enter a node; in that case the taken path is controlled by the urlParameter <code>config</code>. Direct path: \"../masterTree/config.json\"; Node: \"../../portal/master/\". In the node scenario, a query parameter like <code>config=config.json</code> must exist in the URL. postMessageUrl no String <code>\"http://localhost:8080\"</code> URL the portal is supposed to post messages to and receive messages from with the <code>postMessage</code> feature. \"http://localhost:8080\" proxyHost no String Host name of a remote proxy with CORS configured to support the portal's domain, among others. <code>\"https://proxy.example.com\"</code> quickHelp no Object <code>{}</code> Activates the QuickHelp module. This displays a window containing help text for supported functions of the modules. Available for the layer tree (CustomTree), the search bar (Searchbar) and the routing tool (RoutingTool). remoteInterface no remoteInterface Optional remote interface configuration. scaleLine no Boolean <code>false</code> Controls whether a scale line is displayed at the bottom right of the map. To activate scale selection (as a ScaleSwitcher) use the configuration parameter <code>isDisplayInFooter</code> in config.json. <code>true</code> simpleMap no Boolean <code>false</code> Deprecated in the next major release. Please use the parameter <code>simpleMap</code> as part of the configuration of the <code>saveSelection</code> tool in the config.json. Adds a SimpleMap URL to the <code>Save selection</code> dialogue. When calling this URL, the menu bar, layer tree, and map controls are deactivated. Not implemented for tree type \u201elight\u201c. <code>false</code> startingMap3D bi Boolean <code>false</code> Controls whether the map should start in 3D mode. tree no tree uiStyle no String <code>\"default\"</code> Sets the control element layout. <code>table</code> wfsImgPath no String Path to the folder holding images for the WFS styles. The path is relative to js/main.js. <code>https://geodienste.hamburg.de/lgv-config/img/\"</code> wpsID no String <code>\"\"</code> Reference to a WPS interface used in various modules. The ID is resolved to a service defined in the rest-services.json file. <code>\"\"</code> zoomToFeature no zoomToFeature Deprecated in the next major release. Please use zoomTo instead. Optional configuration of the URL query parameter <code>featureid</code>. For details, see urlParameter. zoomTo no zoomTo[] Configuration for the URL query parameters <code>zoomToFeatureId</code> and <code>zoomToGeometry</code>. layerInformation no layerInformation Configuration for the layerInformation window. vuetify no String undefined Path to the optional instance of the vuetify UI library. e.g. portal or addon specific. <code>addons/cosi/vuetify/index.js</code> layerSequence no layerSequence Configuration for layerSequence."},{"location":"User/Portal-Config/config.js/#alerting","title":"alerting","text":"Name Required Type Default Description fetchBroadcastUrl no String <code>false</code> The alerting module will initially use a linked configuration file from this URL, if set. localStorageDisplayedAlertsKey no String <code>\"displayedAlerts\"</code> Arbitrary key used to store information regarding the alerting module in the browser's local storage."},{"location":"User/Portal-Config/config.js/#cameraparameter","title":"cameraParameter","text":"<p>Cesium Scene camera settings in 3D mode. Deprecated in the next major release. Please use cesiumParameter instead.</p> Name Required Type Default Description heading no Number Camera's initial heading in radians tilt no Number Camera's initial tile in radians altitude no Number Camera's initial height in meters"},{"location":"User/Portal-Config/config.js/#cesiumparameter","title":"cesiumParameter","text":"<p>Cesium Scene settings in 3D mode. For more attributes see Scene</p> Name Required Type Default Description camera no camera Cesium Scene camera settings in 3D mode. fog no fog Cesium Scene fog settings in 3D mode. fxaa no Boolean <code>true</code> activates fast approximate anti-aliasing globe no globe Cesium Scene globe settings in 3D mode. maximumScreenSpaceError no Number <code>2.0</code> Detail level in which terrain/raster tiles are fetched. 4/3 is the highest quality level. tileCacheSize no Number <code>100</code> terrain/raster tile cache size <p>Example</p> <pre><code>{\n    \"camera\": {\n        \"altitude\": 127,\n        \"heading\": -1.2502079000000208,\n        \"tilt\": 45\n    },\n    \"fog\": {\n        \"enabled\": true\n    },\n    \"fxaa\": true,\n    \"globe\": {\n        \"enableLighting\": true\n    },\n    \"maximumScreenSpaceError\": 2,\n    \"tileCacheSize\": 20,\n}\n</code></pre>"},{"location":"User/Portal-Config/config.js/#cesiumparametercamera","title":"cesiumParameter.camera","text":"<p>Cesium Scene camera settings in 3D mode. The camera is defined by a position, orientation, and view frustum. For more attributes see Scene</p> Name Required Type Default Description altitude no Number Camera's initial height in meters heading no Number Camera's initial heading in radians tilt no Number Camera's initial tile in radians <p>Example</p> <pre><code>{\n    \"camera\": {\n        \"altitude\": 127,\n        \"heading\": -1.2502079000000208,\n        \"tilt\": 45\n    }\n}\n</code></pre>"},{"location":"User/Portal-Config/config.js/#cesiumparameterfog","title":"cesiumParameter.fog","text":"<p>Cesium Scene fog settings in 3D mode. Blends the atmosphere to geometry far from the camera for horizon views. For more attributes see Scene</p> Name Required Type Default Description enabled no Boolean <code>false</code> True if fog is enabled. <p>Example</p> <pre><code>{\n    \"fog\": {\n        \"enabled\": true\n    }\n}\n</code></pre>"},{"location":"User/Portal-Config/config.js/#cesiumparameterglobe","title":"cesiumParameter.globe","text":"<p>Cesium Scene globe settings in 3D mode. The globe rendered in the scene, including its terrain and imagery layers. For more attributes see Scene</p> Name Required Type Default Description enableLighting no Boolean <code>false</code> Activates light effects on the map based on the sun's position. <p>Example</p> <pre><code>{\n    \"globe\": {\n        \"enableLighting\": true\n    }\n}\n</code></pre>"},{"location":"User/Portal-Config/config.js/#footer","title":"footer","text":"Name Required Type Default Description urls no urls[] Array of URL configuration objects. showVersion no Boolean <code>false</code> If <code>true</code>, the Masterportal version number is included in the footer. footerInfo no footerInfo[] Array of information configuration objects. mobileFooterInfoToggler no Boolean <code>false</code> If <code>true</code>, it is possible to toggle the footer info in mobile version."},{"location":"User/Portal-Config/config.js/#footerurls","title":"footer.urls","text":"Name Required Type Default Description alias no String <code>\"Landesbetrieb Geoinformation und Vermessung\"</code> Link text for desktop applications alias_mobil no String <code>\"LGV\"</code> Link text for mobile applications bezeichnung no String <code>\"Kartographie und Gestaltung: \"</code> Link prefix url no String the URL the <code>alias</code> (or <code>alias_mobile</code>) text links to, e.g. <code>\"https://example.com/\"</code>. You may also link to mail creation with e.g. <code>\"mailto:my_mail@example.com\"</code> toolModelId no String <code>\"SdpDownload\"</code> The id of a module to be opened on clicking the link. Do not include a URL for such cases. <p>Example:</p> <pre><code>{\n    \"footer\": {\n        \"urls\": [\n            {\n                \"bezeichnung\": \"Cartography and design: \",\n                \"url\": \"https://geoinfo.hamburg.de/\",\n                \"alias\": \"Landesbetrieb Geoniformation und Vermessung\",\n                \"alias_mobil\": \"LGV\"\n            },\n            {\n                \"bezeichnung\": \"\",\n                \"url\": \"http://www.hamburg.de/bsu/timonline\",\n                \"alias\": \"Map inconsistencies\"\n            },\n            {\n                \"bezeichnung\": \"\",\n                \"url\": \"\",\n                \"alias\": \"SDP Download\",\n                \"toolModelId\": \"sdpdownload\"\n            }\n        ],\n        \"showVersion\": true\n    }\n}\n</code></pre>"},{"location":"User/Portal-Config/config.js/#footerfooterinfo","title":"footer.footerInfo","text":"Name Required Type Default Description title yes String Title of the information tab. description no String Text displayed under the title. subtexts no subtexts[] Array of subtext configuration objects."},{"location":"User/Portal-Config/config.js/#footerfooterinfosubtexts","title":"footer.footerInfo.subtexts","text":"Name Required Type Default Description subtitle yes String Subtitle of the subtext. text no String Text displayed under the subtitle. <p>Beispiel:</p> <pre><code>{\n    \"footerInfo\": [\n        {\n            \"title\": \"Contact\",\n            \"description\": \"Text under the titel\",\n            \"subtexts\": [\n                {\n                    \"subtitle\": \"Postal address\",\n                    \"text\": \"Max-Mustermann-Str. 1 &lt;br&gt; 12345 City &lt;br&gt; Germany\"\n                },\n                {\n                    \"subtitle\": \"Phone and fax\",\n                    \"text\": \"Tel: +49 (0) 1234 56789 &lt;br&gt; Fax: +49 (0) 1234 5678910\"\n                }\n            ]\n        },\n        {\n            \"title\": \"Privacy\",\n            \"subtexts\": [\n                {\n                    \"subtitle\": \"Subtitle\",\n                    \"text\": \"Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt...\"\n                }\n            ]\n        }\n    ]\n}\n</code></pre>"},{"location":"User/Portal-Config/config.js/#login","title":"login","text":"<p>This module allows the user to login with an OIDC server. The retrieved access token is stored in cookies which can be used by the backend to deliver user-specific data (e.g. layers). Since the cookies are technically required to implement the login functionality, there is not corresponding cookie notice.</p> Name Required Type Default Description oidcAuthorizationEndpoint yes String The oidc auth endpoint, e.g. \"https://idm.domain.de/auth/realms/REALM/protocol/openid-connect/auth\". oidcTokenEndpoint yes String The oidc token endpoint, e.g. \"https://idm.domain.de/auth/realms/REALM/protocol/openid-connect/token\". oidcClientId yes String The oidc client, e.g. \"masterportal\" (must be created in your IDM, e.g. keycloak). oidcScope yes String The scope used for oidc, defaults to \"profile email openid\". oidcRedirectUri yes String The url to redirect the oidc process to - after login. interceptorUrlRegex yes String An regexp pattern that allows to specify urls the oidc token will be attached to. <p>Make sure in keycloak the client is configured as follows:</p> <pre><code>Access Type: public\nStandard Flow Enabled: ON\nValid Redirect URIs: &lt;PORTAL URL, e.g. https://localhost/*&gt;\nWeb Origins: &lt;PORTAL HOST, e.g. https://localhost&gt;\n</code></pre> <p>Specific ports are not allowed ports here. Especially, ports on localhost, e.g. <code>localhost:9001</code> will not work with keycloak since ports are not accepted in web origins.</p> <p>In the section <code>OpenID Connect Compatibility Modes</code> activate <code>Use Refresh Tokens</code>. In the section <code>Advanced Settings</code> set <code>Proof Key for Code Exchange Code Challenge Method</code> to <code>S256</code>.</p> <p>Example:</p> <pre><code>{\n  \"login\": {\n      \"oidcAuthorizationEndpoint\": \"https://idm.DOMAIN.de/auth/realms/REALM/protocol/openid-connect/auth\",\n      \"oidcTokenEndpoint\": \"https://idm.DOMAIN.de/auth/realms/REALM/protocol/openid-connect/token\",\n      \"oidcClientId\": \"masterportal\",\n      \"oidcScope\": \"profile email openid\",\n      \"oidcRedirectUri\": \"https://localhost/portal/basic/\",\n      \"interceptorUrlRegex\": \"https?://localhost.*\" // add authorization to all URLs that match the given regex\n  }\n}\n</code></pre>"},{"location":"User/Portal-Config/config.js/#mapinteractions","title":"mapInteractions","text":"Name Required Type Default Description interactionModes no Object <code>{dragPan: false, altShiftDragRotate: false, pinchRotate: false}</code> Interaction settings for the ol default interactions. If not set, the default setting is used. keyboardEventTarget no Object/false <code>false</code> possibility to set the keyboard event target for the ol map e.g keyboardEventTarget: document <p>Example:</p> <pre><code>{\n    \"mapInteractions\": {\n        \"interactionModes\": {\"dragPan\": false, \"altShiftDragRotate\": true, \"pinchRotate\": false, \"dragZoom\": true},\n        \"keyboardEventTarget\": false\n    }\n}\n</code></pre>"},{"location":"User/Portal-Config/config.js/#mapmarker","title":"mapMarker","text":"Name Required Type Default Description pointStyleId no String <code>\"defaultMapMarkerPoint\"</code> StyleId to refer to a <code>style.json</code> point style. If not set, the <code>img/mapMarker.svg</code> is used. polygonStyleId no String <code>\"defaultMapMarkerPolygon\"</code> StyleId to refer to a <code>style.json</code> polygon style. <p>Example:</p> <pre><code>{\n    \"mapMarker\": {\n        \"pointStyleId\": \"customMapMarkerPoint\",\n        \"polygonStyleId\": \"customMapMarkerPolygon\"\n    }\n}\n</code></pre>"},{"location":"User/Portal-Config/config.js/#mousehover","title":"mouseHover","text":"Name Required Type Default Description minShift no Integer <code>5</code> Minimum mouse position movement required to render a new tooltip; in pixels. numFeaturesToShow no Integer <code>2</code> Maximum amount of element information per tooltip; when exceeded, an information text informs the user of cut content. infoText no String <code>\"(Further objects. Please zoom.)\"</code> Information text shown when <code>numFeaturesToShow</code> is exceeded. highlightOnHover no Boolean false If hovered features should be highlighted highlightVectorRulesPolygon no Object Specify the fill color and outline color and stroke width for highlighting the polygon features as well as a zoom parameter. highlightVectorRulesPointLine no Object Specify outline color and stroke width for highlighting lines and fill color and scale factor for highlighting points as well as a zoom parameter. <p>Example:</p> <pre><code>{\n    \"mouseHover\": {\n        \"numFeaturesToShow\": 2,\n        \"infoText\": \"The Info Text\",\n        \"highlightOnHover\": true,\n        \"highlightVectorRulesPolygon\": {\n            \"fill\": {\n                \"color\": [255, 255, 255, 0.5]\n            },\n            \"stroke\": {\n                \"width\": 4,\n                \"color\": [255, 0, 0, 0.9]\n            }\n        },\n        \"highlightVectorRulesPointLine\": {\n            \"stroke\": {\n                \"width\": 8,\n                \"color\": [255, 0, 255, 0.9]\n            },\n            \"image\": {\n                \"scale\": 2\n            }\n        }\n    },\n}\n</code></pre>"},{"location":"User/Portal-Config/config.js/#mousehoverhighlightvectorrulespolygon","title":"mouseHover.highlightVectorRulesPolygon","text":"<p>Specify the fill color and outline color and stroke width for highlighting the polygon features as well as a zoom level.</p> Name Required Type Default Description Expert fill no fill Possible setting: color false stroke no stroke Possible setting: width false"},{"location":"User/Portal-Config/config.js/#mousehoverhighlightvectorrulespolygonfill","title":"mouseHover.highlightVectorRulesPolygon.fill","text":"Name Required Type Default Description Expert color no Float[] [255, 255, 255, 0.5] Possible setting: color (RGBA) false <pre><code>\"fill\": { \"color\": [215, 102, 41, 0.9] }\n</code></pre>"},{"location":"User/Portal-Config/config.js/#mousehoverhighlightvectorrulespolygonstroke","title":"mouseHover.highlightVectorRulesPolygon.stroke","text":"Name Required Type Default Description Expert width no Integer 1 Possible setting: width false color no Float[] [255, 0, 0, 0.9] Possible setting: color (RGBA) false <pre><code>\"stroke\": { \"width\": 4 , \"color\": [255, 0, 255, 0.9]}\n</code></pre>"},{"location":"User/Portal-Config/config.js/#mousehoverhighlightvectorrulespointline","title":"mouseHover.highlightVectorRulesPointLine","text":"<p>Specify outline color and stroke width for highlighting lines and fill color and scale factor for highlighting points. Also a zoom level.</p> Name Required Type Default Description Expert fill no fill Possible setting: color false stroke no stroke Possible setting: width false image no image Possible setting: scale false"},{"location":"User/Portal-Config/config.js/#mousehoverhighlightvectorrulespointlinefill","title":"mouseHover.highlightVectorRulesPointLine.fill","text":"Name Required Type Default Description Expert color no Float[] [255, 255, 255, 0.5] Possible setting: color (RGBA) false <pre><code>\"fill\": { \"color\": [215, 102, 41, 0.9] }\n</code></pre>"},{"location":"User/Portal-Config/config.js/#mousehoverhighlightvectorrulespointlinestroke","title":"mouseHover.highlightVectorRulesPointLine.stroke","text":"Name Required Type Default Description Expert width no Integer 1 Possible setting: width false color no Float[] [255, 255, 255, 0.5] Possible setting: color (RGBA) false <pre><code>\"stroke\": { \"width\": 4 , \"color\": [255, 0, 255, 0.9]}\n</code></pre>"},{"location":"User/Portal-Config/config.js/#mousehoverhighlightvectorrulespointlineimage","title":"mouseHover.highlightVectorRulesPointLine.image","text":"Name Required Type Default Description Expert scale no Integer 1.5 Possible setting: scale false <pre><code>\"image\": { \"scale\": 2}\n</code></pre>"},{"location":"User/Portal-Config/config.js/#portallanguage","title":"portalLanguage","text":"Name Required Type Default Description enabled yes Boolean <code>true</code> Controls whether a button to switch the portal's language is provided. debug no Boolean <code>false</code> Controls whether debug information regarding translations is logged to the console. languages yes Object <code>{ de: \"deutsch\", en: \"englisch\" }</code> Language abbreviations. Please mind that matching locale files must exist. fallbackLanguage no String <code>\"de\"</code> Fallback language used if contents are not available in the currently selected language. changeLanguageOnStartWhen no String[] <code>[\"querystring\", \"localStorage\", \"navigator\", \"htmlTag\"]</code> Order of user language detection. See i18next browser language detection documentation for details. loadPath no String <code>\"/locales/{{lng}}/{{ns}}.json\"</code> Path to load language files from, or a function returning such a path: <code>function(lngs, namespaces) { return path; }</code>. <code>lng</code> and <code>ns</code> are read from the path, if given, as if from a static path. You may also provide a URL like <code>\"https://localhost:9001/locales/{{lng}}/{{ns}}.json\"</code>. See i18next http backend documentation for details. <p>Example:</p> <pre><code>{\n\"portalLanguage\": {\n        \"enabled\": true,\n        \"debug\": false,\n        \"languages\": {\n            \"de\": \"deutsch\",\n            \"en\": \"englisch\"\n        },\n        \"fallbackLanguage\": \"de\",\n        \"changeLanguageOnStartWhen\": [\"querystring\", \"localStorage\", \"navigator\", \"htmlTag\"],\n        \"loadPath\": \"/locales/{{lng}}/{{ns}}.json\"\n    }\n}\n</code></pre>"},{"location":"User/Portal-Config/config.js/#quickhelp","title":"quickHelp","text":"<p>See quickHelp for extended documentation.</p> Name Required Type Default Description imgPath no String <code>\"/\"</code> An absolute or relative path to the folder containing the quick help images. searchbarAllgemeines1 no String <code>\"allgemein.png\"</code> First quick help image regarding the Searchbar, belonging to the chapter \"General information\". The image must exist in the <code>imgPath</code> folder. searchbarAllgemeines2 no String <code>\"allgemein_2.png\"</code> Second quick help image regarding the Searchbar, belonging to the chapter \"General information\". The image must exist in the <code>imgPath</code> folder. searchbarAllgemeines3 no String <code>\"allgemein_3.png\"</code> Third quick help image regarding the Searchbar, belonging to the chapter \"General information\". The image must exist in the <code>imgPath</code> folder. searchbarFlurstueckssuche no String <code>\"allgemein_4.png\"</code> Quick help image regarding the Searchbar, belonging to the chapter \"Parcel search\". The image must exist in the <code>imgPath</code> folder. aufbau1 no String <code>\"themen.png\"</code> First quick help image regarding the layer tree (CustomTree), belonging to the structure chapter. The image must exist in the <code>imgPath</code> folder. aufbau2 no String <code>\"themen_2.png\"</code> Second quick help image regarding the layer tree (CustomTree), belonging to the structure chapter. The image must exist in the <code>imgPath</code> folder. routingTool1 no String <code>\"routing_1.png\"</code> First quick help image regarding the routing tool (RoutingTool). The image must exist in the <code>imgPath</code> folder. routingTool2 no String <code>\"routing_2.png\"</code> Second quick help image regarding the routing tool (RoutingTool). The image must exist in the <code>imgPath</code> folder. routingTool3 no String <code>\"routing_3.png\"</code> Third quick help image regarding the routing tool (RoutingTool). The image must exist in the <code>imgPath</code> folder. routingTool4 no String <code>\"routing_4.png\"</code> Fourth quick help image regarding the routing tool (RoutingTool). The image must exist in the <code>imgPath</code> folder. routingTool5 no String <code>\"routing_5.png\"</code> Fifth quick help image regarding the routing tool (RoutingTool). The image must exist in the <code>imgPath</code> folder. routingTool6 no String <code>\"routing_6.png\"</code> Sixth quick help image regarding the routing tool (RoutingTool). The image must exist in the <code>imgPath</code> folder. routingTool7 no String <code>\"routing_7.png\"</code> Seventh quick help image regarding the routing tool (RoutingTool). The image must exist in the <code>imgPath</code> folder. routingTool8 no String <code>\"routing_8.png\"</code> Eighth quick help image regarding the routing tool (RoutingTool). The image must exist in the <code>imgPath</code> folder. routingTool9 no String <code>\"routing_9.png\"</code> Nineth quick help image regarding the routing tool (RoutingTool). The image must exist in the <code>imgPath</code> folder. routingTool10 no String <code>\"routing_10.png\"</code> Tenth quick help image regarding the routing tool (RoutingTool). The image must exist in the <code>imgPath</code> folder. routingTool11 no String <code>\"routing_11.png\"</code> Eleventh quick help image regarding the routing tool (RoutingTool). The image must exist in the <code>imgPath</code> folder. routingTool12 no String <code>\"routing_12.png\"</code> Twelfth quick help image regarding the routing tool (RoutingTool). The image must exist in the <code>imgPath</code> folder. routingTool13 no String <code>\"routing_13.png\"</code> Thirteenth quick help image regarding the routing tool (RoutingTool). The image must exist in the <code>imgPath</code> folder. routingTool14 no String <code>\"routing_14.png\"</code> Fourteenth quick help image regarding the routing tool (RoutingTool). The image must exist in the <code>imgPath</code> folder. routingTool15 no String <code>\"routing_15.png\"</code> Fifteenth quick help image regarding the routing tool (RoutingTool). The image must exist in the <code>imgPath</code> folder. routingTool16 no String <code>\"routing_16.png\"</code> Sixteenth quick help image regarding the routing tool (RoutingTool). The image must exist in the <code>imgPath</code> folder."},{"location":"User/Portal-Config/config.js/#remoteinterface","title":"remoteInterface","text":"Name Required Type Default Description postMessageUrl no String <code>\"http://localhost:8080\"</code> URL the portal will post to and receive messages from with the <code>postMessage</code> feature. <p>Example:</p> <pre><code>{\n    \"remoteInterface\": {\n        \"postMessageUrl\": \"http://localhost:8080\"\n    }\n}\n</code></pre>"},{"location":"User/Portal-Config/config.js/#tree","title":"tree","text":"<p>Settings for generating the tree automatically. Only works if treeType=\"default\" in config.json.</p> Name Required Type Default Description orderBy no enum[\"Opendata\", \"Inspire\", \"Beh\u00f6rde\"] <code>\"Opendata\"</code> Category the layer tree is sorted by initially. layerIDsToIgnore no Array Array of <code>services.json</code> layer ids not to be shown in the layer tree. layerIDsToStyle no layerIDsToStyle[] Special implementation for a HVV (Hamburg public transportation) service. Contains objects to request various styles of a layer id. metaIDsToMerge no String[] All layers found in the <code>services.json</code> regarding these meta IDs are merged to a single layer of the layer tree. metaIDsToIgnore no String[] All <code>services.json</code> layers listed will not be shown in the layer tree. isFolderSelectable no Boolean <code>true</code> Globally sets whether a selection box is provided on folders that de-/activates all layers in it. An override per element exists, see config.json."},{"location":"User/Portal-Config/config.js/#treelayeridstostyle","title":"tree.layerIDsToStyle","text":"Name Required Type Default Description id no Sring a <code>services.json</code> layer's id styles no String/String[] Style to be used as string; if multiple styles are to be used, they are listed in an array. name no String/String[] Name to be used as string; if multiple names are to be used, they are listed in an array. legendUrl no String/String[] Legend image URL to be used as string; if multiple legend images are to be used, their URLs are listed in an array. <p>Example:</p> <pre><code>{\n    \"tree\": {\n        \"orderBy\": \"Opendata\",\n        \"layerIDsToIgnore\": [\"1912\", \"1913\"],\n        \"layerIDsToStyle\": [\n            {\n                \"id\": \"1935\",\n                \"styles\": [\"geofox_Faehre\", \"geofox-bahn\", \"geofox-bus\", \"geofox_BusName\"],\n                \"name\": [\"F\u00e4hrverbindungen\", \"Bahnlinien\", \"Buslinien\", \"Busliniennummern\"],\n                \"legendURL\": [\"http://geoportal.metropolregion.hamburg.de/legende_mrh/hvv-faehre.png\", \"http://geoportal.metropolregion.hamburg.de/legende_mrh/hvv-bahn.png\", \"http://geoportal.metropolregion.hamburg.de/legende_mrh/hvv-bus.png\", \"http://87.106.16.168/legende_mrh/hvv-bus.png\"]\n            }\n        ],\n        \"metaIDsToMerge\": [\n            \"FE4DAF57-2AF6-434D-85E3-220A20B8C0F1\"\n        ],\n        \"metaIDsToIgnore\": [\n            \"09DE39AB-A965-45F4-B8F9-0C339A45B154\"\n        ],\n        \"isFolderSelectable\": false\n    }\n}\n</code></pre>"},{"location":"User/Portal-Config/config.js/#metadata","title":"metadata","text":"Name Required Type Default Description useProxy no String[] Deprecated in the next major release. GDI-DE recommends setting CORS headers on the required services instead. Describes which metadata URLs are to be requested via proxy. The request will contain the requested URL as path, with dots replaced by underscores. <p>Example:</p> <pre><code>{\n    \"metadata\": {\n        \"useProxy\": [\n            \"https://metaver.de/csw\"\n        ]\n    }\n}\n</code></pre>"},{"location":"User/Portal-Config/config.js/#zoomto","title":"zoomTo","text":"Name Required Type Default Description <p>|id|yes|enum[\"zoomToFeatureId\", \"zoomToGeometry\"]||Id of the URL query parameter the configuration refers to.| |layerId|yes|String||Id of the layer the feature should be fetched from.| |property|yes|String||Name of the property the features should be filtered by.| |addFeatures|no|Boolean|true|Specifies whether the desired features should be added to the map in a separate layer.| |allowedValues|no|Array||Only relevant when <code>id</code> equal <code>zoomToGeometry</code>. Further filters the values allowed in the URL query parameters.| |styleId|no|String||Only relevant when <code>id</code> equal <code>zoomToFeatureId</code>. Id of the <code>styleObject</code> that should be used to style the features retrieved from the service.|</p> <p>Example:</p> <pre><code>{\n    zoomTo: [\n        {\n            id: \"zoomToGeometry\",\n            layerId: \"1692\",\n            property: \"bezirk_name\",\n            allowedValues: [\n                \"ALTONA\",\n                \"HARBURG\",\n                \"HAMBURG-NORD\",\n                \"BERGEDORF\",\n                \"EIMSB\u00dcTTEL\",\n                \"HAMBURG-MITTE\",\n                \"WANDSBEK\"\n            ]\n        },\n        {\n            id: \"zoomToFeatureId\",\n            layerId: \"4560\",\n            property: \"flaechenid\",\n            styleId: \"location_eventlotse\"\n        }\n    ]\n}\n</code></pre>"},{"location":"User/Portal-Config/config.js/#zoomtofeature","title":"zoomToFeature","text":"<p>Deprecated in the next major release. Please use zoomTo instead.</p> Name Required Type Default Description imgLink yes String Marker link. Deprecated in the next major release. wfsId yes String ID to a WFS layer of which features to a position are requested from. attribute yes String Attribute by which the WFS is filtered. styleId no String A styleId from the <code>styles.json</code> may be supplied to override the map marker's design setFeature no Boolean yes useProxy no Boolean <code>false</code> Deprecated in the next major release. GDI-DE recommends setting CORS headers on the required services instead. Whether the service URL is to be requested via proxy. The request will contain the requested URL as path, with dots replaced by underdashes. addFeatures no Boolean true Specifies whether the desired features should be added to the map in a separate layer. <p>Example:</p> <pre><code>{\n    \"zoomtofeature\": {\n        \"attribute\": \"flaechenid\",\n        \"wfsId\": \"4560\",\n        \"styleId\": \"location_eventlotse\"\n    }\n}\n</code></pre>"},{"location":"User/Portal-Config/config.js/#zoomtogeometry","title":"zoomToGeometry","text":"<p>Deprecated in the next major release. Please use zoomTo instead.</p> Name Required Type Default Description imgLink yes String Marker link. Deprecated in the next major release. layerId yes String <code>\"123456789\"</code> Id of the WFS layer the geometry is requested from. attribute yes String <code>\"district_name\"</code> Attribute by which the WFS is filtered. geometries yes String <code>[\"DISTRICT1\", \"DISTRICT2\"]</code> Contains the geometries to be filtered from the WFS. <p>Example:</p> <pre><code>{\n    \"zoomToGeometry\": {\n        \"layerId\": \"123456789\",\n        \"attribute\": \"district_name\",\n        \"geometries\": [\"DISTRICT1\", \"DISTRICT2\"]\n    }\n}\n</code></pre>"},{"location":"User/Portal-Config/config.js/#layerselector","title":"layerSelector","text":"<p>Module to configure interactions with the layertree and the map, executed on a defined event.</p> Name Required Type Default Description events yes Object[] Events to be executed from other modules to select or add layers in layertree. default no Object Object to overwrite the missing parts in the events objects. <p>Example:</p> <pre><code>{\n    \"events\": [\n        {\n            \"event\": \"modulname\",\n            \"deselectPreviousLayers\": \"always\",\n            \"layerIds\": [\"1001\"]\n        },\n        {\n            \"event\": \"modulname\",\n            \"deselectPreviousLayers\": \"always\",\n            \"layerIds\": [\"1000\"]\n        }\n    ],\n    \"default\": {\n        \"openFolderForLayerIds\": []\n    }\n}\n</code></pre>"},{"location":"User/Portal-Config/config.js/#layerselectorevents","title":"layerSelector.events","text":"<p>Array of Objects. In a single object, interactions with the layertree and the map can be configured. Those interactions are executed on a defined event.</p> Name Required Type Default Description event yes String The name of the event that can trigger actions. For possible values and their meanings see the table below. showLayerId no String Layer ID of the layer to be shown in the layer tree. Opens the layer tree and extends all correspoding folders at the location of the defined layer. Only in destop mode. layerIds no String[] Layer IDs to select in the layer tree. openFolderForLayerIds no String[] List of Layer IDs to open their folders in the layer tree. extent no Integer[] Bounding Box to zoom to when this event is triggered. deselectPreviousLayers no String always Deselects all selected layers if it has the value 'always'. For value 'none' nothing happens. <p>Example:</p> <pre><code>{\n    \"events\": [{\n        \"event\": \"measure_geometry\",\n        \"showLayerId\": \"1234\",\n        \"layerIds\": [\"2345\", \"3456\", \"4567\"],\n        \"openFolderForLayerIds\": [\"2345\"],\n        \"extent\": [550697, 5927004,579383, 5941340],\n        \"deselectPreviousLayers\": \"always\",\n    }]\n}\n</code></pre> <p>Values for event</p> <p>Events that can trigger actions.</p> event Description comparefeatures_select When a layer is selected for comparison in CompareFeatures module fileimport_imported When files were successfully imported in FileImport module measure_geometry When the selected geometry value changed in Measure module"},{"location":"User/Portal-Config/config.js/#featureviaurl","title":"featureViaURL","text":"Name Required Type Default Description epsg no Integer <code>4326</code> EPSG code for coordinate reference system to translate coordinates to. layers yes layers[] Layer configuration array for given features. zoomTo String/String[] Id of layers or array thereof, to which the Masterportal initially zooms. If none are given, the usual initial center coordinate is used. <p>Example:</p> <pre><code>{\n    \"featureViaURL\": {\n        \"epsg\": 25832,\n        \"zoomTo\": \"urlPointFeatures\",\n        \"layers\": [\n            {\n                \"id\": \"urlPointFeatures\",\n                \"geometryType\": \"Point\",\n                \"name\": \"URL Point Features\",\n                \"styleId\": \"url_points\"\n            },\n            {\n                \"id\": \"urlLineFeatures\",\n                \"geometryType\": \"LineString\",\n                \"name\": \"URL Line Features\",\n                \"styleId\": \"url_lines\"\n            },\n            {\n                \"id\": \"urlPolygonFeatures\",\n                \"geometryType\": \"Polygon\",\n                \"name\": \"URL Polygon Features\",\n                \"styleId\": \"url_polygons\"\n            },\n            {\n                \"id\": \"urlMultiPointFeatures\",\n                \"geometryType\": \"MultiPoint\",\n                \"name\": \"URL MultiPoint Features\",\n                \"styleId\": \"url_mulitpoints\"\n            },\n            {\n                \"id\": \"urlMultiLineStringFeatures\",\n                \"geometryType\": \"MultiLineString\",\n                \"name\": \"URL MultiLineString Features\",\n                \"styleId\": \"url_multilinestring\"\n            },\n            {\n                \"id\": \"urlMultiPolygonFeatures\",\n                \"geometryType\": \"MultiPolygon\",\n                \"name\": \"URL MultiPolygon Features\",\n                \"styleId\": \"url_multipolygons\"\n            }\n        ]\n    }\n}\n</code></pre>"},{"location":"User/Portal-Config/config.js/#featureviaurllayers","title":"featureViaURL.layers","text":"<p>The parameters described apply for each entry of the layers array.</p> Name Required Type Default Description id yes String unique ID for the layer to be created geometryType yes enum[\"LineString\", \"Point\", \"Polygon\", \"MultiPoint\", \"MultiLineString\", \"MultiPolygon\"] Geometry type of the feature to be shown. name yes String Layer name displayed in the layer tree, the legend, and the GFI pop-up. styleId no String Style id to be used for the feature, referring to the style.json. <p>Example:</p> <pre><code>{\n    \"layers\": [{\n        \"id\": \"urlPolygonFeatures\",\n        \"geometryType\": \"Polygon\",\n        \"name\": \"URL Polygon Features\",\n        \"styleId\": \"url_polygons\"\n    }]\n}\n</code></pre>"},{"location":"User/Portal-Config/config.js/#layerinformation","title":"layerInformation","text":"<p>Configuration for the layerInformation window.</p> Name Required Type Default Description showUrlGlobal no Boolean parameter to globally toggle the dispaly of the service url for all layers. Referring to the \"urlIsVisible\" Parameter (see config.json ) <p>Example:</p> <pre><code>{\n    \"layerInformation\": {\n        \"showUrlGlobal\": true\n    },\n}\n</code></pre>"},{"location":"User/Portal-Config/config.js/#layersequence","title":"layerSequence","text":"<p>Configuration for the layerSequence.</p> Name Required Type Default Description moveModelInTree no Boolean true Flag whether it should be possible to move a layer in the topic tree despite a defined LayerSequence. <p>Example:</p> <pre><code>{\n    \"layerSequence\": {\n        \"moveModelInTree\": true\n    }\n}\n</code></pre> <p>Masterportal translation documentation</p> <p>Return to the Masterportal documentation</p>"},{"location":"User/Portal-Config/config.json/","title":"config.json","text":"<p>The config.json file contains all configuration of the portal interface. It controls which elements are placed where on the menu bar, how the map is to be centered initially, and which layers are to be loaded. See this file for an example.</p> <p>Info</p> <p>Since the Masterportal was original developed in German, some technical keys contain german.</p> <p>The configuration is separated into two sections, Portalconfig and Themenconfig</p> <pre><code>{\n   \"Portalconfig\": {},\n   \"Themenconfig\": {}\n}\n</code></pre> Table of contents <p>Demo Docs: Es ist m\u00f6glich weiterhin ein Inhaltsverzeichnis vorab darzustellen:</p> <ul> <li>config.json<ul> <li>Portalconfig<ul> <li>SearchBar<ul> <li>BKG</li> <li>OSM</li> <li>Komoot</li> <li>LocationFinder<ul> <li>LocationFinderClass</li> </ul> </li> <li>Gazetteer</li> <li>GDI<ul> <li>QueryObject<ul> <li>Params</li> </ul> </li> </ul> </li> <li>ElasticSearch<ul> <li>triggerEvent</li> </ul> </li> <li>Hitmap</li> <li>Portalconfig/searchBar/specialWFS<ul> <li>Portalconfig/searchBar/specialWFS/definition</li> </ul> </li> <li>Portalconfig/searchBar/tree</li> <li>Portalconfig/searchBar/visibleWFS</li> <li>Portalconfig/searchBar/visibleVector</li> </ul> </li> <li>Portalconfig.tree<ul> <li>Portalconfig.tree.highlightedFeatures</li> <li>Portalconfig.layerInformation</li> </ul> </li> <li>Portalconfig.controls<ul> <li>Portalconfig.controls.attributions</li> <li>Portalconfig.controls.orientation</li> <li>Portalconfig.controls.overviewMap</li> <li>Portalconfig.controls.rotation</li> <li>Portalconfig.controls.totalView</li> <li>Portalconfig.controls.backForward</li> <li>Portalconfig.controls.startTool</li> </ul> </li> <li>Portalconfig.portalTitle</li> <li>Portalconfig.mapView<ul> <li>Portalconfig.mapView.option</li> </ul> </li> <li>Portalconfig.quickHelp<ul> <li>Portalconfig.quickHelp.configs<ul> <li>Portalconfig.quickHelp.configs.search</li> <li>Portalconfig.quickHelp.configs.search.section</li> <li>Portalconfig.quickHelp.configs.search.section.paragraph</li> </ul> </li> <li>Portalconfig.quickHelp.configs.tree<ul> <li>Portalconfig.quickHelp.configs.tree.section</li> <li>Portalconfig.quickHelp.configs.tree.section.paragraph</li> </ul> </li> </ul> </li> <li>Portalconfig.menu<ul> <li>Portalconfig.menu.ansichten</li> <li>Portalconfig.menu.ansichten.children</li> <li>Portalconfig.menu.ansichten.children.view</li> <li>Portalconfig.menu.legend</li> <li>Portalconfig.menu.login</li> <li>Portalconfig.menu.info<ul> <li>Portalconfig.menu.info.children</li> </ul> </li> <li>Portalconfig.menu.tree</li> <li>Portalconfig.menu.folder</li> </ul> </li> <li>Portalconfig.menu.tools<ul> <li>Portalconfig.menu.tools.children</li> <li>Portalconfig.menu.tool</li> <li>Portalconfig.menu.tool.gfi</li> </ul> </li> <li>Portalconfig.menu.tool.gfi.coloredHighlighting3D<ul> <li>Portalconfig.menu.tool.gfi.highlightVectorRules</li> <li>Portalconfig.menu.tool.gfi.highlightVectorRules.fill</li> <li>Portalconfig.menu.tool.gfi.highlightVectorRules.image</li> <li>Portalconfig.menu.tool.gfi.highlightVectorRules.stroke</li> <li>Portalconfig.menu.tool.gfi.highlightVectorRules.text</li> <li>Portalconfig.menu.tool.filter</li> <li>Portalconfig.menu.tool.filter.filterGeometrySelector</li> <li>Portalconfig.menu.tool.filter.filterLayer</li> <li>Portalconfig.menu.tool.filter.filterLayerGroups</li> <li>Portalconfig.menu.tool.filter.filterLayer.snippets</li> <li>Portalconfig.menu.tool.filter.filterLayer.snippets.children</li> <li>Portalconfig.menu.tool.filter.filterLayer.snippets.timeouts</li> <li>Portalconfig.menu.tool.filter.filterLayer.snippets.service</li> <li>Portalconfig.menu.tool.filter.filterLayer.snippets.localeCompareParams</li> <li>Portalconfig/menu/tool/filter/filterLayer/snippets/localeCompareParams/options</li> <li>Portalconfig.menu.tool.compareFeatures</li> <li>Portalconfig.menu.tool.parcelSearch</li> <li>Portalconfig.menu.tool.saveSelection</li> <li>Portalconfig.menu.tool.scaleSwitcher</li> <li>Portalconfig.menu.tool.resetTree</li> <li>Portalconfig.menu.tool.searchByCoord</li> <li>Portalconfig.menu.tool.print<ul> <li>Portalconfig.menu.tool.print.capabilitiesFilter</li> </ul> </li> <li>Portalconfig.menu.tool.draw</li> <li>Portalconfig.menu.tool.draw.icon</li> <li>Portalconfig.menu.tool.draw.drawSymbolSet</li> <li>Portalconfig.menu.tool.draw.drawLineSet</li> <li>Portalconfig.menu.tool.draw.drawCurveSet</li> <li>Portalconfig.menu.tool.draw.drawAreaSet</li> <li>Portalconfig.menu.tool.draw.drawCircleSet</li> <li>Portalconfig.menu.tool.draw.drawDoubleCircleSet</li> <li>Portalconfig.menu.tool.draw.writeTextSet</li> <li>Portalconfig.menu.tool.draw.download</li> <li>Portalconfig.menu.tool.featureLister<ul> <li>Portalconfig.menu.tool.featureLister.highlightVectorRulesPolygon</li> <li>Portalconfig.menu.tool.featureLister.highlightVectorRulesPolygon.fill</li> <li>Portalconfig.menu.tool.featureLister.highlightVectorRulesPolygon.stroke</li> <li>Portalconfig.menu.tool.featureLister.highlightVectorRulesPointLine</li> <li>Portalconfig.menu.tool.featureLister.highlightVectorRulesPointLine.fill</li> <li>Portalconfig.menu.tool.featureLister.highlightVectorRulesPointLine.stroke</li> <li>Portalconfig.menu.tool.featureLister.highlightVectorRulesPointLine.image</li> </ul> </li> <li>Portalconfig.menu.tool.selectFeatures<ul> <li>Portalconfig.menu.tool.selectFeatures.highlightVectorRulesPolygon</li> <li>Portalconfig.menu.tool.selectFeatures.highlightVectorRulesPolygon.fill</li> <li>Portalconfig.menu.tool.selectFeatures.highlightVectorRulesPolygon.stroke</li> <li>Portalconfig.menu.tool.selectFeatures.highlightVectorRulesPointLine</li> <li>Portalconfig.menu.tool.selectFeatures.highlightVectorRulesPointLine.fill</li> <li>Portalconfig.menu.tool.selectFeatures.highlightVectorRulesPointLine.stroke</li> <li>Portalconfig.menu.tool.selectFeatures.highlightVectorRulesPointLine.image</li> </ul> </li> <li>Portalconfig.menu.tool.measure</li> <li>Portalconfig.menu.tool.modeler3D<ul> <li>Portalconfig.menu.tool.modeler3D.highlightStyle</li> </ul> </li> <li>Portalconfig.menu.tool.contact</li> <li>Portalconfig.menu.tool.contact.email</li> <li>Portalconfig.menu.tool.layerClusterToggler</li> <li>Portalconfig.menu.tool.layerClusterToggler.clusterList</li> <li>Portalconfig.menu.tool.layerSlider</li> <li>Portalconfig.menu.tool.layerSlider.layerId</li> <li>Portalconfig.menu.tool.shadow</li> <li>Portalconfig.menu.tool.shadow.shadowTime</li> <li>Portalconfig.menu.tool.wfsSearch</li> <li>Portalconfig.menu.tool.wfsSearch.searchInstance</li> <li>Portalconfig.menu.tool.wfsSearch.searchInstance.literal</li> <li>Portalconfig.menu.tool.wfsSearch.searchInstance.literal.clause</li> <li>Portalconfig.menu.tool.wfsSearch.searchInstance.literal.field</li> <li>Portalconfig.menu.tool.wfsSearch.searchInstance.literal.field.option</li> <li>Portalconfig.menu.tool.wfsSearch.searchInstance.resultList</li> <li>Portalconfig.menu.tool.wfsSearch.searchInstance.requestConfig</li> <li>Portalconfig.menu.tool.wfsSearch.searchInstance.requestConfig.likeFilter</li> <li>Portalconfig.menu.tool.wfsSearch.searchInstance.requestConfig.gazetteer</li> <li>Portalconfig.menu.tool.wfsSearch.searchInstance.suggestions</li> <li>Portalconfig.menu.tool.wfst</li> <li>Portalconfig.menu.tool.wfst.TransactionConfig</li> <li>Portalconfig.menu.tool.coordToolkit</li> <li>Portalconfig.menu.tool.coordToolkit.coordInfo</li> <li>Portalconfig.menu.tool.coordToolkit.coordInfo.explanations</li> <li>Portalconfig.menu.tool.addWMS</li> <li>Portalconfig.menu.tool.bufferAnalysis</li> <li>Portalconfig.menu.tool.coord</li> <li>Portalconfig.menu.tool.coordToolkit</li> <li>Portalconfig.menu.tool.extendedFilter</li> <li>Portalconfig.menu.tool.fileImport</li> <li>Portalconfig.menu.tool.kmlimport</li> <li>Portalconfig.menu.tool.layerClusterToggler</li> <li>Portalconfig.menu.tool.styleVT</li> <li>Portalconfig.menu.tool.supplyCoord</li> <li>Portalconfig.menu.tool.resetTree</li> <li>Portalconfig.menu.tool.wfsFeatureFilter</li> <li>Portalconfig.menu.tool.routing</li> <li>Portalconfig.menu.tool.routing.download</li> <li>Portalconfig.menu.tool.routing.geosearch</li> <li>Portalconfig.menu.tool.routing.geosearch.bbox</li> <li>Portalconfig.menu.tool.routing.geosearchReverse</li> <li>Portalconfig.menu.tool.routing.directionsSettings</li> <li>Portalconfig.menu.tool.routing.directionsSettings.customAvoidFeatures</li> <li>Portalconfig.menu.tool.routing.directionsSettings.customPreferences</li> <li>Portalconfig.menu.tool.routing.directionsSettings.styleRoute</li> <li>Portalconfig.menu.tool.routing.directionsSettings.styleWaypoint</li> <li>Portalconfig.menu.tool.routing.directionsSettings.styleAvoidAreas</li> <li>Portalconfig.menu.tool.routing.directionsSettings.batchProcessing</li> <li>Portalconfig.menu.tool.routing.isochronesSettings</li> <li>Portalconfig.menu.tool.routing.isochronesSettings.styleCenter</li> <li>Portalconfig.menu.tool.routing.isochronesSettings.styleIsochrones</li> <li>Portalconfig.menu.tool.routing.isochronesSettings.batchProcessing</li> </ul> </li> <li>Portalconfig.menu.staticlinks<ul> <li>Portalconfig.menu.staticlinks.staticlink</li> <li>Portalconfig.menu.staticlinks.staticlink.onClickTrigger</li> </ul> </li> </ul> </li> <li>Themenconfig<ul> <li>Themenconfig.Hintergrundkarten</li> <li>Themenconfig.Fachdaten</li> <li>Themenconfig.Fachdaten_3D</li> <li>Themenconfig.Fachdaten_Zeit</li> <li>Themenconfig.Ordner</li> <li>Themenconfig.GroupLayer</li> <li>Themenconfig.Layer<ul> <li>Themenconfig.Layer.WMS</li> <li>Themenconfig.Layer.WMS.gfiAsNewWindow</li> <li>Themenconfig.Layer.WFS</li> <li>Themenconfig.Layer.Tileset.cesium3DTilesetOption</li> <li>Themenconfig.Layer.Terrain</li> <li>Themenconfig.Layer.Terrain.cesiumTerrainProviderOption</li> <li>Themenconfig.Layer.Entity3D</li> <li>Themenconfig.Layer.Entity3D.Attribute</li> <li>Themenconfig.Layer.StaticImage</li> <li>Themenconfig.Layer.Vector</li> <li>Themenconfig.Layer.Vector.filterOption</li> <li>Themenconfig.Layer.Vector.vtStyle</li> </ul> </li> </ul> </li> </ul> </li> <li>Datatypes<ul> <li>Datatypes.Coordinate</li> <li>Datatypes.Extent</li> <li>Datatypes.CustomObject</li> <li>Datatypes.LayerId</li> </ul> </li> </ul>"},{"location":"User/Portal-Config/config.json/#portalconfig","title":"Portalconfig","text":"<p>The section Portalconfig controls the following properties:</p> <ol> <li>Title &amp; logo (portalTitle)</li> <li>Type of topic selection (treeType)</li> <li>Initial map view settings (mapView)</li> <li>Map view buttons and interactions (controls)</li> <li>Menu entries and availability as well as order of tools (menu)</li> <li>Type and properties of used search services (searchBar)</li> <li>Deletability of topics (layersRemovable)</li> <li>Maximum loading time (loaderOverlayMaxWait)</li> </ol> <p>The configuration options listed in the following table exist:</p> Name Required Type Default Description Expert portalTitle no portalTitle The portal's title and further elements to be shown in the menu bar. false treeType no enum[\"light\",\"default\",\"custom\"] \"light\" Decides the type of topic selection tree. You may choose between <code>\"light\"</code> (simple list), <code>\"default\"</code> (FHH-Atlas), and <code>\"custom\"</code> (layer list defined via JSON file). false singleBaselayer no Boolean false Specifies whether only one base layer may be active at any time. Only usable in combination with treeType <code>\"custom\"</code>. false Baumtyp no enum[\"light\",\"default\",\"custom\"] \"light\" Deprecated in 3.0.0. Please use <code>\"treeType\"</code> instead. false mapView no mapView Defines the initial map view and a background shown when no layer is selected. false controls no controls Allows setting which interactions are active in the map. false menu no menu Menu entries and their order are configured in this entry. The order of tools corresponds to the order in the object specifying them; see Tools. false searchBar no searchBar The search bar allows requesting information from various search services at once. false layersRemovable no Boolean false Defines whether layers may be removed from a portal during its run-time. false quickHelp no quickHelp Configuration of new and manipulation of existing QuickHelp windows. false tree no tree Configuration of menu tree. false layerInformation no layerInformation Decides if to show individual attribute in Meta data of layer information false loaderOverlayMaxWait no Integer 25000 Defines the maximum loading time for showing Loader Overlays. false"},{"location":"User/Portal-Config/config.json/#searchbar","title":"SearchBar","text":"<p>Search bar configuration.</p> Name Required Type Default Description Expert searchResultOrder no String[] [\"common:modules.searchbar.type.address\", \"common:modules.searchbar.type.street\", \"common:modules.searchbar.type.parcel\", \"common:modules.searchbar.type.location\", \"common:modules.searchbar.type.district\", \"common:modules.searchbar.type.topic\", \"common:modules.searchbar.type.subject\"] Configuration of order of categories of displayed search results. The keys should be used from translation data. false bkg no bkg BKG search service configuration. false gazetteer no gazetteer Gazetteer search service configuration. false gdi no gdi GDI (elastic) search service configuration. _Deprecated in 3.0.0. Please use elasticSearch instead. false elasticSearch no elasticSearch Elastic search service configuration. false osm no osm OpenStreetMap (OSM) search service configuration. false komoot no komoot Komoot Photon search service configuration. false locationFinder no locationFinder LocationFinder search service configuration. false placeholder no String \"Suche\" Input text field placeholder shown when no input has been given yet. false recommendedListLength no Integer 5 Maximum amount of entries in the suggestion list. false quickHelp no Boolean false Deprecated in the next major-release. Defines whether the QuickHelp feature is offered for the search bar. false specialWFS no specialWFS specialWFS search service configuration. false tree no tree Topic selection tree search configuration. false visibleWFS no visibleWFS Visible WFS layer search configuration. false visibleVector no visibleVector Visible vector layer search configuration. false zoomLevel no Integer On picking a search result, this is the maximum zoom level to be used on zooming to the chosen feature. false sortByName no Boolean true Defines whether search results are to be sorted alphanumerically. false selectRandomHits no Boolean true Is set <code>true</code>, the results are chosen randomly when the amount of hits exceeds <code>recommendedListLength</code>. If set <code>false</code>, the list of hits is cut when reaching <code>recomendedListLength</code>. This may result in only showing results of the service that first returned. false"},{"location":"User/Portal-Config/config.json/#bkg","title":"BKG","text":"<p>BKG search service configuration.</p> <p>This requires a backend!</p> <p>To avoid openly using your BKG UUID, URLs (\"bkg_geosearch\" and \"bkg_suggest\" in this case) of the restServices should be caught and redirected in a proxy.</p> <p>Example proxy configuration <pre><code>ProxyPass /bkg_geosearch http://sg.geodatenzentrum.de/gdz_geokodierung__[UUID]/geosearch\n&lt;Location /bkg_geosearch&gt;\n  ProxyPassReverse http://sg.geodatenzentrum.de/gdz_geokodierung__[UUID]/geosearch\n&lt;/Location&gt;\n\nProxyPass /bkg_suggest http://sg.geodatenzentrum.de/gdz_geokodierung__[UUID]/suggest\n&lt;Location /bkg_suggest&gt;\n  ProxyPassReverse http://sg.geodatenzentrum.de/gdz_geokodierung__[UUID]/suggest\n&lt;/Location&gt;\n</code></pre></p> Name Required Type Default Description Expert epsg no String \"EPSG:25832\" EPSG code of the coordinate reference system to use. false extent no Extent [454591, 5809000, 700000, 6075769] Coordinate extent in which search algorithms should return. false filter no String \"filter=(typ:*)\" Filter string sent to the BKG interface. false geosearchServiceId yes String Search service id. Resolved using the rest-services.json file. false minChars no Integer 3 Deprecated in 3.0.0. Please use \"minCharacters\". false minCharacters no Integer 3 Minimum amount of characters required to start a search. false score no Number 0.6 Score defining the minimum quality of search results. false suggestCount no Integer 20 Suggestion amount. false suggestServiceId yes String Suggestion service id. Resolved using the rest-services.json file. false zoomToResult no Boolean false Deprecated in 3.0.0. Please use \"zoomToResultOnHover\" or \"zoomToResultOnClick\". Defines whether a feature is zoomed to when hovering a result list entry. false zoomToResultOnHover no Boolean false Defines whether an address is zoomed to when hovering a result list entry. false zoomToResultOnClick no Boolean true Defines whether an address is zoomed to when clicking a result list entry. false zoomLevel no Number 7 Defines the zoom level to use on zooming to a result. false <p>Example <pre><code>{\n    \"bkg\": {\n        \"minCharacters\": 3,\n        \"suggestServiceId\": \"4\",\n        \"geosearchServiceId\": \"5\",\n        \"extent\": [454591, 5809000, 700000, 6075769],\n        \"suggestCount\": 10,\n        \"epsg\": \"EPSG:25832\",\n        \"filter\": \"filter=(typ:*)\",\n        \"score\": 0.6,\n        \"zoomToResultOnHover\": false,\n        \"zoomToResultOnClick\": true,\n        \"zoomLevel\": 10\n    }\n}\n</code></pre></p>"},{"location":"User/Portal-Config/config.json/#osm","title":"OSM","text":"<p>OpenStreetMap search for city, street, and house number. Only executed on clicking the search icon or pressing enter since the amount of requests to the OSM search service is limited.</p> Name Required Type Default Description Expert minChars no Number 3 Minimum amount of characters required to start a search. false serviceId yes String OSM search service id. Resolved using the rest-services.json file. false limit no Number 50 Maximum amount of requested unfiltered results. false states no string \"\" May contain federal state names with arbitrary separators. Names may also be used in English depending on whether the data has been added to the free open source project OpenStreetMap. false classes no string [] May contain the classes to search for. false <p>Example</p> <pre><code>{\n    \"osm\": {\n        \"minChars\": 3,\n        \"serviceId\": \"10\",\n        \"limit\": 60,\n        \"states\": \"Hamburg, Nordrhein-Westfalen, Niedersachsen, Rhineland-Palatinate Rheinland-Pfalz\",\n        \"classes\": \"place,highway,building,shop,historic,leisure,city,county\"\n    }\n}\n</code></pre>"},{"location":"User/Portal-Config/config.json/#komoot","title":"Komoot","text":"<p>Search with Komoot Photon.</p> Name Verpflichtend Typ Default Beschreibung Expert minChars no Number 3 Minimum amount of characters required to start a search. false serviceId yes String Komoot search service id. Resolved using the rest-services.json file. false limit no Number 10 Maximum amount of requested unfiltered results. false lang no string \"de\" Language of the Komoot Search. Effects language specific locationnames (e.g. Countrynames) aus. false lat no Number Latitude of the center for the search. false lon no Number Longtitude of the center for the search. false bbox no string Boundingbox of the search. false osm_tag no string Filtering of OSM Tags (see https://github.com/komoot/photon#filter-results-by-tags-and-values). false searchOnEnter no Boolean false If <code>searchOnEnter</code> is set to <code>true</code>, searches will only start on clicking the search icon or pressing enter. false <p>Example</p> <pre><code>#!json\n\n\"komoot\": {\n    \"minChars\": 3,\n    \"serviceId\": \"10\",\n    \"limit\": 20,\n    \"lang\": \"de\",\n    \"lat\": 52.5,\n    \"lon\": 13.4,\n    \"bbox\": \"12.5,52.05,14.05,52.75\",\n}\n</code></pre>"},{"location":"User/Portal-Config/config.json/#locationfinder","title":"LocationFinder","text":"<p>Search configuration to use a ESRI CH LocationFinder.</p> Name Required Type Default Description Expert incrementalSearch no Boolean true Defines whether autocomplete is enabled. If <code>incrementalSearch</code> is set to <code>false</code>, searches will only start on clicking the search icon or pressing enter, since there's a quota on requests. false serviceId yes String Service id. Resolved using the rest-services.json file. false classes no LocationFinderClass May contain classes (with properties) to use in searches. If nothing is specified, all classes are considered valid. false useProxy no Boolean false Deprecated in the next major release. GDI-DE recommends setting CORS headers on the required services instead of using proxies. Defines whether a service URL should be requested via proxy. For this, dots in the URL are replaced with underscores. false spatialReference no String Coordinate reference system to use for requests. By default, the value in <code>Portalconfig.mapView.epsg</code> is used. false"},{"location":"User/Portal-Config/config.json/#locationfinderclass","title":"LocationFinderClass","text":"<p>Definition of classes to be taken into account for results.</p> Name Required Type Default Description Expert name yes String Class name false icon no String \"bi-signpost-2-fill\" Class visualization by a icon false zoom no String \"center\" Defines how to zoom to a hit on selection. If <code>center</code> is chosen, the center coordinate (<code>cx</code>, <code>cy</code>) is zoomed to and a marker is placed. If <code>bbox</code> is chosen, the LocationFinder's given BoundingBox (<code>xmin</code>, <code>ymin</code>, <code>xmax</code>, <code>ymax</code>) is zoomed to, and no marker is shown. false zoomLevel no Integer Zoom level which is applied to the result view false <p>Example</p> <pre><code>{\n    \"locationFinder\": {\n        \"serviceId\": \"10\",\n        \"classes\": [\n            {\n                \"name\": \"busstop\",\n                \"icon\": \"bi-record-circle\"\n            },\n            {\n                \"name\": \"address\",\n                \"icon\": \"bi-house-door-fill\",\n                \"zoomLevel\": 5\n            },\n            {\n                \"name\": \"streetname\",\n                \"zoom\": \"bbox\"\n            }\n        ]\n    }\n}\n</code></pre>"},{"location":"User/Portal-Config/config.json/#gazetteer","title":"Gazetteer","text":"<p>Gazetteer search service configuration.</p> <p>This requires a backend!</p> <p>A WFS's Stored Query is requested with predefined parameters.</p> Name Required Type Default Description Expert minChars no Integer 3 Minimum amount of characters required to start a search. false searchAddress no Boolean false Defines whether address search is active. For backward compatibility, if \"searchAddress\" is not configured, the \"searchAddress\" attribute is set to \"true\" when \"searchStreets\" and \"searchHouseNumbers\" are set to \"true\". false searchDistricts no Boolean false Defines whether district search is active. false searchHouseNumbers no Boolean false Defines whether house numbers should be searched for. Requires <code>searchStreets</code> to be set to <code>true</code>, too. false searchParcels no Boolean false Defines whether parcels search is active. false searchStreetKey no Boolean false Defines whether streets should be searched for by key. false searchStreet no Boolean false Defines whether street search is active. Precondition to set <code>searchHouseNumbers</code> to <code>true</code>. false serviceId yes String Search service id. Resolved using the rest-services.json file. false showGeographicIdentifier no Boolean false Specifies whether the attribute <code>geographicIdentifier</code> should be used to display the search result. false <p>Example</p> <pre><code>{\n    \"gazetteer\": {\n        \"minChars\": 3,\n        \"serviceId\": \"6\",\n        \"searchStreets\": true,\n        \"searchHouseNumbers\": true,\n        \"searchDistricts\": true,\n        \"searchParcels\": true,\n        \"searchStreetKey\": true,\n        \"showGeographicIdentifier\": false\n    }\n}\n</code></pre>"},{"location":"User/Portal-Config/config.json/#gdi","title":"GDI","text":"<p>GFI search service configuration.</p> <p>Deprecated in 3.0.0. Please use elasticSearch instead.</p> Name Required Type Default Description Expert minChars no Integer 3 Minimum amount of characters required to start a search. false serviceId yes String Search service id. Resolved using the rest-services.json file. false sortByName no Boolean false Defines whether search results are to be sorted alphanumerically. false queryObject yes queryObject Query object read by the Elasticsearch model. false <p>Example</p> <pre><code>{\n    \"gdi\": {\n        \"minChars\": 3,\n        \"serviceId\": \"elastic\",\n        \"sortByName\": false,\n        \"queryObject\": {\n            \"id\": \"query\",\n            \"params\": {\n                \"query_string\": \"%%searchString%%\"\n            }\n        }\n    }\n}\n</code></pre>"},{"location":"User/Portal-Config/config.json/#queryobject","title":"QueryObject","text":"<p>Todo.</p> Name Required Type Default Description Expert id yes String \"\" Todo false params yes params Elasticsearch parameter object. false"},{"location":"User/Portal-Config/config.json/#params","title":"Params","text":"<p>Todo</p> Name Required Type Default Description Expert query_string yes String \"%%searchString%%\" Todo false"},{"location":"User/Portal-Config/config.json/#elasticsearch","title":"ElasticSearch","text":"<p>Elasticsearch service configuration.</p> Name Required Type Default Description Expert minChars no Integer 3 Minimum amount of characters required to start a search. false serviceId yes String Search service id. Resolved using the rest-services.json file. false type no enum[\"POST\", \"GET\"] \"POST\" Request type. false searchStringAttribute no String \"searchString\" Search string attribute name for <code>payload</code> object. false responseEntryPath no String \"\" Response JSON attribute path to found features. false triggerEvent no triggerEvent {} Radio event triggered on mouse hover and click. false hitMap no hitMap Object mapping result object attributes to keys. true hitType no String \"common:modules.searchbar.type.subject\" Search result type shown in the result list after the result name. Set to the translation key. false hitIcon no String \"bi-signpost-2-fill\" CSS icon class of search results, shown before the result name. false useProxy no Boolean false Defines whether the URL should be proxied. false <p>As an additional property, you may add <code>payload</code>. It is not required, and matches the CustomObject description. By default, it is set to the empty object <code>{}</code>. The object describes the payload to be sent as part of the request. It must provide the searchString attribute. For more info on usable attributes, see Elasticsearch Guide. This object can not be handled in the Admintool, since CustomObject is not yet supported.</p> <p>Example</p> <pre><code>{\n    \"elasticSearch\": {\n        \"minChars\": 3,\n        \"serviceId\": \"elastic_hh\",\n        \"type\": \"GET\",\n        \"payload\": {\n            \"id\": \"query\",\n            \"params\": {\n                \"query_string\": \"\"\n            }\n        },\n        \"searchStringAttribute\": \"query_string\",\n        \"responseEntryPath\": \"hits.hits\",\n        \"triggerEvent\": {\n            \"channel\": \"Parser\",\n            \"event\": \"addGdiLayer\"\n        },\n        \"hitMap\": {\n            \"name\": \"_source.name\",\n            \"id\": \"_source.id\",\n            \"source\": \"_source\"\n        },\n        \"hitType\": \"common:modules.searchbar.type.subject\",\n        \"hitIcon\": \"bi-list-ul\"\n    }\n}\n</code></pre>"},{"location":"User/Portal-Config/config.json/#triggerevent","title":"triggerEvent","text":"<p>Radio event triggered on mouse hover and click.</p> Name Required Type Default Description Expert channel yes String Channel addressed on mouse hover and click. The hit from the recommendedList will be sent as payload. false event yes String Triggered event. false"},{"location":"User/Portal-Config/config.json/#portalconfigsearchbarhitmap","title":"Portalconfig.searchbar.hitmap","text":"<p>Object mapping result object attributes to keys.</p> Name Required Type Default Description Expert name yes String/String[] \"name\" Attribute value will be mapped to the attribute key. Required to display results. false id yes String/String[] \"id\" Attribute value will be mapped to the attribute key. Required to display results. false coordinate yes String/String[] \"coordinate\" Attribute value will be mapped to the attribute key. Required to display a map marker. false"},{"location":"User/Portal-Config/config.json/#portalconfigsearchbarspecialwfs","title":"Portalconfig/searchBar/specialWFS","text":"<p>WFS search function configuration. Requests features from a WFS. The service must be configured to allow WFS 2.0 requests.</p> <p>For example, on entering \"Kronenmatten\" the service https://geoportal.freiburg.de/geoportal_freiburg_de/wfs/stpla_bplan/wfs_mapfile/geltungsbereiche will be requested with the following XML attached as payload, and the service will answer with an XML FeatureCollection. The collection features will then be offered as search results.</p> <pre><code>&lt;?xml version='1.0' encoding='UTF-8'?&gt;\n&lt;wfs:GetFeature service='WFS' xmlns:wfs='http://www.opengis.net/wfs' xmlns:ogc='http://www.opengis.net/ogc' xmlns:gml='http://www.opengis.net/gml' traverseXlinkDepth='*' version='1.1.0'&gt;\n    &lt;wfs:Query typeName='ms:geltungsbereiche'&gt;\n        &lt;wfs:PropertyName&gt;ms:planbez&lt;/wfs:PropertyName&gt;\n        &lt;wfs:PropertyName&gt;ms:msGeometry&lt;/wfs:PropertyName&gt;\n        &lt;wfs:maxFeatures&gt;20&lt;/wfs:maxFeatures&gt;\n        &lt;ogc:Filter&gt;\n            &lt;ogc:PropertyIsLike matchCase='false' wildCard='*' singleChar='#' escapeChar='!'&gt;\n                &lt;ogc:PropertyName&gt;ms:planbez&lt;/ogc:PropertyName&gt;\n                &lt;ogc:Literal&gt;*Kronenmatten*&lt;/ogc:Literal&gt;\n            &lt;/ogc:PropertyIsLike&gt;\n        &lt;/ogc:Filter&gt;\n    &lt;/wfs:Query&gt;\n&lt;/wfs:GetFeature&gt;\n</code></pre> <p>The WFS 2.0 query is dynamically created by the Masterportal. No stored query configuration is required in the service.</p> Name Required Type Default Description Expert minChars no Integer 3 Minimum amount of characters required to start a search. false icon no String \"bi-house-fill\" Default icon used in the suggestion list. Overwritable by a definition. false maxFeatures no Integer 20 Maximum amount of features returned. Overwritable by a definition. false timeout no Integer 6000 Service request timeout in ms. false definitions no definition[] Special WFS search definitions. false <p>Example</p> <pre><code>{\n    \"specialWFS\": {\n        \"minChars\": 5,\n        \"timeout\": 10000,\n        \"definitions\": [\n            {\n                \"url\": \"https://geodienste_hamburg_de/MRH_WFS_Rotenburg\",\n                \"typeName\": \"app:mrh_row_bplan\",\n                \"propertyNames\": [\"app:name\"],\n                \"name\": \"B-Plan\",\n                \"namespaces\": \"xmlns:app='http://www.deegree.org/app'\"\n            },\n            {\n                \"url\": \"https://geodienste_hamburg_de/HH_WFS_Bebauungsplaene\",\n                \"typeName\": \"app:prosin_imverfahren\",\n                \"propertyNames\": [\"app:plan\"],\n                \"geometryName\": \"app:the_geom\",\n                \"name\": \"im Verfahren\",\n                \"namespaces\": \"xmlns:app='http://www.deegree.org/app'\"\n            }\n        ]\n    }\n}\n</code></pre>"},{"location":"User/Portal-Config/config.json/#portalconfigsearchbarspecialwfsdefinition","title":"Portalconfig/searchBar/specialWFS/definition","text":"<p>SpecialWFS search definition configuration.</p> Name Required Type Default Description Expert url no String WFS URL. Depending on your proxy configuration, the relative URL from the portal server must be given. false name no String Category name displayed in the suggestion list. false icon no String \"bi-house-fill\" CSS icon class of search results, shown before the result name. false typeName no String The name of the WFS layer to be requested. false propertyNames no String[] Array of attribute names to be searched. false geometryName no String \"app:geom\" Geometry attribute name required for zoom functionality. false maxFeatures no Integer 20 Maximum amount of features to be returned. false namespaces no String XML name spaces to request <code>propertyNames</code> or <code>geometryName</code>. (<code>xmlns:wfs</code>, <code>xmlns:ogc</code>, and <code>xmlns:gml</code> are always used.) false useProxy no Boolean false Deprecated in the next major release. GDI-DE recommends setting CORS headers on the required services instead of using proxies. Defines whether a service URL should be requested via proxy. For this, dots in the URL are replaced with underscores. false data no String Deprecated in 3.0.0. Filter parameter for WFS requests. false <p>Example</p> <pre><code>{\n    \"url\": \"https://geodienste_hamburg_de/HH_WFS_Bebauungsplaene\",\n    \"typeName\": \"app:prosin_imverfahren\",\n    \"propertyNames\": [\"app:plan\"],\n    \"geometryName\": \"app:the_geom\",\n    \"name\": \"im Verfahren\"\n}\n</code></pre>"},{"location":"User/Portal-Config/config.json/#portalconfigsearchbartree","title":"Portalconfig/searchBar/tree","text":"<p>Searching all topic selection tree layers.</p> Name Required Type Default Description Expert minChars no Integer 3 Minimum amount of characters required to start a search. false <p>Example</p> <pre><code>{\n    \"tree\": {\n        \"minChars\": 5\n    }\n}\n</code></pre>"},{"location":"User/Portal-Config/config.json/#portalconfigsearchbarvisiblewfs","title":"Portalconfig/searchBar/visibleWFS","text":"<p>Visible WFS search configuration. Deprecated in 3.0.0. Please use visibleVector instead.</p> Name Required Type Default Description Expert minChars no Integer 3 Minimum amount of characters required to start a search. false <p>Example</p> <pre><code>{\n    \"visibleWFS\": {\n        \"minChars\": 3\n    }\n}\n</code></pre>"},{"location":"User/Portal-Config/config.json/#portalconfigsearchbarvisiblevector","title":"Portalconfig/searchBar/visibleVector","text":"<p>Visible vector layer search configuration. For all vector layers supposed to be searchable, set the searchField attribute in the layer definition object \"Fachdaten\".</p> Name Required Type Default Description Expert minChars no Integer 3 Minimum amount of characters required to start a search. false layerTypes no enum[\"WFS\", \"GeoJSON\"] [\"WFS\"] Vector layer types to be used. true gfiOnClick no Boolean false Opens the GetFeatureInfo (gfi) window on clicking a search result. false <p>Example</p> <pre><code>{\n    \"visibleVector\": {\n        \"minChars\": 3,\n        \"layerTypes\": [\"WFS\", \"GeoJSON\"]\n    }\n}\n</code></pre>"},{"location":"User/Portal-Config/config.json/#portalconfigtree","title":"Portalconfig.tree","text":"<p>Configuration of the menu tree.</p> Name Required Type Default Description Expert highlightedFeatures no highlightedFeatures Configuration in addition to feature highlighting. false showScaleTooltip no Boolean false Flag whether the scale range is displayed in the layer tooltip in addition to the name of the corresponding layer. false <p>Example <pre><code>#!json\n\"tree\":{\n    \"highlightedFeatures\": {\n        \"active\": true,\n        \"layerName\": \"common:tree.selectedFeatures\"\n    },\n    \"showScaleTooltip\": true\n},\n</code></pre></p>"},{"location":"User/Portal-Config/config.json/#portalconfigtreehighlightedfeatures","title":"Portalconfig.tree.highlightedFeatures","text":"<p>Configuration in addition to highlighting features. If features are highlighted with the \"List\" or \"Select Features\" tool with \"Zoom to this Feature\" or via url parameter, then a layer with these features is selectable in the menu tree.</p> Name Required Type Default Description Expert active no Boolean false Indicates whether this feature is active. false layerName no String \"common:tree.selectedFeatures\" Name of the created layer with the highlighted features. The name also contains the name of the tool that was used. true <p>Example <pre><code>#!json\n\"highlightedFeatures\": {\n    \"active\": false,\n    \"layerName\": \"common:tree.selectedFeatures\"\n},\n</code></pre></p>"},{"location":"User/Portal-Config/config.json/#portalconfiglayerinformation","title":"Portalconfig.layerInformation","text":"<p>Configuration of layerInformation.</p> Name Required Type Default Description Expert showMetaDataRevision no boolean true Decides if to show \"Letzte \u00c4nderung\" in Meta data of layer information false <p>Example <pre><code>#!json\n\"layerInformation\":{\n    \"showMetaDataRevision\": true\n},\n</code></pre></p>"},{"location":"User/Portal-Config/config.json/#portalconfigcontrols","title":"Portalconfig.controls","text":"Name Required Type Default Description Expert attributions no Boolean/attributions false Additional layer information to be shown in the portal. false fullScreen no Boolean false Allows the user to view the portal in full screen mode, that is, without the browser's tabs and address bar, by clicking a button. A second click on the element returns the view back to normal. false mousePosition no Boolean false Display mouse pointer coordinates. false orientation no orientation The orientation control uses the browser's geolocation feature to determine the user's coordinates. false zoom no Boolean false Defines whether zoom buttons should be displayed. false overviewmap no overviewMap false Deprecated in 3.0.0. Please use <code>overviewMap</code> instead. false overviewMap no overviewMap false Overview map. false rotation no rotation false Control that shows the current rotation of the map. With a click the map rotation can be set to north again. See also <code>mapInteractions</code> in config.js.md. false totalview no totalView false Deprecated in 3.0.0. Please use \"totalView\" instead. false totalView no totalView false Offers a button to return to the initial view. false button3d no Boolean false Defines whether a 3D mode switch button is shown. false orientation3d no Boolean false Defines whether the 3D mode is to show a navigation element inspired by the classical compass winds. false freeze no Boolean false Whether a \"lock view\" button is shown. Within the <code>TABLE</code> style, this element is part of the tool window. false backforward no backForward false Deprecated in 3.0.0. Please use \"backForward\" instead. false backForward no backForward false Shows buttons to jump to previous and next map views. false startTool no startTool false Displays buttons for the configured tools. These can be used to open and close the respective tools. false"},{"location":"User/Portal-Config/config.json/#portalconfigcontrolsattributions","title":"Portalconfig.controls.attributions","text":"<p>The entry <code>attributions</code> may be of type boolean or object. If of type boolean, the flag decides whether available attributions are shown. When of type object, the following attributes may be set:</p> Name Required Type Default Description Expert isInitOpenDesktop no Boolean true Defines whether the attributions are open initially in desktop mode. false isInitOpenMobile no Boolean false Defines whether the attributions are open initially in mobile mode. false <p>Boolean example</p> <pre><code>{\n    \"attributions\": true\n}\n</code></pre> <p>Object example</p> <pre><code>{\n    \"attributions\": {\n        \"isInitOpenDesktop\": true,\n        \"isInitOpenMobile\": false\n    }\n}\n</code></pre>"},{"location":"User/Portal-Config/config.json/#portalconfigcontrolsorientation","title":"Portalconfig.controls.orientation","text":"Name Required Type Default Description Expert zoomMode no enum[\"once\", \"always\"] \"once\" The user's location is determined and a marker turned on or off. This requires providing the portal via https. Modes: once zooms to the user's location once, always zooms to the user position on each activation. false poiDistances no Boolean/Integer[] true Defines whether the feature \"Close to me\", which shows a list of nearby points of interest, is provided. If an array is configured, multiple such lists with the given distance in meters are offered. When simply setting <code>poiDistances: true</code>, the used distances are <code>[500,1000,2000]</code>. false <p>Example using type boolean poiDistances</p> <pre><code>{\n    \"orientation\": {\n        \"zoomMode\": \"once\",\n        \"poiDistances\": true\n    }\n}\n</code></pre> <p>Example using type number[] porDistances</p> <pre><code>{\n    \"orientation\": {\n        \"zoomMode\": \"once\",\n        \"poiDistances\": [500, 1000, 2000, 5000]\n    }\n}\n</code></pre>"},{"location":"User/Portal-Config/config.json/#portalconfigcontrolsoverviewmap","title":"Portalconfig.controls.overviewMap","text":"<p>The attribute overviewMap may be of type boolean or object. If of type boolean, an overview map is shown with a default configuration. When of type object, the following attributes may be set:</p> Name Required Type Default Description resolution no Integer Deprecated in 3.0.0. Defines the overview map resolution. If not set, the map section displayed is changed on zoom automatically. baselayer no LayerId Deprecated in 3.0.0. Please use <code>layerId</code> instead. Allows using a different layer for the overview map element. The value must be an id from the <code>services.json</code> used in the portal's <code>config.js</code> parameter <code>layerConf</code>. layerId no LayerId Allows using a different layer for the overview map element. The value must be an id from the <code>services.json</code> used in the portal's <code>config.js</code> parameter <code>layerConf</code>. isInitOpen no Boolean true Defines whether the overview map is initially closed or opened. <p>Example using type object overviewMap</p> <pre><code>{\n    \"overviewMap\": {\n        \"resolution\": 305.7487246381551,\n        \"layerId\": \"452\",\n        \"isInitOpen\": false\n    }\n}\n</code></pre> <p>Example using type boolean overviewMap</p> <pre><code>{\n    \"overviewMap\": true\n}\n</code></pre>"},{"location":"User/Portal-Config/config.json/#portalconfigcontrolsrotation","title":"Portalconfig.controls.rotation","text":"<p>The attribute rotation may be of type boolean or object. If of type boolean and value is set to true, the rotation control is just shown when the map rotation is not equal north/0. When of type object, the following attributes may be set:</p> Name Verpflichtend Typ Default Beschreibung showAlways no Boolean false If the attribut is set to true the control is shown permanently . Via default it appears only if the map rotation is not equal north/0. <p>Example using type object rotation <pre><code>#!json\n\"rotation\": {\n    \"showAlways\": true\n}\n</code></pre></p> <p>Example using type boolean rotation <pre><code>#!json\n\"rotation\": true\n</code></pre></p>"},{"location":"User/Portal-Config/config.json/#portalconfigcontrolstotalview","title":"Portalconfig.controls.totalView","text":"<p>The attribute totalView may be of type boolean or object. If of type boolean, it shows a button using the default configuration that allows the user to switch back to the initial view. When of type object, the following attributes may be set:</p> Name Required Type Default Description Expert icon no String \"bi-skip-backward-fill\" Allows changing the button's icon. false tableIcon no String \"bi-house-door-fill\" Allows changing the list item's icon in <code>TABLE</code> style. false <p>Example using type object totalView</p> <pre><code>{\n    \"totalView\" : {\n        \"icon\": \"bi-skip-forward-fill\",\n        \"tableIcon\": \"bi-skip-forward-fill\"\n    }\n}\n</code></pre> <p>Example using type boolean totalView</p> <pre><code>{\n    \"totalView\": true\n}\n</code></pre>"},{"location":"User/Portal-Config/config.json/#portalconfigcontrolsbackforward","title":"Portalconfig.controls.backForward","text":"<p>The attribute backForward may be of type boolean or object. If of type boolean, it shows a button using the default configuration that allows the user to switch back and forth between view states. When of type object, the following attributes may be set:</p> Name Required Type Default Description Expert iconFor no String Allows changing the icon on the forward button. false iconBack no String Allows changing the icon on the backwards button. false <p>Example using type object backForward</p> <pre><code>{\n    \"backForward\" : {\n        \"iconFor\": \"bi-skip-forward-fill\",\n        \"iconBack\": \"bi-skip-backward-fill\"\n    }\n}\n</code></pre> <p>Example using type boolean backForward</p> <pre><code>{\n    \"backForward\": true\n}\n</code></pre>"},{"location":"User/Portal-Config/config.json/#portalconfigcontrolsstarttool","title":"Portalconfig.controls.startTool","text":"<p>The startTool attribute must be of type Object. A button is displayed for each configured tool, which can be used to open and close the respective tool. The requirement is that the tools are also configured under Tools.</p> Name Verpflichtend Typ Default Beschreibung Expert tools yes String[] Here you can configure the tools to which a button is to be attached.. false <p>Example startTool: <pre><code>#!json\n\"startTool\": {\n    \"tools\": [\"selectFeatures\", \"draw\"]\n}\n</code></pre></p>"},{"location":"User/Portal-Config/config.json/#portalconfigportaltitle","title":"Portalconfig.portalTitle","text":"<p>The menu bar allows showing a portal name and portal image if sufficient horizontal space is available. The elements are not shown in mobile mode.</p> Name Required Type Default Description Expert title no String \"Master\" Portal name. false logo no String Path to an external image file. If no image is set, the title will be shown without an accompanying logo. false link no String \"https://geoinfo.hamburg.de\" URL of an external website to link to. false tooltip no String Deprecated in 3.0.0. Please use <code>toolTip</code> instead. Shown on hovering the portal logo. false toolTip no String \"Landesbetrieb Geoinformation und Vermessung\" Shown on hovering the portal logo. false <p>Example</p> <pre><code>{\n    \"portalTitle\": {\n        \"title\": \"Master\",\n        \"logo\": \"https://geodienste.hamburg.de/lgv-config/img/hh-logo.png\",\n        \"link\": \"https://geoinfo.hamburg.de\",\n        \"toolTip\": \"Landesbetrieb Geoinformation und Vermessung\"\n    }\n}\n</code></pre>"},{"location":"User/Portal-Config/config.json/#portalconfigmapview","title":"Portalconfig.mapView","text":"Name Required Type Default Description Expert backgroundImage no String \"https://bitbucket.org/geowerkstatt-hamburg/masterportal/src/dev/doc/config.json.md#markdown-header-portalconfigmapview\" Path to an alternative background image. false startCenter no Coordinate [565874, 5934140] Initial center coordinate. false extent no Extent [510000.0, 5850000.0, 625000.4, 6000000.0] Map extent - map may not be moved outside these boundaries. false startResolution no Float 15.874991427504629 The initial map resolution from the <code>options</code> element. Used in preference to <code>startZoomLevel</code>. false resolution no Float 15.874991427504629 Deprecated in 3.0.0 Please use \"startResolution\". false startZoomLevel no Integer The initial map zoom level from the <code>options</code> element. If <code>resolutions</code> is set, this is ignored. false zoomLevel no Integer Deprecated in 3.0.0 Please use \"startZoomLevel\". false epsg no String \"EPSG:25832\" Coordinate reference system EPSG code. The code must be defined as a <code>namedProjection</code>. false options no option[] [{\"resolution\":66.14579761460263,\"scale\":250000,\"zoomLevel\":0}, {\"resolution\":26.458319045841044,\"scale\":100000,\"zoomLevel\":1}, {\"resolution\":15.874991427504629,\"scale\":60000,\"zoomLevel\":2}, {\"resolution\": 10.583327618336419,\"scale\":40000,\"zoomLevel\":3}, {\"resolution\":5.2916638091682096,\"scale\":20000,\"zoomLevel\":4}, {\"resolution\":2.6458319045841048,\"scale\":10000,\"zoomLevel\":5}, {\"resolution\":1.3229159522920524,\"scale\":5000,\"zoomLevel\":6}, {\"resolution\":0.6614579761460262,\"scale\":2500,\"zoomLevel\":7}, {\"resolution\":0.2645831904584105,\"scale\": 1000,\"zoomLevel\":8}, {\"resolution\":0.13229159522920521,\"scale\":500,\"zoomLevel\":9}] Available scale levels and their resolutions. false twoFingerPan no Boolean false Should a 2-Finger-Pan be set on mobile devices instead of a 1-Finger-Pan? false <p>Example</p> <pre><code>{\n    \"mapView\": {\n        \"backgroundImage\": \"https://geodienste.hamburg.de/lgv-config/img/backgroundCanvas.jpeg\",\n        \"startCenter\": [561210, 5932600],\n        \"options\": [\n            {\n                \"resolution\": 611.4974492763076,\n                \"scale\": 2311167,\n                \"zoomLevel\": 0\n            },\n            {\n                \"resolution\": 305.7487246381551,\n                \"scale\": 1155583,\n                \"zoomLevel\": 1\n            },\n            {\n                \"resolution\": 152.87436231907702,\n                \"scale\": 577791,\n                \"zoomLevel\": 2\n            },\n            {\n                \"resolution\": 76.43718115953851,\n                \"scale\": 288896,\n                \"zoomLevel\": 3\n            },\n            {\n                \"resolution\": 38.21859057976939,\n                \"scale\": 144448,\n                \"zoomLevel\": 4\n            },\n            {\n                \"resolution\": 19.109295289884642,\n                \"scale\": 72223,\n                \"zoomLevel\": 5\n            },\n            {\n                \"resolution\": 9.554647644942321,\n                \"scale\": 36112,\n                \"zoomLevel\": 6\n            },\n            {\n                \"resolution\": 4.7773238224711605,\n                \"scale\": 18056,\n                \"zoomLevel\": 7\n            },\n            {\n                \"resolution\": 2.3886619112355802,\n                \"scale\": 9028,\n                \"zoomLevel\": 8\n            },\n            {\n                \"resolution\": 1.1943309556178034,\n                \"scale\": 4514,\n                \"zoomLevel\": 9\n            },\n            {\n                \"resolution\": 0.5971654778089017,\n                \"scale\": 2257,\n                \"zoomLevel\": 10\n            }\n        ],\n        \"extent\": [510000.0, 5850000.0, 625000.4, 6000000.0],\n        \"resolution\": 15.874991427504629,\n        \"zoomLevel\": 1,\n        \"epsg\": \"EPSG:25832\"\n    }\n}\n</code></pre>"},{"location":"User/Portal-Config/config.json/#portalconfigmapviewoption","title":"Portalconfig.mapView.option","text":"<p>An option defines a zoom level. Each zoom level is defined by resolution, scale number, and a unique zoom level. The higher the zoom level, the smaller the scale and the closer you have zoomed.</p> Name Required Type Default Description Expert resolution yes Number Zoom level definition's resolution. false scale yes Integer Zoom level definition's scale. false zoomLevel yes Integer Zoom level definition's zoom level. false <p>mapView option example</p> <pre><code>{\n    \"resolution\": 611.4974492763076,\n    \"scale\": 2311167,\n    \"zoomLevel\": 0\n}\n</code></pre>"},{"location":"User/Portal-Config/config.json/#portalconfigquickhelp","title":"Portalconfig.quickHelp","text":"<p>For a detailed documentation of the QuickHelp window see the QuickHelp documentation .</p> Name Required Type Default Description Expert configs yes configs {\"search\": true, \"tree\": true} The configuration for existing as well as new QuickHelp windows. false <pre><code>{\n    \"Portalconfig\": {\n        \"quickHelp\": {\n            \"configs\": {}\n        }\n    }\n}\n</code></pre>"},{"location":"User/Portal-Config/config.json/#portalconfigquickhelpconfigs","title":"Portalconfig.quickHelp.configs","text":"Name Required Type Default Description Expert search no search true Configuration of the QuickHelp window of the SearchBar. false tree no tree true Configuration of the QuickHelp window of the topic tree. false <pre><code>{\n    \"Portalconfig\": {\n        \"quickHelp\": {\n            \"configs\": {\n                \"search\": true,\n                \"tree\": true\n            }\n        }\n    }\n}\n</code></pre>"},{"location":"User/Portal-Config/config.json/#portalconfigquickhelpconfigssearch","title":"Portalconfig.quickHelp.configs.search","text":"Name Required Type Default Description Expert title no String \"\" The title/heading of the QuickHelp window. false content no section[] [] The collection of contents or manipulations as an array. false <pre><code>{\n    \"Portalconfig\": {\n        \"quickHelp\": {\n            \"configs\": {\n                \"search\": {\n                    \"title\": \"A new title for this QuickHelp window\",\n                    \"content\": []\n                }\n            }\n        }\n    }\n}\n</code></pre>"},{"location":"User/Portal-Config/config.json/#portalconfigquickhelpconfigssearchsection","title":"Portalconfig.quickHelp.configs.search.section","text":"<p>A section is an object with a title and a list of paragraphs. A section can be manipulated using \"before\", \"after\" and \"hide\" keywords.</p> Name Required Type Default Description Expert title no String \"\" The title/heading of the section. false list no paragraph[] [] An array of paragraphs or images of the QuickHelp section. false before no String A Section Key before which this new section should be hooked. false after no String A Section Key behind which this new section should be hooked. false hide no String A Section Key that leads to the hiding/removal of an existing section addressed with the Section Key. false <pre><code>{\n    \"Portalconfig\": {\n        \"quickHelp\": {\n            \"configs\": {\n                \"search\": {\n                    \"title\": \"A new title for this QuickHelp window\",\n                    \"content\": [\n                        {\n                            \"title\": \"Title of the new section\",\n                            \"list\": []\n                        }\n                    ]\n                }\n            }\n        }\n    }\n}\n</code></pre>"},{"location":"User/Portal-Config/config.json/#portalconfigquickhelpconfigssearchsectionparagraph","title":"Portalconfig.quickHelp.configs.search.section.paragraph","text":"<p>A paragraph in the sense of the QuickHelp configuration is an object or string that exactly describes the content at that point. There are two types of paragraph elements.</p> <p>The paragraph text element</p> <p>Can also be created as a pure translation key (string) and will then be converted to a paragraph element of type \"text/plain\". Pure text can also be specified, but then it is mandatory under the text key of the object (pure text is not possible as a pure string).</p> <p>The paragraph image element</p> <p>Can also be specified as a plain image name (string), in which case the imgPath configured in config.js would be automatically added as its base path. Configure as an object to specify external images with imgPath as url and imgName as name of the image.</p> Name Required Type Default Description Expert text no String \"\" The text as Translation Key or pure text. false type no String \"text/plain\" The text type. If \"text/html\" is specified, the given text will be rendered as html code. false imgName no String \"\" The name of the image to display. false imgPath no String \"\" The path to the image if omitted is taken imgPath from config.js. false <pre><code>{\n    \"Portalconfig\": {\n        \"quickHelp\": {\n            \"configs\": {\n                \"search\": {\n                    \"title\": \"A new title for this QuickHelp window\",\n                    \"content\": [\n                        {\n                            \"title\": \"Title of the new section\",\n                            \"list\": [\n                                {\n                                    \"text\": \"This is the first paragraph.\",\n                                    \"type\": \"text/plain\"\n                                },\n                                {\n                                    \"imgName\": \"allgemein.png\",\n                                    \"imgPath\": \"https://geodienste.hamburg.de/lgv-config/img/\"\n                                },\n                                {\n                                    \"text\": \"This is the second &lt;i&gt;paragraph&lt;/i&gt; with html content.\",\n                                    \"type\": \"text/html\"\n                                }\n                            ]\n                        },\n                        {\n                            \"after\": \"generalInfo\",\n                            \"title\": \"Title of a new section after generalInfo\",\n                            \"list\": [\n                                {\n                                    \"text\": \"This is a paragraph.\",\n                                    \"type\": \"text/plain\"\n                                }\n                            ]\n                        },\n                        {\"hide\": \"generalInfo\"}\n                    ]\n                }\n            }\n        }\n    }\n}\n</code></pre>"},{"location":"User/Portal-Config/config.json/#portalconfigquickhelpconfigstree","title":"Portalconfig.quickHelp.configs.tree","text":"Name Required Type Default Description Expert title no String \"\" The title/heading of the QuickHelp window. false content no section[] [] The collection of contents or manipulations as an array. false <pre><code>{\n    \"Portalconfig\": {\n        \"quickHelp\": {\n            \"configs\": {\n                \"tree\": {\n                    \"title\": \"A new title for this QuickHelp window\",\n                    \"content\": []\n                }\n            }\n        }\n    }\n}\n</code></pre>"},{"location":"User/Portal-Config/config.json/#portalconfigquickhelpconfigstreesection","title":"Portalconfig.quickHelp.configs.tree.section","text":"<p>A section is an object with a title and a list of paragraphs. A section can be manipulated using \"before\", \"after\" and \"hide\" keywords.</p> Name Required Type Default Description Expert title no String \"\" The title/heading of the section. false list no paragraph[] [] An array of paragraphs or images of the QuickHelp section. false before no String A Section Key before which this new section should be hooked. false after no String A Section Key behind which this new section should be hooked. false hide no String A Section Key that leads to the hiding/removal of an existing section addressed with the Section Key. false <pre><code>{\n    \"Portalconfig\": {\n        \"quickHelp\": {\n            \"configs\": {\n                \"tree\": {\n                    \"title\": \"A new title for this QuickHelp window\",\n                    \"content\": [\n                        {\n                            \"title\": \"Title of the new section\",\n                            \"list\": []\n                        }\n                    ]\n                }\n            }\n        }\n    }\n}\n</code></pre>"},{"location":"User/Portal-Config/config.json/#portalconfigquickhelpconfigstreesectionparagraph","title":"Portalconfig.quickHelp.configs.tree.section.paragraph","text":"<p>A paragraph in the sense of the QuickHelp configuration is an object or string that exactly describes the content at that point. There are two types of paragraph elements.</p> <p>The paragraph text element</p> <p>Can also be created as a pure translation key (string) and will then be converted to a paragraph element of type \"text/plain\". Pure text can also be specified, but then it is mandatory under the text key of the object (pure text is not possible as a pure string).</p> <p>The paragraph image element</p> <p>Can also be specified as a plain image name (string), in which case the imgPath configured in config.js would be automatically added as its base path. Configure as an object to specify external images with imgPath as url and imgName as name of the image.</p> Name Required Type Default Description Expert text no String \"\" The text as Translation Key or pure text. false type no String \"text/plain\" The text type. If \"text/html\" is specified, the given text will be rendered as html code. false imgName no String \"\" The name of the image to display. false imgPath no String \"\" The path to the image if omitted is taken imgPath from config.js. false <pre><code>{\n    \"Portalconfig\": {\n        \"quickHelp\": {\n            \"configs\": {\n                \"tree\": {\n                    \"title\": \"A new title for this QuickHelp window\",\n                    \"content\": [\n                        {\n                            \"title\": \"Title of the new section\",\n                            \"list\": [\n                                {\n                                    \"text\": \"This is the first paragraph.\",\n                                    \"type\": \"text/plain\"\n                                },\n                                {\n                                    \"imgName\": \"allgemein.png\",\n                                    \"imgPath\": \"https://geodienste.hamburg.de/lgv-config/img/\"\n                                },\n                                {\n                                    \"text\": \"This is the second &lt;i&gt;paragraph&lt;/i&gt; with html content.\",\n                                    \"type\": \"text/html\"\n                                }\n                            ]\n                        },\n                        {\n                            \"before\": \"generalInfo\",\n                            \"title\": \"Title of a new section before generalInfo\",\n                            \"list\": [\n                                {\n                                    \"text\": \"This is a paragraph.\",\n                                    \"type\": \"text/plain\"\n                                }\n                            ]\n                        },\n                        {\"hide\": \"generalInfo\"}\n                    ]\n                }\n            }\n        }\n    }\n}\n</code></pre>"},{"location":"User/Portal-Config/config.json/#portalconfigmenu","title":"Portalconfig.menu","text":"<p>This field allows creating and ordering menu entries. The order of tools corresponds to the entry order within the config.json file.</p> Name Required Type Default Description Expert ansichten no ansichten Preconfigured map view in 2D and 3D mode false info no info Menu folder containing tools or staticlinks. false legend no legend The legend for all visible layers is displayed here. false login no login Configuration of login with an OIDC server. false tools no tools Menu folder containing tools. false tree no tree Representation and position of the topic selection tree. false"},{"location":"User/Portal-Config/config.json/#portalconfigmenuansichten","title":"Portalconfig.menu.ansichten","text":"<p>Configuration options for map views.</p> Name Required Type Default Description Expert name yes String Name of the map views in the menu. false icon no String \"bi-binoculars-fill\" Icon of the map views in the menu. false children no children false Configurations of any number of map views. false"},{"location":"User/Portal-Config/config.json/#portalconfigmenuansichtenchildren","title":"Portalconfig.menu.ansichten.children","text":"<p>Configuration options for map views.</p> Name Required Type Default Description Expert view no view Configuration of a single map view. false"},{"location":"User/Portal-Config/config.json/#portalconfigmenuansichtenchildrenview","title":"Portalconfig.menu.ansichten.children.view","text":"<p>Configuration options for a map view.</p> Name Required Type Default Description Expert name yes String Map view name. false type yes String Type of map view, must always be \"viewpoint\". false icon no String icon of the map view in the menu. false center no Number[] Coordinate at which the map view is centered. false zoomLevel no Number Zoom level of the map view. false altitude no Number Altitude of the camera in meters. Used only for map views in 3D mode. false heading no Number Heading of the camera in Radiant. Used only for map views in 3D mode. false tilt no Number Tilt of the camera in radians. Used only for map views in 3D mode. false <p>Example of a map view for 2D and 3D mode <pre><code>#!json\n\"ansichten\": {\n    \"name\": \"translate#common:menu.views.name\",\n    \"icon\": \"bi-binoculars-fill\",\n    \"children\": {\n        \"view\": {\n            \"name\": \"translate#common:menu.views.view01\",\n            \"type\": \"viewpoint\",\n            \"icon\": \"bi-bullseye\",\n            \"center\": [\n                564028.7954571751,\n                5934555.967867207\n            ],\n            \"zoomLevel\": 7.456437968949651,\n            \"altitude\": 272.3469798217454,\n            \"heading\": -0.30858728378862876,\n            \"tilt\": 0.9321791580603296\n        }\n    }\n}\n</code></pre></p>"},{"location":"User/Portal-Config/config.json/#portalconfigmenulegend","title":"Portalconfig.menu.legend","text":"<p>Legend configuration options.</p> Name Required Type Default Description Expert name yes String Legend name. false icon no String \"bi-lightbulb\" Legend icon. false showCollapseAllButton no Boolean false Option to en-/disable all legends. false showLegend no Boolean false Option to display the legend when starting the portal false"},{"location":"User/Portal-Config/config.json/#portalconfigmenulogin","title":"Portalconfig.menu.login","text":"Name Required Type Default Description Expert name yes String The name for the module in the menu. Overwritten when the user is logged in. false icon yes String The icon next to the login button in the menu. Will be changed when the user is logged in (see module store). false <pre><code>{\n    \"Portalconfig\": {\n        \"menu\": {\n            \"login\": {\n                \"name\": \"translate#common:modules.login.login\",\n                \"icon\": \"bi-door-open\"\n            }\n        }\n    }\n}\n</code></pre>"},{"location":"User/Portal-Config/config.json/#portalconfigmenuinfo","title":"Portalconfig.menu.info","text":"<p>This is a menu tab typically containing links (<code>staticlinks</code>) to external information sources. It may also contain tools (<code>tools</code>).</p> Name Required Type Default Description Expert children no children Menu tab children configuration. false"},{"location":"User/Portal-Config/config.json/#portalconfigmenuinfochildren","title":"Portalconfig.menu.info.children","text":"<p>List of tools (<code>tools</code>) or links (<code>staticlinks</code>) appearing in the menu tab <code>info</code>.</p> Name Required Type Default Description Expert staticlinks no staticlink[] Configuration object creating links in the menu tab. false"},{"location":"User/Portal-Config/config.json/#portalconfigmenutree","title":"Portalconfig.menu.tree","text":"<p>Hier k\u00f6nnen die Men\u00fceintr\u00e4ge und deren Anordnung konfiguriert werden. Die Reihenfolge der Werkzeuge ergibt sich aus der Reihenfolge in der Config.json.</p> Name Required Type Default Description Expert name yes String Name des Themenbaumes. false icon no String CSS Klasse des icons. false isInitOpen no Boolean false Gibt an ob der Themenbaum initial ge\u00f6ffnet ist. false quickHelp no Boolean false Deprecated in the next major-release. Defines whether the QuickHelp feature is offered for the search bar. false"},{"location":"User/Portal-Config/config.json/#portalconfigmenufolder","title":"Portalconfig.menu.folder","text":"<p>A folder object defined by a name, icon, and its children.</p> Name Required Type Default Description Expert name yes String Folder's menu name. false icon yes String \"bi-folder2-open\" CSS icon class shown in front of the folder name. false children no tool/staticlinks Folder child elements. false <p>Example</p> <pre><code>{\n    \"tools\": {\n        \"name\": \"Tools\",\n        \"icon\": \"bi-tools\",\n        \"children\": {\n            \"draw\": {\n                \"name\": \"Draw / Write\",\n                \"icon\": \"bi-lightbulb\"\n            }\n        }\n    }\n}\n</code></pre>"},{"location":"User/Portal-Config/config.json/#portalconfigmenutools","title":"Portalconfig.menu.tools","text":"Name Required Type Default Description Expert children no children Tool configuration. false"},{"location":"User/Portal-Config/config.json/#portalconfigmenutoolschildren","title":"Portalconfig.menu.tools.children","text":"<p>List of all configurable tools. Each tool inherits the properties of tool and can (or must, respectively) provide the defined attributes as mentioned in that definition. Alternatively, also the paths Portalconfig.menu.info, Portalconfig.menu.simulation or Portalconfig.menu.utilities can be used to hold tool configs.</p> Name Required Type Default Description Expert addWMS no addWMS This tool allows loading specific WMS layers. This is done by providing a URL. All the service's layers are retrieved and offered in the layer tree in section \"External technical data\". Using this tool is only compatible with the <code>treeType</code> \"custom\" or \"default\". true bufferAnalysis no bufferAnalysis This buffer analysis allows the selection of a source layer, a buffer radius and a target layer. The chosen buffer radius will then be shown around features of the selected source layer. At the moment a target layer is selected, only the features of this layer will be shown, if they are outside the buffer radii. It is also possible to invert the result. In this case the resulting features will only be show if they are inside the radii. If the portal's treeType is configured to be \"custom\", only layers active at tool opening time are available for comparison. false compareFeatures no compareFeatures Offers a comparison option for vector features. The getFeatureInfo (GFI) window will offer a clickable star symbol to put elements on the comparison list. Works when used together with the GFI theme Default. false contact no contact The contact form allows users to send messages to a configured mail address. For example, this may be used to allow users to submit errors and suggestions. false coord no coord Deprecated in 3.0.0. Please use <code>supplyCoord</code> instead. Tool to read coordinates on mouse click. When clicking once, the coordinates in the view are frozen and can be copied on clicking the displaying input elements to the clipboard, i.e. you can use them in another document/chat/mail/... with <code>Strg+V</code>. false coordToolkit no coordToolkit Coordinate query: Tool to read coordinates on mouse click. When clicking once, the coordinates in the view are frozen and can be copied on clicking the displaying input elements to the clipboard, i.e. you can use them in another document/chat/mail/... with <code>Strg+V</code>. Coordinate search:search for coordinates with switchable coordinate reference system. The tool will zoom to any given coordinate and set a marker on it. The coordinate systems are obtained from config.js. false draw no draw The draw tool allows painting points, lines, polygons, circles, double circles, and texts to the map. You may download these drawing as KML, GeoJSON, or GPX. false extendedFilter no extendedFilter Deprecated in 3.0.0. Please use \"filter\" instead. Dynamic filtering of WFS features. This requires an <code>extendedFilter</code> configuration on the WFS layer object. false featureLister no featureLister Lists all features of a vector layer and highlights the feature over whose name the mouse is located. false fileImport no fileImport Import KML, GeoJSON, and GPX files with this tool. false filter no filter Configuration for an advanced filter for WFS vector layers. false gfi no gfi Via  getFeatureInfo (GFI) information to arbitrary layers can be requested. For WMS, the data is fetched with a GetFeatureInfo request. Vector data (WFS, Sensor, GeoJSON, etc.) is already present in the client and will be shown from the already fetched information. false kmlimport no kmlimport Deprecated in 3.0.0. Please use <code>fileImport</code> instead. false layerClusterToggler no layerClusterToggler This tool allows a cluster layers to be active and deactive together. false layerSlider no layerSlider The layerSlider tool allows showing arbitrary services in order. This can e.g. be used to show aerial footage from multiple years in succession. false measure no measure Allows measuring areas and distances in the units m/km/nm resp. m\u00b2/ha/km\u00b2. false modeler3D no measure Allows importing 3D models in .gltf, .dae, .obj formats and drawing extrudable 3D polygons. false parcelSearch no parcelSearch Deprecated in the next major release. Please use <code>wfsSearch</code> instead. The parcel search tool allows searching for parcels by district and parcel number. Many German administrative units feature a tripartite order, hence the tool offers searching by \"Gemarkung\" (district), \"Flur\" (parcel) (not used in Hamburg), and \"Flurst\u00fcck\" (literally \"parcel piece\"). false print no print Printing module that can be used to export the map's current view as PDF. false routing no routing Routing module to create routes and isochrones. false saveSelection no saveSelection Tool that allows saving the 2D map's current state as sharable URL. This will list all currently visible layers in order, transparency, and visibility, as well as saving the center coordinate. false scaleSwitcher no scaleSwitcher Tool that allows changing the map's current scale. false searchByCoord no searchByCoord Deprecated in 3.0.0. Please use \"coordToolkit\" instead. Coordinate search with switchable coordinate reference system. The tool will zoom to any given coordinate and set a marker on it. false selectFeatures no selectFeatures Allows selecting a set of vector features by letting the user draw a box on the map. Features in that box will be displayed with GFI information. false shadow no shadow Configuration object for the 3D mode shadow time. false styleVT no styleVT Style selection for VT services. Allows switching between styles of a Vector Tile Layer that provides multiple stylings via the <code>services.json</code> file. false supplyCoord no supplyCoord Deprecated in 3.0.0. Please use \"coordToolkit\" instead. Tool to read coordinates on mouse click. When clicking once, the coordinates in the view are frozen and can be copied on clicking the displaying input elements to the clipboard, i.e. you can use them in another document/chat/mail/... with <code>Strg+V</code>. false resetTree no resetTree Tool to reset tree. Clicking on Tool name in the menu under Tools resets the tree. false wfsFeatureFilter no wfsFeatureFilter Deprecated in 3.0.0. Please use <code>filter</code> instead. Filters WFS features. This required configuring <code>\"filterOptions\"</code> on the WFS layer object. false wfsSearch no wfsSearch Makes it possible to create a form to query WFS layers using filters. It is possible to either use a stored query (WFS@2.0.0) or define the query using the defined parameters (WFS@1.1.0). false wfst no wfst WFS-T module to visualize, create, update and delete features. false"},{"location":"User/Portal-Config/config.json/#portalconfigmenutool","title":"Portalconfig.menu.tool","text":"<p>A tool's attribute key defines which tool is loaded. Each tool provides at least the following attributes. To see further configuration options, please visit the tools section.</p> Name Required Type Default Description Expert active no Boolean false Whether the tool is open initially. false icon no String CSS icon class. Icon is shown before the tool name. false isVisibleInMenu no Boolean true If true, the tool is listed in the menu. false keepOpen no Boolean/String/String[] false Whether the tool remains open parallel to other tools. Only works if it is used for one tool and if tool is rendered to sidebar, other tools should be rendered to window. false name yes String Name displayed in the menu. false onlyDesktop no Boolean false Whether the tool should only be visible in desktop mode. false renderToWindow no Boolean true Whether the tool should be displayed in the movable widget element. In mobile mode, the window is always used. false resizableWindow no Boolean false Whether the tool window can be minimized/restored. false <p>Example</p> <pre><code>{\n    \"draw\": {\n        \"name\": \"Draw / Write\",\n        \"icon\": \"bi-lightbulb\"\n    }\n}\n</code></pre>"},{"location":"User/Portal-Config/config.json/#portalconfigmenutoolgfi","title":"Portalconfig.menu.tool.gfi","text":"<p>Displays information to a clicked feature by firing a GetFeatureInfo or GetFeature request, respectively using the loaded data on vector layers.</p> <p>On all GFI request types except directly fetching HTML, which is done by using <code>\"text/html\"</code> as <code>\"infoFormat\"</code> on a WMS, the \"|\" character is interpreted as linebreak. You may also use <code>\"\\r\\n\"</code> or <code>\"\\n\"</code>.</p> Name Required Type Default Description Expert name yes String Name displayed in the menu. false centerMapToClickPoint no Boolean false If true, centers any clicked feature on the map. Only relevant if the <code>desktopType</code> attribute is \"detached\". false icon no String \"bi-info-circle-fill\" CSS icon class. Icon is shown before the tool name. false active no Boolean true Whether GFI is active initially. false desktopType no String \"detached\" Used to choose a GFI template in desktop mode. If using \"attached\", the GFI will be positioned next to the feature. Using \"detached\" will place a marker on the feature and create the GFI window to the right of the map. false coloredHighlighting3D no coloredHighlighting3D Rule definition to override the highlighting of clicked 3D tiles. false highlightVectorRules no highlightVectorRules Rule definition to override the styling of clicked vector data. false hideMapMarkerOnVectorHighlight no Boolean false If set to true, the mapmarker won't be shown on vector highlighting. Only applies for the DetachedTemplate false <p>Examples</p> <pre><code>{\n    \"gfi\":{\n        \"name\": \"Request information\",\n        \"icon\": \"bi-info-circle-fill\",\n        \"active\": true,\n        \"coloredHighlighting3D\": {\n              \"enabled\": true,\n              \"color\": \"GREEN\"\n        },\n        \"highlightVectorRules\": {\n            \"fill\": {\n                \"color\": [215, 102, 41, 0.9]\n            },\n            \"image\": {\n                \"scale\": 1.5\n            },\n            \"stroke\": {\n                \"width\": 4\n            },\n            \"text\": {\n                \"scale\": 2\n            }\n        },\n        \"hideMapMarkerOnVectorHighlight\": true\n    }\n}\n</code></pre> <pre><code>{\n    \"gfi\": {\n        \"name\": \"Request information\",\n        \"icon\": \"bi-info-circle-fill\",\n        \"active\": true\n    }\n}\n</code></pre>"},{"location":"User/Portal-Config/config.json/#portalconfigmenutoolgficoloredhighlighting3d","title":"Portalconfig.menu.tool.gfi.coloredHighlighting3D","text":"<p>Highlight Setting of 3D Tiles. If e.g. a building is selected by left mouse click, it will be highlighted in the given color. For color configuration see Color-documentation</p> Name Required Type Default Description Expert enabled no Boolean true False if coloredHighlighting3D is disabled. false color no String/String[] \"RED\" Color can be configured as Array or Cesium.Color (definition e.g \"GREEN\" for Cesium.Color.GREEN) false <p>Example</p> <pre><code>// Example with Array\ncoloredHighlighting3D: {\n    \"enabled\": true,\n    \"color\": [0, 255, 0, 255]\n}\n\n// Example with Cesium.Color\ncoloredHighlighting3D: {\n    \"enabled\": true,\n    \"color\": \"GREEN\"\n}\n</code></pre>"},{"location":"User/Portal-Config/config.json/#portalconfigmenutoolgfihighlightvectorrules","title":"Portalconfig.menu.tool.gfi.highlightVectorRules","text":"<p>Configuration list to overwrite vector styles on gfi requests. Hint: highlighting only works if there is a styleId in config.json configured for the layer.</p> Name Required Type Default Description Expert fill no fill Settable field: <code>color</code> false image no image Settable field: <code>scale</code> false stroke no stroke Settable field: <code>width</code> false text no text Settable field: <code>scale</code> false"},{"location":"User/Portal-Config/config.json/#portalconfigmenutoolgfihighlightvectorrulesfill","title":"Portalconfig.menu.tool.gfi.highlightVectorRules.fill","text":"Name Required Type Default Description Expert color no Float[] [255, 255, 255, 0.5] RGBA value false <pre><code>{\n    \"fill\": { \"color\": [215, 102, 41, 0.9] }\n}\n</code></pre>"},{"location":"User/Portal-Config/config.json/#portalconfigmenutoolgfihighlightvectorrulesimage","title":"Portalconfig.menu.tool.gfi.highlightVectorRules.image","text":"Name Required Type Default Description Expert scale no Float 1 Scale number false <pre><code>{\n    \"image\": { \"scale\": 1.5 }\n}\n</code></pre>"},{"location":"User/Portal-Config/config.json/#portalconfigmenutoolgfihighlightvectorrulesstroke","title":"Portalconfig.menu.tool.gfi.highlightVectorRules.stroke","text":"Name Required Type Default Description Expert width no Integer 1 Stroke line width false color no Float[] [255, 255, 255, 0.5] RGBA value false <pre><code>{\n    \"stroke\": { \"width\": 4, \"color\": [215, 102, 41, 0.9] }\n}\n</code></pre>"},{"location":"User/Portal-Config/config.json/#portalconfigmenutoolgfihighlightvectorrulestext","title":"Portalconfig.menu.tool.gfi.highlightVectorRules.text","text":"Name Required Type Default Description Expert scale no Float 1 Text scale number false <pre><code>{\n    \"text\": { \"scale\": 2 }\n}\n</code></pre>"},{"location":"User/Portal-Config/config.json/#portalconfigmenutoolfilter","title":"Portalconfig.menu.tool.filter","text":"<p>The filter tool offers a range of options to filter vector data from WFS, OAF, GeoJSON, SensorThingsAPI and VectorTiles services.</p> Name Required Type Default Description Expert layerSelectorVisible no Boolean true To display a selector for the layers. Put to <code>false</code> to show without selector. false multiLayerSelector no Boolean true If layerSelectorVisible true, wether one can open multiple sections of the selector at the same time. false liveZoomToFeatures no Boolean true Defines whether the filter immediately zooms to filter results. false geometrySelectorOptions no filterGeometrySelector[] false Options for an additional tool for filtering within a self-drawn area. If you use this tool in conjunction with external filtering (<code>external</code>: <code>true</code>), please remember to configure your layer filter with geometryName. false minScale no Integer 5000 Minimum zoom level the filter zooms in when displaying filter results. false layers no filterLayer[] [] Configuration of layers to be filtered. Can be an array of plain layer ids also - if so the layer and all snippets are identified automatically. false layerGroups no filterLayerGroups[] [] Configuration of the related layers to be filtered. false saveTo no String \"void\" If set to \"url\", the current filter setting is saved in the URL. This allows the filter setting to be bookmarked. false <p>Example</p> <p>The following example uses only a layer id to generate the filter automatically.</p> <pre><code>{\n    \"filter\": {\n      \"active\": false,\n      \"name\": \"Filter\",\n      \"icon\": \"bi-funnel-fill\",\n      \"renderToWindow\": false,\n      \"deactivateGFI\": false,\n      \"layerSelectorVisible\": false,\n      \"geometrySelectorOptions\": {\n        \"visible\": true\n      },\n      \"layerGroups\": [\n        {\n          \"title\": \"GRUPPE 1\",\n          \"layers\": [\n            {\n              \"layerId\": \"47\"\n            }\n          ]\n        }\n      ],\n      \"layers\": [\n        {\n          \"layerId\": \"8712\"\n        }\n      ]\n    }\n}\n</code></pre>"},{"location":"User/Portal-Config/config.json/#portalconfigmenutoolfilterfiltergeometryselector","title":"Portalconfig.menu.tool.filter.filterGeometrySelector","text":"<p>An additional selection appears above the filter where a geometry can be selected and drawn on the map. The filter filters only in the selected area. If you use this tool in conjunction with external filtering (<code>external</code>: <code>true</code>), please remember to configure your layer filter with geometryName.</p> Name Verpflichtend Typ Default Beschreibung Expert visible yes Boolean true Activates the geometry selector. false geometries no String[] [\"Polygon\", \"Rectangle\", \"Circle\", \"LineString\"] The selectable geometries and their order. false invertGeometry no Boolean true true: The geometry is transparent, the outer area is displayed as a shadow. false: The fill specifications apply to the geometry itself. false fillColor no String \"rgba(0, 0, 0, 0.33)\" The fill color of the outer area (or geometry if invertGeometry = <code>false</code>). false strokeColor no String \"rgba(0, 0, 0, 1)\" The color of the border of the geometry. false strokeWidth no Number 1 The thickness of the border of the geometry. false defaultBuffer no Number 20 The geometry \"LineString\" is given a buffer (in meters) to make the LineString a \"tube\". This is the default distance from the center to the edge in meters. false circleSides no Number 256 The geometry \"Circle\" is converted to a polygon for technical reasons. This is the number of polygon points of the resulting geometry. false additionalGeometries no Boolean false Geometries from a layer can additionally be added to the filter by the id. In that case, an attribute for the name of the geometry must also be specified. false <p>Example</p> <p>Example of the minimal configuration of the filterGeometrySelector.</p> <pre><code>{\n    \"visible\": true\n}\n</code></pre> <p>Example</p> <p>Example of a complete configuration with the default settings of the filterGeometrySelector.</p> <pre><code>{\n    \"visible\": true,\n    \"circleSides\": 256,\n    \"defaultBuffer\": 20,\n    \"geometries\": [\"Polygon\", \"Rectangle\", \"Circle\", \"LineString\"],\n    \"invertGeometry\": true,\n    \"fillColor\": \"rgba(0, 0, 0, 0.33)\",\n    \"strokeColor\": \"rgba(0, 0, 0, 1)\",\n    \"strokeWidth\": 1,\n    \"additionalGeometries\": [\n        {\n            \"layerId\": \"1692\",\n            \"attrNameForTitle\": \"bezirk_name\"\n        }\n    ]\n}\n</code></pre> <p>Example</p> <p>Example of a completely changed configuration of the filterGeometrySelector.</p> <pre><code>{\n    \"visible\": true,\n    \"circleSides\": 32,\n    \"defaultBuffer\": 60,\n    \"geometries\": [\"LineString\", \"Rectangle\", \"Circle\", \"Polygon\"],\n    \"invertGeometry\": false,\n    \"fillColor\": \"rgba(0, 0, 200, 0.1)\",\n    \"strokeColor\": \"rgba(255, 0, 0, 1)\",\n    \"strokeWidth\": 2\n}\n</code></pre>"},{"location":"User/Portal-Config/config.json/#portalconfigmenutoolfilterfilterlayer","title":"Portalconfig.menu.tool.filter.filterLayer","text":"<p>An object to define a layer to filter with.</p> Name Required Type Default Description Expert layerId no String The layer id of the layer to filter. Must be configured in the <code>Themenconfig</code>. false title no String The title to use for the selector (if layerSelectorVisible true). Can be a translation key also. If not set, the layerId will be used by default. false description no String \"\" A description of the layer, displayed when the selector is opened or no layerSelectorVisible is set to <code>false</code>. Can be a translation key also. false shortDescription no String \"\" The shorter version of the description, displayed under the selector title only if layerSelectorVisible is <code>true</code> and the selector is closed. Can be a translation key also. false active no Boolean false Set to <code>true</code> to let the layer selector be initialy opened - only if layerSelectorVisible is set to <code>true</code>. If multiLayerSelector is set to <code>false</code> and more than one filter layer has set active to <code>true</code>, the last filter layer with active <code>true</code> is initialy opened. false resetLayer no Boolean false If true it will change the reset button to a button which resets the whole layer and ignores the prechecked values. Will be ignored if <code>clearAll</code> is set to <code>true</code>. Furthermore, the parameter should not be configured in conjunction with a low <code>paging</code> number, otherwise the complete layer will be displayed on the map only very slowly and delayed when resetting. false strategy no String There are two filter strategies: <code>passive</code> - a filter button is used. And <code>active</code> - the filter will be triggered immediately by any choice made. Passive strategy is used by default. false searchInMapExtent no Boolean false Set to <code>true</code> to activate a generic checkbox, where you can set the filtering to <code>only filter in current browser extent</code>. If the extent checkbox is checked, automatic zooming is disabled. Make sure to set loadingStrategy to <code>all</code> to avoid weird effects when zooming out after filtering in extent. false searchInMapExtentInfo no Boolean true A little icon is shown right hand side of the checkbox. Clicking the icon, a standard description is shown. Set to <code>false</code> to disable this feature. Set to a individual text to use an own description or use a translation key. false searchInMapExtentProactive no Boolean true The checkbox for filtering in the browser extent triggers direct filtering in the current browser extent under <code>strategy</code>: <code>active</code>. This can be disabled by setting <code>searchInMapExtentProactive</code>: <code>false</code>. false searchInMapExtentPreselected no Boolean false The checkbox for filtering in the browser extent is initially selected if <code>searchInMapExtentPreselected</code>: <code>true</code> is set. false showHits no Boolean true After filtering, the hits are displayed. Set to <code>false</code> to not show the hits. false clearAll no Boolean false After clicking button Reset all, all the features will be shown. Set to <code>true</code> to clear all the features after clicking Reselt all button. false wmsRefId no String/String[] \"\" If the layer is filtered, the WMS layer with <code>wmsRefId</code> will be invisible and deactivated from Tree. After resetting the layer, the WMS layer will be activated and visible again. false snippetTags no Boolean true After filtering the current setting is displayed as tags. Set to <code>false</code> to turn of this feature. false labelFilterButton no String \"common:modules.tools.filter.filterButton\" If strategy is set to <code>passive</code> only: The text of the filter button. Can be a translation key. false download no Boolean \"\" Enter true for a file here to activate the download of the data filtered on this layer. A download area will appear at the end of the filter. For VectorTiles, only CSV download works. false paging no Number 1000 The filter will load features into the map in chunks. Paging is the chunk size. If the chunk size is set too low, the filtering will be slowed down. Set the chunk size too high, the loading of the chunk will slow the filtering down. Try it out to find your fastes setup. false extern no Boolean false When set to <code>true</code>, filtering is done on the server side. Useful for big sets of data that can't be loaded into the browser at once. Remember to set the isNeverVisibleInTree flag of the layer to <code>true</code> to avoid loading of the whole data set by user click on its entry in the tree. false geometryName no String \"\" Only for extern <code>true</code> in connection with filtering within polygons: The geometry name of the features to be able to detect an intersection. false filterButtonDisabled no Boolean false Only for strategy <code>passive</code>: Disable the filter button while nothing is selected. false snippets no snippets[] [] Configuration of snippets to adjust the filtering. Can be a minimalistic array of attribute names. Can be left empty to use the automatic identification of all snippets possible. false filterOnMove no Boolean If it is <code>true</code>, the layer will be filtered dynamically after the map moves. Only works with <code>multiLayerSelector</code>: <code>false</code>. With this combination the filter is triggerd when the accordeon will be opened. false minZoom no Number The minimum zoom level for current filter, if current zoom level is smaller than the minimum zoom level, the current filter will be deactivated. false maxZoom no Number The maximum zoom level for current filter, if current zoom level is bigger than the maximum zoom level, the current filter will be deactivated. false <p>Example</p> <p>In this example one snippet is set with only an attrName. The snippet type is detected automatically. See filterLayerSnippets for the advanced configuration of snippets.</p> <pre><code>{\n    \"layerId\": \"8712\",\n    \"title\": \"Schools\",\n    \"strategy\": \"active\",\n    \"searchInMapExtent\": true,\n    \"searchInMapExtentInfo\": true,\n    \"showHits\": true,\n    \"clearAll\": false,\n    \"wmsRefId\": \"21066\",\n    \"shortDescription\": \"School master data and pupil numbers of Hamburg schools\",\n    \"description\": \"School master data and pupil numbers of Hamburg schools\",\n    \"snippetTags\": true,\n    \"paging\": 100,\n    \"filterOnMove\": false,\n    \"minZoom\": 7,\n    \"maxZoom\": 14,\n    \"snippets\": [\n        {\n            \"attrName\": \"rebbz_homepage\"\n        }\n    ]\n}\n</code></pre>"},{"location":"User/Portal-Config/config.json/#portalconfigmenutoolfilterfilterlayergroups","title":"Portalconfig.menu.tool.filter.filterLayerGroups","text":"<p>An object to define a group layer to filter with.</p> Name Required Type Default Description Expert title yes String The title to use for the group layer (if layerSelectorVisible true). Can be a translation key also. false layers no String [] Configuration of layers to be filtered. Can be an array of plain layer ids also - if so the layer and all snippets are identified automatically. The type of layers is filterLayer, but here it was defined as string to avoid repetitive definitions within layerGroups. false <p>Example</p> <p>layerGroups defines related layers. Each group has a title and a list of layers. These are displayed together in the filter.</p> <pre><code>{\n  \"layerGroups\": [\n    {\n      \"title\": \"GRUPPE 1\",\n      \"layers\": [\n        {\n          \"layerId\": \"47\"\n        },\n        {\n          \"layerId\": \"7315\"\n        }\n      ]\n    },\n    {\n      \"title\": \"GRUPPE 2\",\n      \"layers\": [\n        {\n          \"layerId\": \"5105\"\n        }\n      ]\n    }\n  ]\n}\n</code></pre>"},{"location":"User/Portal-Config/config.json/#portalconfigmenutoolfilterfilterlayersnippets","title":"Portalconfig.menu.tool.filter.filterLayer.snippets","text":"<p>An object defining a single snippet.</p> <p>Note: Time-related snippets (<code>date</code> and <code>dateRange</code>) can only be operated in <code>external</code> mode or as a fixed rule (<code>visible</code>: <code>false</code>) if their counterpart at the WFS service is in a correct time format (ISO8601: <code>YYYY-MM-DD</code>).</p> Name Required Type Default Description Expert attrName yes String The attribute name used for filtering. Is to be an array if <code>dateRange</code>, <code>sliderRange</code> or <code>featureInfo</code> is used (see examples). false title no String The title of the snippet. Can be a translation key. If not set, the title is taken from the gfiAttributes and if they are not present, then the attrName is used. Can be set to <code>false</code> to disable the display of a title. Can be set to <code>true</code> to force the display of the attrName. false info no String An info text or translation key. If set, a little icon will shown right hand side of the snippet. Can be set to <code>true</code> to display a default text for the snippet type. false type no String The type of this snippet. Can be one of the following: <code>checkbox</code>, <code>dropdown</code>, <code>text</code>, <code>slider</code>, <code>sliderRange</code>, <code>date</code>, <code>dateRange</code>. Will be indentified automatically if left away, following a data type rule: boolean becomes <code>checkbox</code>, string becomes <code>dropdown</code>, number becomes <code>sliderRange</code>, unknown becomes <code>text</code>. false subTitles no String[] [] Only for snippet type <code>dateRange</code>: The additional from and to labels to be displayed above the calendar fields. As an array with two elements (e.g. [\"from\", \"to\"]). Set subTitles to true to use the values of attrName, to false to not display labels. false operatorForAttrName no String \"AND\" By setting this parameter to <code>OR</code> in conjunction with attrName as an array, it is possible to filter over various attrNames with a logical OR. false operator no String The operator to connect the set value to the value in the database. Can be one of the following - depending if it makes sense for the type and is available for the used interface: <code>INTERSECTS</code>, <code>BETWEEN</code>, <code>EQ</code>, <code>IN</code>, <code>STARTSWITH</code>, <code>ENDSWITH</code>, <code>NE</code>, <code>GT</code>, <code>GE</code>, <code>LT</code>, <code>LE</code>. If left away, defaults are: boolean becomes <code>EQ</code>, string becomes <code>EQ</code>, number becomes <code>BETWEEN</code>, unknown becomes <code>EQ</code>. false visible no Boolean true The snippet is visible. Set to <code>false</code> to hide the snippet: This gives you the power to use <code>prechecked</code> as an <code>always rule</code> to force filtering of a fixed attrName and value. false prechecked no String[]/String Initially checked value. For <code>dropdown</code>, <code>sliderRange</code> and <code>dateRange</code> an array of values, for checkbox a boolean, for slider a number, for text a string and for date a string (following the set <code>format</code>). If <code>visible</code> is set to <code>false</code>, value set by prechecked are forced for filtering. For <code>dropdown</code> with <code>multiselect</code>: If <code>prechecked</code> is set to <code>all</code>, all available values will be selected initially. false value no String[] If omitted, values are determined automatically. If set for <code>dropdown</code>: The values to be selectable in the list. If set for <code>checkbox</code>: Instead of boolean values, the specified values for the <code>true</code> and <code>false</code> states should be taken (e.g. [\"Yes\", \"No\"]). For <code>dateRange</code>: start and end date for date picker and/or slider. For <code>sliderRange</code>: the min and max values. false format no String \"YYYY-MM-DD\" For type <code>date</code> and <code>dateRange</code> only: The format the date is stored in the database. Leave empty for ISO8601. If the format differs from ISO8601, the snippet must be visible (<code>visible</code>: <code>true</code>) and the filter must work in <code>external</code>: <code>false</code> mode. Can be specified as an array of two different formats if an array of different attribute names is also specified as attrName and the date formats of the attribute values differ. false timeouts no timeouts Timeouts to configure for better user experience. false minValue no Number For type <code>date</code> and <code>slider</code> only: The minimum value as number or date string. Leave empty for automatic identification of boundaries. false maxValue no Number For type <code>date</code> and <code>slider</code> only: The maximum value as number or date string. Leave empty for automatic identification of boundaries. false decimalPlaces no Number 0 Defines decimal places for the step for <code>slider</code> and <code>sliderRange</code> false display no String \"default\" If snippet type <code>dropdown</code>: If set to <code>list</code>, a list is displayed instead of a dropdown box. If snippet type <code>dateRange</code>: If set to <code>datepicker</code>, only the selection via calendar will be displayed, if set to <code>slider</code>, only the slider will be displayed, if set to <code>all</code>, datepicker and slider will be displayed. false autoInit no Boolean true For type <code>dropdown</code> only: If set to <code>false</code>: Turns off the automatic identification of value (in case of <code>dropdown</code>) or minValue/maxValue (in case of <code>slider(Range)</code> and <code>date(Range)</code>. false placeholder no String \"\" For type <code>dropdown</code> only: The placeholder to use. Can be a translation key. false multiselect no Boolean true For type <code>dropdown</code> only: Selection of multiple entries. Set to <code>false</code> to switch to single select. false addSelectAll no Boolean false For type <code>dropdown</code> with <code>multiselect: true</code> only: Adds an additional entry on top of the list to select/deselect all entries. false optionsLimit no Number 20000 For type <code>dropdown</code> only: Adds a limit of options in dropdown list. false localeCompareParams no localeCompareParams For type Snippet-Typ <code>dropdown</code> only: The sorting of the dropdown boxes can be adjusted according to your own wishes via this parameter. false delimiter no String For type <code>dropdown</code> only: If feature attributes are themselfs again seperated by a delimiter to act as pseudo array, setting delimiter to the sign that seperates the terms, will result in the expected outcome. false renderIcons no String \"none\" For type <code>dropdown</code> with <code>display: \"list\"</code> only: If set to <code>fromLegend</code> icons will be placed left hand side of each entry. Icons are taken from legend. Use an object with attrNames as keys and imagePath as value {attrName: imagePath} to manually set images (see example). false service no service For the initial filling of a snippet (dropdown, date, slider) an alternative service can be used. This may increase the performance during initial loading. The default is the service of the configured filterLayer. false children no children[] [] Child snippet configuration. true showAllValues no Boolean For <code>dropdown</code> snippet type only: prevents hiding of unselected values when set to <code>true</code>. Can only be used in conjunction with <code>prechecked: \"all\"</code>. false <p>Example</p> <p>Example for a text snippet. A input box with placeholder will be shown for filtering free text.</p> <pre><code>{\n    \"title\": \"Description of school\",\n    \"attrName\": \"school_description\",\n    \"type\": \"text\",\n    \"operator\": \"IN\",\n    \"placeholder\": \"Search in description\"\n}\n</code></pre> <p>Example</p> <p>Example for a checkbox snippet. A checkbox is shown to search for \"Oui\" in the database if checked. The checkbox is checked by default.</p> <pre><code>{\n    \"title\": \"A l'option v\u00e9g\u00e9talienne ?\",\n    \"attrName\": \"vegan_option\",\n    \"type\": \"checkbox\",\n    \"operator\": \"EQ\",\n    \"value\": [\"Oui\", \"Non\"],\n    \"prechecked\": true\n}\n</code></pre> <p>Example</p> <p>Example for a dropdown snippet. A simple dropdown with single select and placeholder is used.</p> <pre><code>{\n    \"title\": \"District\",\n    \"attrName\": \"city_district\",\n    \"type\": \"dropdown\",\n    \"multiselect\": false,\n    \"placeholder\": \"Choose a district\"\n}\n</code></pre> <p>Example</p> <p>Example for a dropdown snippet. A dropdown with multiselect and select all option, manually set icons, info, fixed value and prechecked. Displayed as list.</p> <pre><code>{\n    \"title\": \"District\",\n    \"attrName\": \"city_district\",\n    \"info\": \"Some districts of London.\",\n    \"type\": \"dropdown\",\n    \"display\": \"list\",\n    \"multiselect\": true,\n    \"optionsLimit\": 20000,\n    \"addSelectAll\": true,\n    \"value\": [\n        \"Whitehall and Westminster\",\n        \"Piccadilly and St James's\",\n        \"Soho and Trafalgar Square\",\n        \"Covent Garden and Strand\",\n        \"Bloomsbury and Fitzrovia\"\n    ],\n    \"prechecked\": [\n        \"Piccadilly and St James's\",\n        \"Soho and Trafalgar Square\"\n    ],\n    \"renderIcons\": {\n        \"Whitehall and Westminster\": \"https://example.com/img/whitehall.png\",\n        \"Piccadilly and St James's\": \"https://example.com/img/piccadilly.png\",\n        \"Soho and Trafalgar Square\": \"https://example.com/img/soho.png\",\n        \"Covent Garden and Strand\": \"https://example.com/img/covent.png\",\n        \"Bloomsbury and Fitzrovia\": \"https://example.com/img/bloomsbury.png\"\n    },\n    \"placeholder\": \"Choose a district\"\n}\n</code></pre> <p>Example</p> <p>Example of a dropdown snippet where all available values are initially selected.</p> <pre><code>{\n    \"title\": \"District\",\n    \"attrName\": \"city_district\",\n    \"type\": \"dropdown\",\n    \"multiselect\": true,\n    \"prechecked\": \"all\",\n    \"placeholder\": \"Choose a district\"\n}\n</code></pre> <p>Example</p> <p>Example for a slider snippet. A slider for a single digit and a less or equals operator. With minValue and maxValue to avoid automatic identification of boundaries.</p> <pre><code>{\n    \"title\": \"First classes\",\n    \"attrName\": \"number_of_first_classes\",\n    \"type\": \"slider\",\n    \"operator\": \"LE\",\n    \"minValue\": 1,\n    \"maxValue\": 5,\n    \"decimalPlaces\": 2\n}\n</code></pre> <p>Example</p> <p>Example for a slider range snippet. A slider range without minValue and maxValue to use automatic identification of boundaries.</p> <pre><code>{\n    \"title\": \"Angle d'inclinaison du toit du garage\",\n    \"attrName\": \"angle\",\n    \"type\": \"sliderRange\",\n    \"operator\": \"BETWEEN\",\n    \"decimalPlaces\": 2\n}\n</code></pre> <p>Example</p> <p>Example for a slider range snippet. A slider range with two attrName for min and max. With minValue and max Value to avoid automatic identification of boundaries.</p> <pre><code>{\n    \"title\": \"Angle d'inclinaison du toit du garage\",\n    \"attrName\": [\"angle_minimal\", \"angle_maximal\"],\n    \"type\": \"sliderRange\",\n    \"operator\": \"BETWEEN\",\n    \"value\": [0, 90]\n}\n</code></pre> <p>Example</p> <p>Example for a date snippet. A date picker for a single date with minValue and maxValue to avoid automatic identification of boundaries.</p> <pre><code>{\n    \"title\": \"Birthday\",\n    \"attrName\": \"birthday\",\n    \"type\": \"date\",\n    \"format\": \"YYYY-MM-DD\",\n    \"minValue\": \"2000-01-01\",\n    \"maxValue\": \"2022-12-31\"\n}\n</code></pre> <p>Example</p> <p>Example for a date range snippet. A date range with two attrName for min and max. With a special date format. Uses intersects operator, without minValue and maxValue to use automatic identification of boundaries.</p> <pre><code>{\n    \"title\": \"Bauzeit der Autobahnen\",\n    \"attrName\": [\"autobahn_baubeginn\", \"autobahn_bauende\"],\n    \"type\": \"dateRange\",\n    \"operator\": \"INTERSECTS\",\n    \"format\": \"DD.MM.YY\"\n}\n</code></pre> <p>Example</p> <p>Example of a DateRange snippet. With the slider turned off (<code>display</code>: <code>datepicker</code>). With two attribute names for min and max values, two <code>subTitles</code> different from the attrName and different date formats. Additionally a period is preset. Please note that the format of the preset values is based on <code>format</code>.</p> <pre><code>{\n    \"type\": \"dateRange\",\n    \"title\": \"Auslandssemester\",\n    \"subTitles\": [\"Start der Reise\", \"End of Journey\"],\n    \"attrName\": [\"start\", \"end\"],\n    \"format\": [\"DD.MM.YYYY\", \"YYYY/DD/MM\"],\n    \"prechecked\": [\"01.08.2022\", \"2023/06/31\"],\n    \"display\": \"datepicker\"\n}\n</code></pre> <p>Example</p> <p>Example of a DateRange snippet. With time points preset via <code>prechecked</code> and min and max values preset via <code>value</code>.</p> <pre><code>{\n    \"type\": \"dateRange\",\n    \"title\": \"Aktive Baustellen im ...\",\n    \"subTitles\": [\"Zeitraum von\", \"Zeitraum bis\"],\n    \"attrName\": [\"baubeginn\", \"bauende\"],\n    \"format\": \"DD.MM.YYYY\",\n    \"value\": [\"01.01.2019\", \"31.12.2034\"],\n    \"prechecked\": [\"07.07.2022\", \"25.02.2030\"]\n}\n</code></pre> <p>Example</p> <p>Example for a feature info snippet. Displays all values of the configured attribute names(attrName) of all filtered features in the filter.</p> <pre><code>{\n    \"title\": \"Steckbrief\",\n    \"attrName\": [\"tierartengruppe\", \"deutscher_artname\", \"artname\", \"rote_liste_d\", \"rote_liste_hh\"],\n    \"type\": \"featureInfo\"\n}\n</code></pre> <p>Example</p> <p>Example for a slider range snippet of SensorThingsAPI (STA).</p> <pre><code>{\n    \"type\": \"sliderRange\",\n    \"title\": \"Anzahl der Fahrr\u00e4der\",\n    \"attrName\": \"@Datastreams.0.Observations.0.result\"\n}\n</code></pre> <p>Example</p> <p>Example of a snippet that wants to filter over multiple attributes at once and display the features that match the set value for one of the specified attributes.</p> <pre><code>{\n    \"attrName\": [\"xpplanname\", \"rechtscharakterwert\"],\n    \"operatorForAttrName\": \"OR\",\n    \"type\": \"dropdown\",\n}\n</code></pre>"},{"location":"User/Portal-Config/config.json/#portalconfigmenutoolfilterfilterlayersnippetschildren","title":"Portalconfig.menu.tool.filter.filterLayer.snippets.children","text":"<p>Child snippet configuration. The child snippets are configured in the same way as \"normal\" snippets. See filterLayerSnippets.</p> <p>The parent-child relationship can be used for the following use case: If a dataset is too large, preselecting an attribute can reduce the amount of subsequent filtering. (Example: animal species group <code>mammals</code> as preselection would significantly reduce the data space of all animals).</p> <p>The <code>children</code> parameter instructs a snippet not to trigger any filtering itself, but to \"feed\" only its child snippets configured under <code>children</code> with the data resulting from its setting. (Example: <code>mammals</code> will shrink the resulting animal species to an acceptable range). Only the selection in one of the child snippets (example: \"blue whale\") finally performs the filtering.</p> <p>In case of using parent-child relationships, we recommend setting <code>snippetTags</code> to <code>false</code>. Multi-dimensional nesting (grandparent, parent, child) is not currently provided.</p> <p>Example</p> <p>Example of a dropdown snippet with parent-child relationship. The <code>cityA</code> and <code>cityB</code> dropdowns are initially not filled. Only when a <code>district</code> is selected do they fill with the cities of the selected district, but no filtering takes place on the map. Only the selection of a city finally initiates the filtering by the city name.</p> <pre><code>{\n    \"title\": \"District\",\n    \"attrName\": \"city_district\",\n    \"type\": \"dropdown\",\n    \"multiselect\": false,\n    \"placeholder\": \"Choose a district\",\n    \"children\": [\n        {\n            \"type\": \"dropdown\",\n            \"attrName\": \"cityA\",\n            \"placeholder\": \"cityA\"\n        },\n        {\n            \"type\": \"dropdown\",\n            \"attrName\": \"cityB\",\n            \"placeholder\": \"cityB\"\n        }\n    ]\n}\n</code></pre>"},{"location":"User/Portal-Config/config.json/#portalconfigmenutoolfilterfilterlayersnippetstimeouts","title":"Portalconfig.menu.tool.filter.filterLayer.snippets.timeouts","text":"<p>User experience can be improved with the adjustment of timeouts. This is especially true for filters that work with <code>strategy</code>: <code>active</code>.</p> Name Required Typ Default Description Expert input no Number 1400 For snippet typ <code>sliderRange</code> and <code>slider</code> only: The time in milliseconds that should elapse before filtering is triggered after entering numbers and characters into the input field. false slider no Number 800 For snippet typ <code>sliderRange</code>, <code>slider</code> and <code>dateRange</code> only: The time in milliseconds that should elapse before filtering is triggered after the last change of the slider. false <p>Example</p> <p>An example of a sliderRange snippet with accelerated filtering after input into the input field or changing the slider.</p> <pre><code>{\n    \"title\": \"Baustellen\",\n    \"attrName\": [\"baubeginn\", \"bauende\"],\n    \"type\": \"sliderRange\",\n    \"timeouts\": {\n        \"input\": 800,\n        \"slider\": 400\n    }\n}\n</code></pre>"},{"location":"User/Portal-Config/config.json/#portalconfigmenutoolfilterfilterlayersnippetsservice","title":"Portalconfig.menu.tool.filter.filterLayer.snippets.service","text":"<p>An object that describes a service for a snippet. All service types that the filter supports can theoretically be used. The configuration depends on the type of service.</p> <p>WFS |Name|Required|Typ|Default|Description|Expert| |----|-------------|---|-------|------------|------| |type|yes|String||The type of service.|false| |url|yes|String||The service url.|false| |typename|yes|String||The feature type that will be loaded. Only for WFS|false| |collection|yes|String||The collection that will be loaded. Only for OAF|false|</p> <p>Example</p> <pre><code>{\n    \"type\": \"WFS\",\n    \"url\": \"https://qs-geodienste.hamburg.de/HH_WFS_verbreitungskarten_tiere\",\n    \"typename\": \"verbreitung_tiere_eindeutige_liste\"\n}\n</code></pre> <p>Example GeoJSON</p> <p><pre><code>{\n    \"type\": \"GeoJSON\",\n    \"url\": \"../chartjs/charts_stadtteil.geojson\"\n}\n</code></pre> Example OAF</p> <pre><code>{\n    \"url\": \"https://api.hamburg.de/datasets/v1/schulen\",\n    \"collection\" : \"staatliche_schulen\",\n    \"type\": \"OAF\"\n}\n</code></pre>"},{"location":"User/Portal-Config/config.json/#portalconfigmenutoolfilterfilterlayersnippetslocalecompareparams","title":"Portalconfig.menu.tool.filter.filterLayer.snippets.localeCompareParams","text":"<p>A string or object that supply the parameters for util function localeCompare.</p> <p>Example String</p> <p>\"localeCompareParams\": \"de\"</p> <p>Object</p> Name Required Typ Default Description Expert locale no String The locale code according ISO 3166 false options no options The custom options for sorting in localeCompare false <p>Example Object</p> <pre><code>{\n    \"locale\": \"de\",\n    \"options\": {\n        \"ignorePunctuation\": true\n    }\n}\n</code></pre>"},{"location":"User/Portal-Config/config.json/#portalconfigmenutoolfilterfilterlayersnippetslocalecompareparamsoptions","title":"Portalconfig/menu/tool/filter/filterLayer/snippets/localeCompareParams/options","text":"<p>An object for custom control of the localeCompare function used to sort dropdown boxes, the documentation is: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/localeCompare</p> Name Required Typ Default Description Expert ignorePunctuation no Boolean false Determines whether punctuation will be ignored. false sensitivity no String \"variant\" Determines whether string collation will be used. false numeric no Boolean false Determines whether numeric collation will be used false <p>Example</p> <pre><code>{\n    \"ignorePunctuation\": true\n}\n</code></pre>"},{"location":"User/Portal-Config/config.json/#portalconfigmenutoolcomparefeatures","title":"Portalconfig.menu.tool.compareFeatures","text":"<p>This tool allows comparing vector features which are provided by WFS(\u2757) services.</p> Name Required Type Default Description Expert numberOfFeaturesToShow no Integer 3 Maximum amount of features selectable for comparison. false numberOfAttributesToShow no Integer 12 Maximum amount of attributes initially shown. If more attributes are available, they can be  shown and hidden by clicking a button. false <p>Example</p> <pre><code>{\n    \"compareFeatures\": {\n        \"name\": \"Vergleichsliste\",\n        \"icon\": \"bi-list-ul\",\n        \"numberOfFeaturesToShow\": 5,\n        \"numberOfAttributesToShow\": 10\n    }\n}\n</code></pre>"},{"location":"User/Portal-Config/config.json/#portalconfigmenutoolparcelsearch","title":"Portalconfig.menu.tool.parcelSearch","text":"<p>Parcel search.</p> <p>This requires a backend!</p> <p>Depending on your configuration, special stored queries of a WFS(\u2757) are requested with given parameters.</p> <p>Example request: https://geodienste.hamburg.de/HH_WFS_DOG?service=WFS&amp;request=GetFeature&amp;version=2.0.0&amp;&amp;StoredQuery_ID=Flurstueck&amp;gemarkung=0601&amp;flurstuecksnummer=00011</p> <p>Deprecated in the next major release. Please use wfsSearch instead.</p> Name Required Type Default Description Expert serviceId yes String Id of the service to request. Resolved using the rest-services.json file. false storedQueryId yes String Id of the stored query to use. true configJSON yes String Path to the configuration file holding districts. Example file. false parcelDenominator no Boolean false Flag defining whether parcel denominators are used as a level. (Hamburg special: As a city state, Hamburg has no parcel denominators.) false styleId no String Allows choosing a style id from the <code>style.json</code> file to overwrite the map marker default style. false zoomLevel no Number 7 Defines to which zoom level the tool should zoom. false <p>Example</p> <pre><code>{\n    \"parcelSearch\": {\n        \"name\": \"Flurst\u00fcckssuche\",\n        \"icon\": \"bi-search\",\n        \"serviceId\": \"6\",\n        \"storedQueryID\": \"Flurstueck\",\n        \"configJSON\": \"https://geodienste.hamburg.de/lgv-config/gemarkungen_hh.json\",\n        \"parcelDenominator\": false,\n        \"styleId\": \"flaecheninfo\"\n    }\n}\n</code></pre>"},{"location":"User/Portal-Config/config.json/#portalconfigmenutoolsaveselection","title":"Portalconfig.menu.tool.saveSelection","text":"<p>Tool to save the current map content as a url.</p> Name Required Type Default Description Expert simpleMap no Boolean false Adds a SimpleMap URL to the component. When calling this URL, the menu bar, layer tree, and map controls are deactivated. false"},{"location":"User/Portal-Config/config.json/#portalconfigmenutoolscaleswitcher","title":"Portalconfig.menu.tool.scaleSwitcher","text":"<p>Tool that allows changing the map's current scale.</p> Name Required Type Default Description Expert isDisplayInFooter no Boolean false Activates the scale selection also in the footer (note: correlation with the ScaleLine parameter in the config.js). false"},{"location":"User/Portal-Config/config.json/#portalconfigmenutoolresettree","title":"Portalconfig.menu.tool.resetTree","text":"<p>Reset the theme tree.</p> Name Required Type Default Description Expert resetTree no Boolean false Tool to reset tree. Click on the tool name in the menu under Tools to reset the tree. false"},{"location":"User/Portal-Config/config.json/#portalconfigmenutoolsearchbycoord","title":"Portalconfig.menu.tool.searchByCoord","text":"<p>Coordinate search.</p> Name Required Type Default Description Expert zoomLevel no Number 7 Defines to which zoom level the tool should zoom. false <p>Example</p> <pre><code>{\n    \"searchByCoord\": {\n        \"name\": \"Flurst\u00fcckssuche\",\n        \"icon\": \"bi-search\",\n        \"zoomLevel\": 7\n    }\n}\n</code></pre>"},{"location":"User/Portal-Config/config.json/#portalconfigmenutoolprint","title":"Portalconfig.menu.tool.print","text":"<p>Print module, configurable for 2 print services: High Resolution PlotService and MapfishPrint 3. Printing vector tile layers is not supported, since the print services themselves do not support it. Should users try to print such layers, a warning will be shown.</p> <p>This requires a backend!</p> <p>A Mapfish-Print3, or HighResolutionPlotService is required as backend.</p> Name Required Type Default Description Expert mapfishServiceId yes String Deprecated in 3.0.0. Print service id. Resolved using the rest-services.json file. false printServiceId yes String Print service id. Resolved using the rest-services.json file. false printService no String \"mapfish\" Flag determining which print service is in use. <code>plotservice</code> activates the High Resolution PlotService, if the parameter is not set, Mapfish 3 is used. false printAppCapabilities no String \"capabilities.json\" path for the configuration of the print service false currentLayoutName no String \"\" Defines which layout is the default layout on opening the print tool, e.g. \"A4 portrait format\". If the given layout is not available oder none is provided, the first layout mentioned in the Capabilities is used. false printAppId no String \"master\" Print service print app id. This tells the print service which template(s) to use. false filename no String \"report\" Print result file name. false title no String \"PrintResult\" Document title appearing as header. false titleLength no Number 45 The length of the title characters. false isLegendSelected no Boolean false Defines whether a checkbox to print the legend is offered. Only used for print services supporting legend printing (Mapfish Print 3). false legendText no String \"Mit Legende\" Descriptive text for the legend print checkbox. false dpiForPdf no Number 200 DPI resolution for the map in the PDF file. false capabilitiesFilter no capabilitiesFilter Filter for the response of the configured print service. Possible keys are layouts and outputFormats. false defaultCapabilitiesFilter no capabilitiesFilter If there is no key set in capabilitiesFilter, the key from this object is taken. false useProxy no Boolean false Deprecated in the next major release. GDI-DE recommends setting CORS headers on the required services instead of using proxies. Defines whether a service URL should be requested via proxy. For this, dots in the URL are replaced with underscores. false printMapMarker no Boolean false If set to true, map markers visible in the print image section will be printed. They may obstruct the view to interesting information. false overviewmapLayerId no String Allows using a different layer for the overview map element. If no Id is specified, the first layer of the selected baselayer maps is used. false layoutOrder no String[] Defines the order in which the layouts should be shown in the dropdown. Only to be used in combination with the print service 'plotservice'. false isPrintDrawnGeoms no Boolean false Flag if it's possible to print geometries created by the Draw or Measure tool. Only to be used in combination with the print service 'plotservice'. false showInvisibleLayerInfo no Boolean true Defines whether an infobox is shown when layers will not be printed because they are invisible due to scale. false <p>High Resolution PlotService example configuration</p> <pre><code>{\n    \"print\": {\n        \"name\": \"Karte drucken\",\n        \"icon\": \"bi-printer-fill\",\n        \"mapfishServiceId\": \"123456\",\n        \"filename\": \"Print\",\n        \"title\": \"My Title\",\n        \"printService\": \"plotservice\",\n        \"printAppCapabilities\": \"info.json\",\n        \"version\" : \"HighResolutionPlotService\",\n        \"layoutOrder\": [\n            \"Default A4 hoch\",\n            \"Default A4 quer\",\n            \"Default A3 hoch\",\n            \"Default A3 quer\",\n        ]\n    }\n}\n</code></pre> <p>MapfishPrint3 example configuration</p> <pre><code>{\n    \"print\": {\n        \"name\": \"Karte drucken\",\n        \"icon\": \"bi-printer-fill\",\n        \"mapfishServiceId\": \"mapfish_printservice_id\",\n        \"printAppId\": \"mrh\",\n        \"filename\": \"Print\",\n        \"title\": \"Mein Titel\"\n    }\n}\n</code></pre>"},{"location":"User/Portal-Config/config.json/#portalconfigmenutoolprintcapabilitiesfilter","title":"Portalconfig.menu.tool.print.capabilitiesFilter","text":"<p>List of layouts and formats that filters the response from the print service in the respective category.</p> Name Verpflichtend Typ Default Beschreibung Expert layouts no String[] Array of layouts should shown in the UI. false outputFormats no String[] Array of formats should shown in the UI. false <p>Example capabilitiesFilter: <pre><code>{\n    \"capabilitiesFilter\": {\n        \"layouts\": [\"A4 Hochformat\", \"A3 Hochformat\"],\n        \"outputFormats\": [\"PDF\"]\n    }\n}\n</code></pre></p>"},{"location":"User/Portal-Config/config.json/#portalconfigmenutooldraw","title":"Portalconfig.menu.tool.draw","text":"<p>Module used to draw features on the map. This includes points, which may also be represented by symbols, and (double) circles, polygons, polylines, and text.</p> Name Required Type Default Description Expert name yes String Tool name in the menu. false iconList no icon[] [{\"id\": \"iconPoint\", \"type\": \"simple_point\", \"value\": \"simple_point\"}, {\"id\": \"yellow pin\", \"type\": \"image\", \"scale\": 2, \"value\": \"geo-fill-ylw.svg\"}] List of symbols the user may choose from to draw colored symbols or dots. Images may be used, too, as shown in the example. false drawSymbolSettings no drawSymbolSet {\"color\": [55, 126, 184, 1], \"opacity\": 1} Pre-configuration for symbol drawing. false addIconsOfActiveLayers no Boolean false Set this flag to <code>true</code> to be able to select the icons and symbols of all WFS layers activated in the topic tree as additional symbols besides the icons configured under <code>drawSymbolSettings</code>. false drawLineSettings no drawLineSet {\"strokeWidth\": 1, \"opacityContour\": 1, \"colorContour\": [0, 0, 0, 1]} Pre-configuration for line drawing. false drawCurveSettings no drawCurveSet {\"strokeWidth\": 1, \"opacityContour\": 1, \"colorContour\": [0, 0, 0, 1]} Pre-configuration for freehand drawing. false drawAreaSettings no drawAreaSet {\"strokeWidth\": 1, \"color\": [55, 126, 184, 1], \"opacity\": 1, \"colorContour\": [0, 0, 0, 1], \"opacityContour\": 1} Pre-configuration for area drawing. false drawCircleSettings no drawCircleSet {\"circleMethod\": \"interactive\", \"unit\": \"m\", \"circleRadius\": null, \"strokeWidth\": 1, \"color\": [55, 126, 184, 1], \"opacity\": 1, \"colorContour\": [0, 0, 0, 1], \"opacityContour\": 1, \"tooltipStyle\": {\"fontSize\": \"16px\", \"paddingTop\": \"3px\", \"paddingLeft\": \"3px\", \"paddingRight\": \"3px\", \"backgroundColor\": \"rgba(255, 255, 255, .9)\"}} Pre-configuration for circle drawing. false drawDoubleCircleSettings no drawDoubleCircleSet {\"circleMethod\": \"defined\", \"unit\": \"m\", \"circleRadius\": 0, \"circleOuterRadius\": 0, \"strokeWidth\": 1, \"color\": [55, 126, 184, 1], \"opacity\": 1, \"colorContour\": [0, 0, 0, 1], \"outerColorContour\": [0, 0, 0, 1], \"opacityContour\": 1} Pre-configuration for double circle drawing. false writeTextSettings no writeTextSet {\"text\": \"\", \"fontSize\": 10, \"font\": \"Arial\", \"color\": [55, 126, 184, 1], \"opacity\": 1} Pre-configuration for text writing. false download no download {\"preSelectedFormat\": \"KML\"} Pre-configuration for download. false enableAttributesSelector no Boolean false Enables an button which toggles an edit section for custom attributes on the selected feature. false semicolonCSVDelimiter no Boolean true To decide if the semicolon is used as the delimiter for exported CSV file. false <p>Example</p> <pre><code>#!json\n{\n    \"draw\": {\n        \"name\": \"Draw / Write\",\n        \"icon\": \"bi-pencil-fill\",\n        \"iconList\": [\n            {\n                \"id\": \"iconPoint\",\n                \"type\": \"simple_point\",\n                \"value\": \"simple_point\"\n            },\n            {\n                \"id\": \"iconMeadow\",\n                \"type\": \"image\",\n                \"scale\": 0.8,\n                \"value\": \"meadow.png\"\n            },\n            {\n                \"id\": \"yellow pin\",\n                \"type\": \"image\",\n                \"scale\": 2,\n                \"value\": \"geo-fill-ylw.svg\"\n            }\n        ],\n        \"drawDoubleCircleSettings\": {\n            \"circleRadius\": 1500,\n            \"circleOuterRadius\": 3000,\n            \"strokeWidth\": 3,\n            \"color\": [55, 126, 184, 0],\n            \"opacity\": 0,\n            \"colorContour\": [228, 26, 28, 1],\n            \"opacityContour\": 1,\n            \"tooltipStyle\": {\n                \"fontSize\": \"14px\",\n                \"paddingTop\": \"3px\",\n                \"paddingLeft\": \"3px\",\n                \"paddingRight\": \"3px\",\n                \"backgroundColor\": \"rgba(255, 255, 255, .9)\"\n            }\n        }\n        \"semicolonCSVDelimiter\": true\n    }\n}\n</code></pre>"},{"location":"User/Portal-Config/config.json/#portalconfigmenutooldrawicon","title":"Portalconfig.menu.tool.draw.icon","text":"<p>Dot object consisting of text, type, and value.</p> Name Required Type Default Description Expert id yes String Symbol text displayed in the select menu. The id has to be defined in the locale file (usually <code>common</code>) as <code>modules.tools.draw.iconList</code> child. The following entry should begin with <code>icon</code> and contain a representative description. If the key is not found, the <code>id</code> will appear as string on the user interface. false caption no String Deprecated in 3.0.0. Symbol text displayed in the select menu. Unlike <code>id</code>, not only the id itself, but the whole path (<code>modules.tools.draw.iconList</code> + id) has to be given. false type yes enum[\"image\", \"simple_point\"] Object type to be drawn. If <code>image</code> is chosen, the PNG or SVG file from the <code>value</code> path is drawn. By default, images are to be placed in the <code>/img/tools/draw/</code> directory and should have a height and width of 96px to scale correctly. Alternatively, a working <code>scale</code> factor must be defined. The key <code>simple_point</code> will draw a simple point. false scale no number Scale factor for images. false value yes String Value of the object to be drawn. If no path or URL is set, a file name is expected, and the config.js entry <code>wfsImgPath</code> is expected to be the file's location. false <p>Example</p> <pre><code>{\n    \"iconList\": [\n        {\n            \"id\": \"iconPoint\",\n            \"type\": \"simple_point\",\n            \"value\": \"simple_point\"\n        },\n        {\n            \"id\": \"iconMeadow\",\n            \"type\": \"image\",\n            \"scale\": 0.8,\n            \"value\": \"meadow.png\"\n        },\n        {\n            \"id\": \"yellow pin\",\n            \"type\": \"image\",\n            \"scale\": 2,\n            \"value\": \"geo-fill-ylw.svg\"\n        }\n    ]\n}\n</code></pre>"},{"location":"User/Portal-Config/config.json/#portalconfigmenutooldrawdrawsymbolset","title":"Portalconfig.menu.tool.draw.drawSymbolSet","text":"<p>Object to change the drawing tool's configured point symbol default value.</p> Name Required Type Default Description Expert color yes Number[] [55, 126, 184, 1] The pre-configured color of the symbol as RGB color. The alpha channel value is used for point coloring. false opacity yes Number 1 The pre-configured transparency of symbols, given in range [0..1] for point data. false <p>Example</p> <pre><code>{\n    \"color\": [55, 126, 184, 1],\n    \"opacity\": 1\n}\n</code></pre>"},{"location":"User/Portal-Config/config.json/#portalconfigmenutooldrawdrawlineset","title":"Portalconfig.menu.tool.draw.drawLineSet","text":"<p>Object to change the drawing tool's configured line default value.</p> Name Required Type Default Description Expert strokeWidth yes Number 1 Pre-configured stroke width of lines in pixels. false colorContour yes Number[] [0, 0, 0, 1] Pre-configured line color in RGBA. false opacityContour yes Number 1 Pre-configured line transparency in range [0..1]. false <p>Example</p> <pre><code>{\n    \"strokeWidth\": 1,\n    \"opacityContour\": 1,\n    \"colorContour\": [0, 0, 0, 1]\n}\n</code></pre>"},{"location":"User/Portal-Config/config.json/#portalconfigmenutooldrawdrawcurveset","title":"Portalconfig.menu.tool.draw.drawCurveSet","text":"<p>Object to change the drawing tool's configured freehand drawing default value.</p> Name Required Type Default Description Expert strokeWidth yes Number 1 Pre-configured stroke width of lines in pixels. false colorContour yes Number[] [0, 0, 0, 1] Pre-configured line color in RGBA. false opacityContour yes Number 1 Pre-configured line transparency in range [0..1]. false <p>Example</p> <pre><code>{\n    \"strokeWidth\": 1,\n    \"opacityContour\": 1,\n    \"colorContour\": [0, 0, 0, 1]\n}\n</code></pre>"},{"location":"User/Portal-Config/config.json/#portalconfigmenutooldrawdrawareaset","title":"Portalconfig.menu.tool.draw.drawAreaSet","text":"<p>Object to change the drawing tool's configured area default value.</p> Name Required Type Default Description Expert strokeWidth yes Number 1 Pre-configured stroke width of area borders in pixels. false color yes Number[] [55, 126, 184, 1] Pre-configured area color in RGBA. false opacity yes Number 1 Pre-configured area transparency in range [0..1]. false colorContour yes Number[] [0, 0, 0, 1] Pre-configured area border color in RGBA. false opacityContour yes Number 1 Pre-configured area border transparency in range [0..1]. false <p>Example</p> <pre><code>{\n    \"strokeWidth\": 1,\n    \"color\": [55, 126, 184, 1],\n    \"opacity\": 1,\n    \"colorContour\": [0, 0, 0, 1],\n    \"opacityContour\": 1\n}\n</code></pre>"},{"location":"User/Portal-Config/config.json/#portalconfigmenutooldrawdrawcircleset","title":"Portalconfig.menu.tool.draw.drawCircleSet","text":"<p>Object to change the drawing tool's configured circle default value.</p> Name Required Type Default Description Expert circleMethod yes String \"interactive\" Pre-configured method of circle drawing. <code>\"interactive\"</code>: freehand, <code>\"defined\"</code>: by entering fixed values false unit yes String \"m\" Pre-configured unit regarding the circle's Radius <code>circleRadius</code> when <code>\"defined\"</code> is chosen as <code>circleMethod</code>. false circleRadius yes Number 0 Pre-configured circle Radius when <code>\"defined\"</code> is chosen as <code>circleMethod</code>. false strokeWidth yes Number 1 Pre-configured stroke width of circle border in pixels. false color yes Number[] [55, 126, 184, 1] Pre-configured circle color in RGBA. false opacity yes Number 1 Pre-configured circle transparency in range [0..1]. false colorContour yes Number[] [0, 0, 0, 1] Pre-configured circle border color in RGBA. false opacityContour yes Number 1 Pre-configured circle border transparency in range [0..1]. false tooltipStyle no String {} Pre-configured style for tooltip. false <p>Example</p> <pre><code>#!json\n{\n    \"circleMethod\": \"interactive\",\n    \"unit\": \"m\",\n    \"circleRadius\": 0,\n    \"strokeWidth\": 1,\n    \"color\": [55, 126, 184, 1],\n    \"opacity\": 1,\n    \"colorContour\": [0, 0, 0, 1],\n    \"opacityContour\": 1\n}\n</code></pre>"},{"location":"User/Portal-Config/config.json/#portalconfigmenutooldrawdrawdoublecircleset","title":"Portalconfig.menu.tool.draw.drawDoubleCircleSet","text":"<p>Object to change the drawing tool's configured circle default value.</p> Name Required Type Default Description Expert circleMethod yes String \"defined\" Pre-configured method of circle drawing. <code>\"interactive\"</code>: freehand, <code>\"defined\"</code>: by entering fixed values false unit yes String \"m\" Pre-configured unit regarding the circle's radius <code>circleRadius</code> and <code>circleOuterRadius</code> when <code>\"defined\"</code> is chosen as <code>circleMethod</code>. false circleRadius yes Number 0 Pre-configured inner circle radius when <code>\"defined\"</code> is chosen as <code>circleMethod</code>. false circleOuterRadius yes Number 0 Pre-configured outer circle radius when <code>\"defined\"</code> is chosen as <code>circleMethod</code>. false strokeWidth yes Number 1 Pre-configured stroke width of circle border in pixels. false color yes Number[] [55, 126, 184, 1] Pre-configured circle color in RGBA. false opacity yes Number 1 Pre-configured double circle transparency in range [0..1]. false colorContour yes Number[] [0, 0, 0, 1] Pre-configured inner circle border color in RGBA. false outerColorContour yes Number[] [0, 0, 0, 1] Pre-configured outer circle border color in RGBA. false opacityContour yes Number 1 Pre-configured circle border transparency in range [0..1]. false <p>Example</p> <pre><code>{\n    \"circleMethod\": \"defined\",\n    \"unit\": \"m\",\n    \"circleRadius\": 0,\n    \"circleOuterRadius\": 0,\n    \"strokeWidth\": 1,\n    \"color\": [55, 126, 184, 1],\n    \"opacity\": 1,\n    \"colorContour\": [0, 0, 0, 1],\n    \"opacityContour\": 1\n}\n</code></pre>"},{"location":"User/Portal-Config/config.json/#portalconfigmenutooldrawwritetextset","title":"Portalconfig.menu.tool.draw.writeTextSet","text":"<p>Object to change the drawing tool's configured text default value.</p> Name Required Type Default Description Expert text yes String \"\" Pre-configured text. false fontSize yes Number 10 Pre-configured font size. false font yes String \"Arial\" Pre-configured font. Restricted to <code>\"Arial\"</code>, <code>\"Calibri\"</code>, and <code>\"Times New Roman\"</code>. false color yes Number[] [55, 126, 184, 1] Pre-configured font color in RGBA. false opacity yes Number 1 Pre-configured font transparency in range [0..1]. false <p>Example</p> <pre><code>{\n    \"text\": \"\",\n    \"fontSize\": 10,\n    \"font\": \"Arial\",\n    \"color\": [55, 126, 184, 1],\n    \"opacity\": 1\n}\n</code></pre>"},{"location":"User/Portal-Config/config.json/#portalconfigmenutooldrawdownload","title":"Portalconfig.menu.tool.draw.download","text":"<p>Object to change the drawing tool's download preselected format. It should be one of \"KML\", \"GEOJSON\" and \"GPX\".</p> Name Required Type Default Description Expert preSelectedFormat no enum[\"KML\",\"GEOJSON\",\"GPX\"] \"KML\" Pre-configured pre-selected form. false <p>Example</p> <pre><code>{\n    \"preSelectedFormat\": \"KML\"\n}\n</code></pre>"},{"location":"User/Portal-Config/config.json/#portalconfigmenutoolfeaturelister","title":"Portalconfig.menu.tool.featureLister","text":"<p>This module can display loaded vector data from WFS(\u2757) layers in a table. The module receives the available layers from the map via the visible vector layers and shows them in the first tab. If an entry (layer) is selected in this tab, its LayerId is saved. Then, from the layer list, the selected layer is filtered and saved. As a reaction to that selection, the layer features are evaluated and listed in the second tab. Not all features, but at most the configured amount of features is initially loaded, and a button is shown that allows loading additional features to this table.</p> <p>A hover event controls highlighting hovered features in the map. By clicking a feature, its attributes are shown completely in a third tab. In the future, WFS-T attributes should be editable here. The table also provides sort functionalities.</p> Name Required Type Default Description Expert maxFeatures no Integer 20 Amount of features to display initially. More features of the same amount can be revealed by clicking a button. false highlightVectorRulesPolygon no highlightVectorRulesPolygon Specify the fill color and outline color and stroke width for highlighting the polygon features as well as a zoom parameter. false highlightVectorRulesPointLine no highlightVectorRulesPointLine Specify outline color and stroke width for highlighting lines and fill color and scale factor for highlighting points as well as a zoom parameter. false <p>Example</p> <pre><code>{\n    \"featureLister\": {\n        \"name\": \"List\",\n        \"icon\": \"bi-list\",\n        \"maxFeatures\": 10,\n        \"highlightVectorRulesPolygon\": {\n            \"fill\": {\n                \"color\": [255, 0, 255, 0.9]\n            },\n            \"stroke\": {\n                \"width\": 4,\n                \"color\": [0, 0, 204, 0.9]\n            },\n            \"zoomLevel\": 5\n        },\n        \"highlightVectorRulesPointLine\": {\n            \"fill\": {\n                \"color\": [255, 0, 255, 0.9]\n            },\n            \"stroke\": {\n                \"width\": 8,\n                \"color\": [255, 0, 255, 0.9]\n            },\n            \"image\": {\n                \"scale\": 2\n            },\n            \"zoomLevel\": 5\n        }\n    }\n}\n</code></pre>"},{"location":"User/Portal-Config/config.json/#portalconfigmenutoolfeaturelisterhighlightvectorrulespolygon","title":"Portalconfig.menu.tool.featureLister.highlightVectorRulesPolygon","text":"<p>Specify the fill color and outline color and stroke width for highlighting the polygon features as well as a zoom level.</p> Name Required Type Default Description Expert fill no fill Possible setting: color false stroke no stroke Possible setting: width false zoomLevel no Integer 7 Zoom level, possible setting: 0-9 false"},{"location":"User/Portal-Config/config.json/#portalconfigmenutoolfeaturelisterhighlightvectorrulespolygonfill","title":"Portalconfig.menu.tool.featureLister.highlightVectorRulesPolygon.fill","text":"Name Required Type Default Description Expert color no Float[] [255, 255, 255, 0.5] Possible setting: color (RGBA) false <pre><code>\"fill\": { \"color\": [215, 102, 41, 0.9] }\n</code></pre>"},{"location":"User/Portal-Config/config.json/#portalconfigmenutoolfeaturelisterhighlightvectorrulespolygonstroke","title":"Portalconfig.menu.tool.featureLister.highlightVectorRulesPolygon.stroke","text":"Name Required Type Default Description Expert width no Integer 1 Possible setting: width false color no Float[] [255, 255, 255, 0.5] Possible setting: color (RGBA) false <pre><code>\"stroke\": { \"width\": 4 , \"color\": [255, 0, 255, 0.9]}\n</code></pre>"},{"location":"User/Portal-Config/config.json/#portalconfigmenutoolfeaturelisterhighlightvectorrulespointline","title":"Portalconfig.menu.tool.featureLister.highlightVectorRulesPointLine","text":"<p>Specify outline color and stroke width for highlighting lines and fill color and scale factor for highlighting points. Also a zoom level.</p> Name Required Type Default Description Expert fill no fill Possible setting: color false stroke no stroke Possible setting: width false image no image Possible setting: scale false zoomLevel no Integer 7 Zoom level, possible setting: 0-9 false"},{"location":"User/Portal-Config/config.json/#portalconfigmenutoolfeaturelisterhighlightvectorrulespointlinefill","title":"Portalconfig.menu.tool.featureLister.highlightVectorRulesPointLine.fill","text":"Name Required Type Default Description Expert color no Float[] [255, 255, 255, 0.5] Possible setting: color (RGBA) false <pre><code>\"fill\": { \"color\": [215, 102, 41, 0.9] }\n</code></pre>"},{"location":"User/Portal-Config/config.json/#portalconfigmenutoolfeaturelisterhighlightvectorrulespointlinestroke","title":"Portalconfig.menu.tool.featureLister.highlightVectorRulesPointLine.stroke","text":"Name Required Type Default Description Expert width no Integer 1 Possible setting: width false color no Float[] [255, 255, 255, 0.5] Possible setting: color (RGBA) false <pre><code>\"stroke\": { \"width\": 4 , \"color\": [255, 0, 255, 0.9]}\n</code></pre>"},{"location":"User/Portal-Config/config.json/#portalconfigmenutoolfeaturelisterhighlightvectorrulespointlineimage","title":"Portalconfig.menu.tool.featureLister.highlightVectorRulesPointLine.image","text":"Name Required Type Default Description Expert scale no Integer 1.5 Possible setting: scale false <pre><code>\"image\": { \"scale\": 2}\n</code></pre>"},{"location":"User/Portal-Config/config.json/#portalconfigmenutoolselectfeatures","title":"Portalconfig.menu.tool.selectFeatures","text":"<p>Allows selecting a set of vector features by letting the user draw a box on the map. Features in that box will be displayed with GFI information and it's possible to zoom to a feature. This tool requires WFS(\u2757) layers.</p> Name Required Type Default Description Expert highlightVectorRulesPolygon no highlightVectorRulesPolygon Specify the fill color and outline color and stroke width for highlighting the polygon features as well as a zoom parameter. false highlightVectorRulesPointLine no highlightVectorRulesPointLine Specify outline color and stroke width for highlighting lines and fill color and scale factor for highlighting points as well as a zoom parameter. false <p>Example</p> <pre><code>{\n    \"selectFeatures\": {\n        \"name\": \"translate#common:menu.tools.selectFeatures\",\n        \"highlightVectorRulesPolygon\": {\n            \"fill\": {\n                \"color\": [255, 0, 255, 0.9]\n            },\n            \"stroke\": {\n                \"width\": 4,\n                \"color\": [0, 0, 204, 0.9]\n            },\n            \"zoomLevel\": 5\n        },\n        \"highlightVectorRulesPointLine\": {\n            \"fill\": {\n                \"color\": [255, 0, 255, 0.9]\n            },\n            \"stroke\": {\n                \"width\": 8,\n                \"color\": [255, 0, 255, 0.9]\n            },\n            \"image\": {\n                \"scale\": 2\n            },\n            \"zoomLevel\": 5\n        }\n    }\n}\n</code></pre>"},{"location":"User/Portal-Config/config.json/#portalconfigmenutoolselectfeatureshighlightvectorrulespolygon","title":"Portalconfig.menu.tool.selectFeatures.highlightVectorRulesPolygon","text":"<p>Specify the fill color and stroke width for highlighting the polygon features as well as a zoom level.</p> Name Required Type Default Description Expert fill no fill Possible setting: color false stroke no stroke Possible setting: width false zoomLevel no Integer 7 Zoom level, possible setting: 0-9 false"},{"location":"User/Portal-Config/config.json/#portalconfigmenutoolselectfeatureshighlightvectorrulespolygonfill","title":"Portalconfig.menu.tool.selectFeatures.highlightVectorRulesPolygon.fill","text":"Name Required Type Default Description Expert color no Float[] [255, 255, 255, 0.5] Possible setting: color (RGBA) false <pre><code>\"fill\": { \"color\": [215, 102, 41, 0.9] }\n</code></pre>"},{"location":"User/Portal-Config/config.json/#portalconfigmenutoolselectfeatureshighlightvectorrulespolygonstroke","title":"Portalconfig.menu.tool.selectFeatures.highlightVectorRulesPolygon.stroke","text":"Name Required Type Default Description Expert width no Integer 1 Possible setting: width false color no Float[] [255, 255, 255, 0.5] Possible setting: color (RGBA) false <pre><code>\"stroke\": { \"width\": 4 , \"color\": [255, 0, 255, 0.9]}\n</code></pre>"},{"location":"User/Portal-Config/config.json/#portalconfigmenutoolselectfeatureshighlightvectorrulespointline","title":"Portalconfig.menu.tool.selectFeatures.highlightVectorRulesPointLine","text":"<p>Specify outline color and stroke width for highlighting lines and fill color and scale factor for highlighting points. Also a zoom level.</p> Name Required Type Default Description Expert fill no fill Possible setting: color false stroke no stroke Possible setting: width false image no image Possible setting: scale false zoomLevel no Integer 7 Zoom level, possible setting: 0-9 false"},{"location":"User/Portal-Config/config.json/#portalconfigmenutoolselectfeatureshighlightvectorrulespointlinefill","title":"Portalconfig.menu.tool.selectFeatures.highlightVectorRulesPointLine.fill","text":"Name Required Type Default Description Expert color no Float[] [255, 255, 255, 0.5] Possible setting: color (RGBA) false <pre><code>\"fill\": { \"color\": [215, 102, 41, 0.9] }\n</code></pre>"},{"location":"User/Portal-Config/config.json/#portalconfigmenutoolselectfeatureshighlightvectorrulespointlinestroke","title":"Portalconfig.menu.tool.selectFeatures.highlightVectorRulesPointLine.stroke","text":"Name Required Type Default Description Expert width no Integer 1 Possible setting: width false color no Float[] [255, 255, 255, 0.5] Possible setting: color (RGBA) false <pre><code>\"stroke\": { \"width\": 4 , \"color\": [255, 0, 255, 0.9]}\n</code></pre>"},{"location":"User/Portal-Config/config.json/#portalconfigmenutoolselectfeatureshighlightvectorrulespointlineimage","title":"Portalconfig.menu.tool.selectFeatures.highlightVectorRulesPointLine.image","text":"Name Required Type Default Description Expert scale no Integer 1.5 Possible setting: scale false <pre><code>\"image\": { \"scale\": 2}\n</code></pre>"},{"location":"User/Portal-Config/config.json/#portalconfigmenutoolmeasure","title":"Portalconfig.menu.tool.measure","text":"<p>The measure tool allows measuring distances and areas. This includes the specification of measurement inaccuracies.</p> Name Required Type Default Description Expert earthRadius no Number 6378137 Earth radius in meters. Please mind that the earth radius should be chosen in accordance with the reference ellipsoid. E.g., GRS80 should be used for ETRS89 (EPSG:25832). false measurementAccuracy no String \"meter\" Indicates how accurately the measurement result is displayed for \"m\", \"nm\", \"m\u00b2\", \"ha\". Options are \"decimeter\" for one decimal place. \"meter\" for no decimal place. \"dynamic\" for one decimal place for results smaller 10 and no decimal place for results greater or equal 10 of the respective unit. false lineStringUnits no String[] [\"m\", \"km\"] Indicates which units for length measurements will be selectable by users. Options are \"m\" (metres), \"km\" (kilometres), \"nm\" (nautical miles). false polygonUnits no String[] [\"m\u00b2\", \"km\u00b2\"] Indicates which units for area measurements will be selectable by users. Options are \"m\u00b2\", \"ha\", \"km\u00b2\". false <p>Example</p> <pre><code>{\n    \"measure\": {\n        \"name\": \"translate#common:menu.tools.measure\",\n        \"earthRadius\": 6378137,\n        \"measurementAccuracy\": \"dynamic\"\n    }\n}\n</code></pre>"},{"location":"User/Portal-Config/config.json/#portalconfigmenutoolmodeler3d","title":"Portalconfig.menu.tool.modeler3D","text":"<p>Can only be used in 3D mode! The 3D modeler allows to import 3D models in the formats .gltf, .dae and .obj, as well as to draw lines and extrudable 3D polygons. These drawings can be exported and loaded back georeferenced into the map.</p> Name Required Type Default Description Expert gmlId no String \"gmlid\" Specify the path to the GML ID in the GFI for buildings in 3D Layers. false updateAllLayers no Boolean true Specify, if all layers should be updated, when buildings are hidden. false highlightStyle no highlightStyle Specify the fill color, alpha, outline color and outline width for highlighting entities. false <p>Example</p> <pre><code>{\n    \"modeler3D\": {\n        \"name\": \"translate#common:menu.tools.modeler3D\",\n        \"gmlId\": \"gmlId\",\n        \"updateAllLayers\": false,\n        \"highlightStyle\": {\n            \"color\": \"#787777\",\n            \"alpha\": 1,\n            \"silhouetteColor\": \"#E20D0F\",\n            \"silhouetteSize\": 4\n        }\n    }\n}\n</code></pre>"},{"location":"User/Portal-Config/config.json/#portalconfigmenutoolmodeler3dhighlightstyle","title":"Portalconfig.menu.tool.modeler3D.highlightStyle","text":"Name Required Type Default Description Expert color no String \"#787777\" Specify the fill color for highlighting entities. false alpha no Number 1 Specify the alpha for highlighting entities. false silhouetteColor no String \"#E20D0F\" Specify the outline color for highlighting entities. false silhouetteSize no Number 1 Specify the outline width for highlighting entities. false <p>Example</p> <pre><code>{\n    \"highlightStyle\": {\n        \"color\": \"#787777\",\n        \"alpha\": 1,\n        \"silhouetteColor\": \"#E20D0F\",\n        \"silhouetteSize\": 4\n    }\n}\n</code></pre>"},{"location":"User/Portal-Config/config.json/#portalconfigmenutoolcontact","title":"Portalconfig.menu.tool.contact","text":"<p>The contact form allows users to send messages to a configured mail address.</p> <p>This requires a backend!</p> <p>Contact uses an SMTP server and calls its sendmail.php.</p> Name Required Type Default Description Expert serviceId yes String Email service id. Resolved using the rest-services.json file. false serviceID no String Deprecated in the next major release. Please use serviceId instead. Email service id. Resolved using the rest-services.json file. false from yes email[] Email sender. Please mind our hints regarding E-Mail safety. false to yes email[] Recipient of the E-Mail. Please mind our hints regarding E-Mail safety. false closeAfterSend no Boolean false Flag determining if the contact window should be closed after successfully sending a message. false contactInfo no String Additional text shown above the contact form. false deleteAfterSend no Boolean false Flag determining whether the contact form is emptied after successfully sending a message. false includeSystemInfo no Boolean false Flag determining if the senders system information should be included in the E-Mail. false locationOfCustomerService no String \"de\" The country the customer service is based in. The parameter is used for the date in the ticketId. false maxLines no Number 5 Amount of lines (height) for the textArea of the form false showPrivacyPolicy no Boolean false Flag determining if a checkbox should be displayed for agreeing to the privacy policy. false privacyPolicyLink no String \"https://www.masterportal.org/datenschutz.html\" Link to the full privacy policy. Should be given if <code>showPrivacyPolicy</code> is set to true. false subject no String The subject to be used for the E-Mail. false withTicketNo no Boolean true Whether successfully sending a email retrieves a ticket number for the user. false <p>Example</p> <pre><code>{\n    \"contact\": {\n        \"name\": \"common:menu.contact\",\n        \"icon\": \"bi-envelope-fill\",\n        \"serviceId\": \"123\",\n        \"from\": [\n            {\n                \"email\": \"lgvgeoportal-hilfe@gv.hamburg.de\",\n                \"name\":\"LGVGeoportalSupport\"\n            }\n        ],\n        \"to\": [\n            {\n                \"email\": \"lgvgeoportal-hilfe@gv.hamburg.de\",\n                \"name\":\"LGVGeoportalSupport\"\n            }\n        ],\n        \"includeSystemInfo\": true,\n        \"closeAfterSend\": true,\n        \"deleteAfterSend\": true,\n        \"withTicketNo\": false\n    }\n}\n</code></pre> <p>Hints regarding E-Mail safety</p> <p>The unchecked usage of sender (FROM), recipient (TO), copy (CC), and blind copy (BCC) by the SMTP server is hereby expressly discouraged for security reasons. The unchecked usage of the customer email as a reply to (REPLY-TO) by the SMTP server is warned against.</p> <p>We strongly recommend setting FROM and TO manually on the SMTP server without offering an option for external configuration.</p> <p>For security reasons, Sender (FROM) and Empf\u00e4nger (TO) sent by the Masterportal to the SMTP server may not be used as an email's FROM and TO without further checks. This would create a security breach that allows sending malicious emails with manipulated FROM and TO by the SMTP server. Should you need the configuration in the Masterportal anyway (as in the example above), the parameters from and to may be used after checking them against a whistelist on the SMTP server, preventing sending to or from email addresses not mentioned on the list.</p> <p>We recommend not automatically setting the customer's email address in CC (or BCC).</p> <p>For security reasons, the user may not be automatically set as Copy (CC) or Blind Copy (BCC) of an email. Such an automatism would allow sending malicious emails by entering a foreign mail address via the SMTP server.</p> <p>We strongly recommend to manually remove CC and BCC on the SMTP server.</p> <p>There must be no option to set Copy (CC) or Blind Copy (BCC) via the Masterportal. Such a feature could be misused to send malicious emails via the SMTP server.</p> <p>We warn against automatically setting the customer email as REPLY-TO.</p> <p>The unchecked copying of data to email headers is warned against depending on the security level (resp. age) of the SMTP server, since the risk of Carriage Return and Line Feed injections may lead to e.g. allowing REPLY-TO from the email header line to be escaped to ultimately manipulate the email header itself. (Example: \"test@example.com\\r\\nBCC:target1@example.com,target2@example.com,(...),target(n)@example.com\"). In a more abstract case, UTF attacks may be possible, where normally harmless UTF-16 or UTF-32 characters may change the email header's behavior when interpreted as ANSI or UTF-8, having a comparable effect.</p>"},{"location":"User/Portal-Config/config.json/#portalconfigmenutoolcontactemail","title":"Portalconfig.menu.tool.contact.email","text":"<p>E-Mail object containing a mail address, and a display name.</p> Name Required Type Default Description Expert email no String E-Mail address. false name no String Display name. false <p>Example</p> <pre><code>{\n    \"email\": \"lgvgeoportal-hilfe@gv.hamburg.de\",\n    \"name\":\"LGVGeoportalHilfe\"\n}\n</code></pre>"},{"location":"User/Portal-Config/config.json/#portalconfigmenutoollayerclustertoggler","title":"Portalconfig.menu.tool.layerClusterToggler","text":"<p>The layer cluster toggler tool allows to activate and deactivate cluster layers together</p> Name Required Type Default Description Expert name yes String \"additional:addons.menu.tools.layerClusterToggler.name\" Name displayed in the tool. false icon yes String \"bi-easel3\" icon displayed in the tool menu false clusterList yes clusterList[] [] Array of layer id objects or layer id string. false <p>Example</p> <pre><code>{\n    \"layerClusterToggler\": {\n        \"name\": \"translate#additional:addons.menu.tools.layerClusterToggler.name\",\n        \"icon\": \"bi-easel3\",\n        \"clusterList\": [\"8712\", \"21067\"]\n    }\n}\n</code></pre>"},{"location":"User/Portal-Config/config.json/#portalconfigmenutoollayerclustertogglerclusterlist","title":"Portalconfig.menu.tool.layerClusterToggler.clusterList","text":"<p>Defines a cluster of layer</p> Name Required Type Default Description Expert layerId yes String ID of the service to be shown in the portal. This layer ID MUST be configured as part of the Themenconfig! false suffix yes String Suffix of layer. This Suffix MUST be configured as part of the Themenconfig false <p>Example</p> <pre><code>{\n    \"layerClusterToggler\": {\n        \"name\": \"translate#additional:addons.menu.tools.layerClusterToggler.name\",\n        \"icon\": \"bi-easel3\",\n        \"clusterList\": [\n            \"8712\",\n            \"8713\",\n            {\n                \"layerId\": \"21067\",\n                \"suffix\": \"90012\"\n            },\n            {\n                \"layerId\": \"21067\",\n                \"suffix\": \"90013\"\n            },\n            {\n                \"layerId\": \"21067\",\n                \"suffix\": \"90014\"\n            },\n            {\n                \"layerId\": \"21067\",\n                \"suffix\": \"90015\"\n            }\n        ]\n    }\n}\n</code></pre>"},{"location":"User/Portal-Config/config.json/#portalconfigmenutoollayerslider","title":"Portalconfig.menu.tool.layerSlider","text":"<p>The layer slider tool allows showing multiple layers in a row. This may e.g. be used to animate a time series of aerial imagery.</p> Name Required Type Default Description Expert title no String \"common:modules.tools.layerSlider.title\" Name displayed in the tool. false timeInterval no Integer 2000 Time in ms until the next layer is shown. false layerIds yes layerId[] [] Array of layer information objects. false sliderType no enum[\"player\",\"handle\"] \"player\" Layer slider type. <code>\"\"player\"</code> shows start, pause, and stop buttons, while <code>\"handle\"</code> uses a switch. In the latter case, layer transparency is adjusted additionally. false <p>Example</p> <pre><code>{\n    \"layerSlider\": {\n        \"name\": \"Timeline\",\n        \"icon\": \"bi-hourglass-split\",\n        \"title\": \"Example WMS simulation\",\n        \"sliderType\": \"player\",\n        \"timeInterval\": 2000,\n        \"layerIds\": [\n            {\n                \"title\": \"Service 1\",\n                \"layerId\": \"123\"\n            },\n            {\n                \"title\": \"Service 2\",\n                \"layerId\": \"456\"\n            },\n            {\n                \"title\": \"Service 3\",\n                \"layerId\": \"789\"\n            }\n        ]\n    }\n}\n</code></pre>"},{"location":"User/Portal-Config/config.json/#portalconfigmenutoollayersliderlayerid","title":"Portalconfig.menu.tool.layerSlider.layerId","text":"<p>Defines a layer slider layer.</p> Name Required Type Default Description Expert title yes String Service name to be shown in the portal. false layerId yes String ID of the service to be shown in the portal. This layer ID MUST be configured as part of the Themenconfig! false <p>Example</p> <pre><code>{\n    \"title\": \"Service 1\",\n    \"layerId\": \"123\"\n}\n</code></pre>"},{"location":"User/Portal-Config/config.json/#portalconfigmenutoolshadow","title":"Portalconfig.menu.tool.shadow","text":"<p>The shadow tool provides a UI element to define a point in time by using sliders and date pickers. The chosen time allows rendering the shadows of all 3D objects in 3D mode by simulating the sun's position. By pulling the sliders or selecting a different date, a new sun position is calculated immediately. By default, the tool starts with the current time, which can be overwritten in the parameters.</p> Name Required Type Default Description shadowTime no shadowTime Default time the tool is started with. Recognizes \"month\", \"day\", \"hour\", and \"minute\". isShadowEnabled no Boolean false Default shadow value. <code>true</code> immediately renders shadows, <code>false</code> requires a manual confirmation. <p>Example</p> <pre><code>{\n    \"shadowTime\": {\n        \"month\": \"6\",\n        \"day\": \"20\",\n        \"hour\": \"13\",\n        \"minute\": \"0\"\n    },\n    \"isShadowEnabled\": true\n}\n</code></pre>"},{"location":"User/Portal-Config/config.json/#portalconfigmenutoolshadowshadowtime","title":"Portalconfig.menu.tool.shadow.shadowTime","text":"<p>Todo.</p> Name Required Type Default Beschreibung month no String month day no String day hour no String hour minute no String minute <p>Example <pre><code>{\n    \"month\": \"6\",\n    \"day\": \"20\",\n    \"hour\": \"13\",\n    \"minute\": \"0\"\n}\n</code></pre></p>"},{"location":"User/Portal-Config/config.json/#portalconfigmenutoolwfssearch","title":"Portalconfig.menu.tool.wfsSearch","text":"<p>Makes it possible to create a form to query WFS(\u2757) layers using filters through a separate interface. It is assumed that a stored query is used when using a WFS@2.0.0. When using a WFS@1.1.0, it is assumed that the way the WFS should be filtered is defined through the configuration.</p> <p>Multiple formulars (SearchInstances) can be defined, which will be selectable through a dropdown menu.</p> Name Required Type Default Description Expert instances yes searchInstance[] Array of <code>searchInstances</code>. A singular searchInstance corresponds to its own search form. false zoomLevel no Number 5 Defines to which zoom level the tool should zoom. Should a chosen feature not fit the zoom level, a fitting zoom level is chosen automatically. false resultsPerPage no Number 0 The search result list will at most show this amount of results at a time. Further results will be offered on separate result pages. 0 means showing all at the same time. false multiSelect no Boolean false If <code>true</code>, a user may select multiple features from the result list by either pressing Strg/Shift or using checkboxes; when zooming, all selected features will be shown. false <p>Example</p> <pre><code>{\n    \"wfsSearch\": {\n        \"instances\": [\n            {\n                \"requestConfig\": {\n                    \"layerId\": \"1234\"\n                },\n                \"selectSource\": \"https://geoportal-hamburg.de/lgv-config/gemarkungen_hh.json\",\n                \"literals\": [\n                    {\n                        \"clause\": {\n                            \"type\": \"and\",\n                            \"literals\": [\n                                {\n                                    \"field\": {\n                                        \"type\": \"equal\",\n                                        \"fieldName\": \"gemarkung\",\n                                        \"inputLabel\": \"District\",\n                                        \"options\": \"\"\n                                    }\n                                },\n                                {\n                                    \"field\": {\n                                        \"type\": \"equal\",\n                                        \"fieldName\": \"flur\",\n                                        \"inputLabel\": \"Cadastral District\",\n                                        \"options\": \"flur\"\n                                    }\n                                }\n                            ]\n                        }\n                    }\n                ]\n            }\n        ]\n    }\n}\n</code></pre>"},{"location":"User/Portal-Config/config.json/#portalconfigmenutoolwfssearchsearchinstance","title":"Portalconfig.menu.tool.wfsSearch.searchInstance","text":"<p>A singular instance of the WFS Search which will be selectable through a dropdown in the tool.</p> Name Required Type Default Description Expert literals yes literal[] Array of <code>literals</code>. true requestConfig yes requestConfig An object, which mainly contains the id of the service (<code>layerId</code> or <code>restLayerId</code>) that is supposed to be requested. If a WFS@2.0.0 will be used, the <code>storedQueryId</code> needs to be provided as well. Additionally, further options for requests can be set. false selectSource no String Optional Url leading to the expected options for the different inputs. See [https://geoportal-hamburg.de/lgv-config/gemarkungen_hh.json] for an example. false suggestions no suggestions If given, the service will be queried whenever a user inserts values into an input field to suggest a value. false title yes String Title of the search instance to be displayed in a dropdown inside the tool. false userHelp no String Information text regarding the search form to be displayed to the user. If not given, it will be generated from the structure of the config. May be a locale key. If the value explicitly set to <code>hide</code>, no information regarding the structure of the form will be displayed. false resultDialogTitle no String Heading of the result list. If not configured the name <code>WFS search</code> will be displayed. May be a translation key. false resultList no resultList Settings for the output of the found features in the result list. If no resultList is configured, the search will zoom directly to the first feature found. true <p>Example</p> <pre><code>{\n    \"requestConfig\": {\n        \"layerId\": \"1234\"\n    },\n    \"resultList\": {\n        \"schulname\": \"School name\",\n        \"abschluss\": \"Degree\"\n    },\n    \"selectSource\": \"https://geoportal-hamburg.de/lgv-config/gemarkungen_hh.json\",\n    \"title\": \"Parcel Search\",\n    \"literals\": [\n        {\n            \"clause\": {\n                \"type\": \"and\",\n                \"literals\": [\n                    {\n                        \"field\": {\n                            \"type\": \"equal\",\n                            \"fieldName\": \"gemarkung\",\n                            \"inputLabel\": \"District\",\n                            \"options\": \"\"\n                        }\n                    },\n                    {\n                        \"field\": {\n                            \"type\": \"equal\",\n                            \"fieldName\": \"flur\",\n                            \"inputLabel\": \"Cadastral District\",\n                            \"options\": \"flur\"\n                        }\n                    }\n                ]\n            }\n        }\n    ]\n}\n</code></pre>"},{"location":"User/Portal-Config/config.json/#portalconfigmenutoolwfssearchsearchinstanceliteral","title":"Portalconfig.menu.tool.wfsSearch.searchInstance.literal","text":"<p>A <code>literal</code> can either have the parameter <code>clause</code>, or the parameter <code>field</code>. If both are set, the <code>clause</code>-part will be ignored. However, a <code>field</code> needs to be wrapped inside a <code>clause</code> (as seen in most examples).</p> Name Required Type Default Description Expert clause yes clause Defines the way multiple <code>literals</code> should be queried together. Can be seen as a group of <code>literals</code>. true field no field Representation for the selection field of a service value for the user. true <p>Examples</p> <pre><code>{\n    \"clause\": {\n        \"type\": \"and\",\n        \"literals\": [\n            {\n                \"field\": {\n                    \"type\": \"equal\",\n                    \"fieldName\": \"gemarkung\",\n                    \"inputLabel\": \"District\",\n                    \"options\": \"\"\n                }\n            },\n            {\n                \"field\": {\n                    \"type\": \"equal\",\n                    \"fieldName\": \"flur\",\n                    \"inputLabel\": \"Cadastral District\",\n                    \"options\": \"flur\"\n                }\n            }\n        ]\n    }\n}\n</code></pre> <pre><code>{\n    \"field\": {\n        \"type\": \"equal\",\n        \"fieldName\": \"rivers\",\n        \"inputLabel\": \"Rivers\",\n        \"options\": [\n            {\n                \"id\": \"0\",\n                \"displayName\": \"Elbe\"\n            },\n            {\n                \"id\": \"1\",\n                \"displayName\": \"Moselle\"\n            },\n            {\n                \"id\": \"2\",\n                \"displayName\": \"Rhine\"\n            }\n        ]\n    }\n}\n</code></pre>"},{"location":"User/Portal-Config/config.json/#portalconfigmenutoolwfssearchsearchinstanceliteralclause","title":"Portalconfig.menu.tool.wfsSearch.searchInstance.literal.clause","text":"<p>A <code>clause</code> defines the way multiple <code>literals</code> should be queried together.</p> Name Required Type Default Description Expert literals yes literal[] Array of <code>literals</code>. true type yes enum[\"and\", \"or\"] The way the <code>literals</code> in this <code>clause</code> should be queried together. false <p>Example</p> <pre><code>{\n    \"clause\": {\n        \"type\": \"and\",\n        \"literals\": [\n            {\n                \"field\": {\n                    \"type\": \"equal\",\n                    \"fieldName\": \"gemarkung\",\n                    \"inputLabel\": \"District\",\n                    \"options\": \"\"\n                }\n            },\n            {\n                \"field\": {\n                    \"type\": \"equal\",\n                    \"fieldName\": \"flur\",\n                    \"inputLabel\": \"Cadastral District\",\n                    \"options\": \"flur\"\n                }\n            }\n        ]\n    }\n}\n</code></pre>"},{"location":"User/Portal-Config/config.json/#portalconfigmenutoolwfssearchsearchinstanceliteralfield","title":"Portalconfig.menu.tool.wfsSearch.searchInstance.literal.field","text":"<p>A <code>field</code> represents the selection field for a value in the service.</p> <p>It is possible to use a <code>field</code> for multiple search parameters. To do this, each parameter needs to be an array where each element of the array corresponds to a single parameter of the service. A configuration like</p> <pre><code>{\n    \"field\": {\n        \"type\": [\"equal\", \"like\"],\n        \"fieldName\": [\"flst\", \"gmkr\"],\n        \"inputLabel\": [\"Parcel\", \"Communal district number\"]\n    }\n}\n</code></pre> <p>would create a single <code>field</code> with which the user can decide whether he wants to use the input field to search for a <code>Parcel</code> or a <code>Communal district number</code> by selecting the value through a dropdown. If the values are not an array, a label for the <code>field</code> will be shown instead of the dropdown.</p> <p>If the parameter <code>options</code> is set, a select field is used, otherwise a simple text input. If <code>options</code> is a String, it is important that the order of the Fields corresponds to the order of the objects in the external source (<code>selectSource</code>). Assume the source looks like this:</p> <pre><code>{\n    \"one\": {\n        \"foo\": {\n            \"id\": \"foo_one\",\n            \"bar\": [\"f1_bar_one\", \"f1_bar_two\"]\n        }\n    },\n    \"two\": {\n        \"foo\": {\n            \"id\": \"foo_two\",\n            \"bar\": [\"f2_bar_one\", \"f2_bar_two\"]\n        }\n    }\n}\n</code></pre> <p>Then the order of the config should look like this:</p> <pre><code>{\n    \"clause\": {\n        \"type\": \"and\",\n        \"literals\": [\n            {\n                \"field\": {\n                    \"type\": \"equal\",\n                    \"fieldName\": \"objects\",\n                    \"inputLabel\": \"Objects\",\n                    \"options\": \"\"\n                }\n            },\n            {\n                \"field\": {\n                    \"type\": \"equal\",\n                    \"fieldName\": \"foo\",\n                    \"inputLabel\": \"Foo\",\n                    \"options\": \"foo\"\n                }\n            },\n            {\n                \"field\": {\n                    \"type\": \"equal\",\n                    \"fieldName\": \"bar\",\n                    \"inputLabel\": \"Bar\",\n                    \"options\": \"foo.bar\"\n                }\n            }\n        ]\n    }\n}\n</code></pre> Name Required Type Default Description Expert defaultValue no String/String[] If the field is not <code>required</code>, this value will be used on sending. false fieldName yes String/String[] The wfs service parameter name for the comparison. false inputLabel yes String/String[] Label for the UI element. May be a locale key. false inputPlaceholder no String/String[] Placeholder for the UI element; only used if <code>options</code> is not set. Should contain example data. May be a locale key. false inputTitle no String/String[] Value to be shown when hovering the UI element. May be a locale key. false required no Boolean/Boolean[] false Whether the field has to be filled. false options no String/option[]/String[] If <code>options</code> is an array (irrelevant if of strings or options), the given values are used for selection. These options may either match option or are plain values (<code>String</code> / <code>Number</code>). In the latter case, the plain value is used as both id and <code>displayName</code>.  If it is a String, there are different possibilities: <ul><li>If the String is empty, the keys of selectSource are used.</li><li>If the String is not empty, it is assumed that another field with <code>options=\"\"</code> exists; otherwise the field is disabled. It is also assumed that the String represents an array in selectSource providing further options.</li></ul> Note: It is also possible to declare the <code>options</code> as a multidimensional array option[][]. However, this can't be used as a parameter for Masterportal Admin. This should be used if an option[] is wanted for a <code>field</code> that uses multiples parameters. true type no enum[\"equal\", \"like\"]/enum[\"equal\", \"like\"][] Required for usage with WFS@1.1.0. The <code>type</code> declared how the field should be compared to the value in the service. false usesId no Boolean/Boolean[] false Only relevant if the Parameters <code>options</code> is set and an empty String (root element). Determines whether the key of the object of the external source should be used as a value for the query or if the object has an Id which should be used. false <p>Example</p> <pre><code>{\n    \"field\": {\n        \"type\": \"equal\",\n        \"fieldName\": \"rivers\",\n        \"inputLabel\": \"Rivers\",\n        \"options\": [\n            {\n                \"displayName\": \"Elbe\",\n                \"fieldValue\": \"0\"\n            },\n            {\n                \"displayName\": \"Moselle\",\n                \"fieldValue\": \"1\"\n            },\n            {\n                \"displayName\": \"Rhine\",\n                \"fieldValue\": \"2\"\n            }\n        ]\n    }\n}\n</code></pre>"},{"location":"User/Portal-Config/config.json/#portalconfigmenutoolwfssearchsearchinstanceliteralfieldoption","title":"Portalconfig.menu.tool.wfsSearch.searchInstance.literal.field.option","text":"<p>A selectable option for a queryable parameter.</p> Name Required Type Default Description Expert displayName no String Value to be displayed for the value. May be a locale key. If not set, the <code>id</code> will be shown. false fieldValue yes String Value that is supposed to be sent to the service. false <p>Example</p> <pre><code>{\n    \"fieldValue\": \"elbe\",\n    \"displayName\": \"Elbe\"\n}\n</code></pre>"},{"location":"User/Portal-Config/config.json/#portalconfigmenutoolwfssearchsearchinstanceresultlist","title":"Portalconfig.menu.tool.wfsSearch.searchInstance.resultList","text":"<p>Settings for the output of the found features in the result list.</p> <p>By specifying <code>showAll</code> all attributes of the found features are displayed in their original form.</p> <p>By using an Object, a key of the Object must represent one of the attributes of the feature, and the corresponding value defines the textual output of that attribute.</p> <p>Examples:</p> <pre><code>{\n    \"resultList\": \"showAll\"\n}\n</code></pre> <pre><code>{\n    \"resultList\": {\n        \"schulname\": \"School name\",\n        \"abschluss\": \"Degree\"\n    }\n}\n</code></pre>"},{"location":"User/Portal-Config/config.json/#portalconfigmenutoolwfssearchsearchinstancerequestconfig","title":"Portalconfig.menu.tool.wfsSearch.searchInstance.requestConfig","text":"<p>Information about the WFS service that is supposed to be requested. Either <code>layerId</code> or <code>restLayerId</code> need to be present. If <code>layerId</code> is chosen, the layer needs to be configured in the config.json. If both are defined <code>restLayerId</code> is used.</p> Name Required Type Default Description Expert gazetteer no gazetteer Declares whether the used WFS service is a WFS-G, which needs to be parsed differently. false layerId no String Id of the WFS service that should be queried. Information is fetched from services.json. false likeFilter no likeFilter {\"wildCard\": \"*\", \"singleChar\": \"#\", \"escape\": \"!\"} The configuration of the service for the like filter. true maxFeatures no Number/String 8 Maximum amount of features that are supposed to be returned from the service. Alternatively, the String <code>showAll</code> can be assigned to <code>maxFeatures</code> to load all features. false restLayerId no String Id of the WFS service that should be queried. Information is fetched from rest-services.json. false responseProjection no String The expected projection of the coordinates in the response of the requested service. If it doesn't match the map projection a conversion will happen. false storedQueryId no String The id of the Stored Query of the WFS that should be used to query the service. If this field is set, it is assumed that a WFS@2.0.0 is used. false <p>Example</p> <pre><code>{\n    \"requestConfig\": {\n        \"restLayerId\": \"1234\",\n        \"storedQueryId\": \"Flurstuecke\",\n        \"responseProjection\": \"EPSG:4326\"\n    }\n}\n</code></pre>"},{"location":"User/Portal-Config/config.json/#portalconfigmenutoolwfssearchsearchinstancerequestconfiglikefilter","title":"Portalconfig.menu.tool.wfsSearch.searchInstance.requestConfig.likeFilter","text":"<p>Values inside a filter for a WFS service can be compared with an <code>equal</code> or a <code>like</code>. If the comparison should be with a <code>like</code> then the filter needs additional properties. These may vary in value and property definition. For the documentation, it is assumed that the properties are called <code>wildCard</code>, <code>singleChar</code> and <code>escapeChar</code>; variations like e.g. <code>single</code> and <code>escape</code> are possible and need to be configured in line with the service. All key-value pairs are used in the request as given.</p> Name Required Type Default Description Expert wildCard yes String \"*\" The wildcard value for the like filter. true singleChar yes String \"#\" The single character value for the like filter. true escapeChar yes String \"!\" The escape character value for the like filter. true <p>Example</p> <p>In this example case, the key for <code>escapeChar</code> deviates.</p> <pre><code>{\n    \"wildCard\": \"*\",\n    \"singleChar\": \"#\",\n    \"escape\": \"!\"\n}\n</code></pre>"},{"location":"User/Portal-Config/config.json/#portalconfigmenutoolwfssearchsearchinstancerequestconfiggazetteer","title":"Portalconfig.menu.tool.wfsSearch.searchInstance.requestConfig.gazetteer","text":"<p>Parameters that are exclusively needed for using a WFS-G (Gazetteer).</p> Name Required Type Default Description Expert namespaces yes String/String[] The namespaces need to be provided. false memberSuffix yes enum[\"member\",\"featureMember\"] The suffix of the featureType needs to be specified. false <p>Example</p> <pre><code>{\n    \"gazetteer\": {\n        \"namespaces\": [\n            \"http://www.adv-online.de/namespaces/adv/dog\",\n            \"http://geodienste.hamburg.de/dog_gages/services/wfs_dog?SERVICE=WFS&amp;VERSION=2.0.0&amp;REQUEST=DescribeFeatureType&amp;OUTPUTFORMAT=application/gml+xml;+version=3.2&amp;TYPENAME=dog:Flurstueckskoordinaten&amp;NAMESPACES=xmlns(dog,http://www.adv-online.de/namespaces/adv/dog)\"\n        ],\n        \"memberSuffix\": \"memberSuffix\"\n    }\n}\n</code></pre>"},{"location":"User/Portal-Config/config.json/#portalconfigmenutoolwfssearchsearchinstancesuggestions","title":"Portalconfig.menu.tool.wfsSearch.searchInstance.suggestions","text":"<p>Configuration for the suggestions of the user input.</p> Name Required Type Default Description Expert featureType no String If given, the query will be sent with this featureType instead of the one configured for the service itself. Only usable if the layer was defined in the services.json. false length no Number 3 The query is triggered when the length of the input is at least as long as this parameter. false"},{"location":"User/Portal-Config/config.json/#portalconfigmenutoolwfst","title":"Portalconfig.menu.tool.wfst","text":"<p>WFS-T module to visualize (GetFeature), create (insert), update (update) and delete (delete) features of a Web Feature Service (WFS) which is able to receive transactions. To use this tool, a WFS-T layer must be provided in version 1.1.0. For more configuration information see services.json.</p> <p>When editing properties of a feature / adding properties to a new features, the available values including its label are based on the layers configured <code>gfiAttributes</code>. For more information see services.json.</p> Name Required Type Default Description Expert layerIds yes String[] Array of ids of layer defined in services.json. false icon no String \"bi-globe\" Icon displayed for the tool. false name no String \"WfsTransaction\" Tool name shown in the portal. false layerSelectLabel no String \"common:modules.tools.wfsTransaction.layerSelectLabel\" Deprecated in 3.0.0. Please set the value directly in the language files. If given, overrides the value set for the label of the layer select box. May be a locale key. false toggleLayer no Boolean false Whether the features of the currently selected layer should stay visible when adding a new feature. false useProxy no Boolean false Deprecated in 3.0.0. GDI-DE recommends setting CORS headers on the required services instead of using proxies. Defines whether a service URL should be requested via proxy. For this, dots in the URL are replaced with underscores. false areaButton no TransactionConfig[]/Boolean [] Deprecated in 3.0.0. Please use <code>polygonButton</code> instead. If both are present, <code>areaButton</code> is used for now. Defines which layers of <code>layerIds</code> allow insert transactions of polygon geometries. false delete no TransactionConfig/Boolean false Defines which layers of <code>layerIds</code> allow delete transactions. false edit no String/Boolean false Deprecated in 3.0.0. Please use <code>update</code> instead. If both are present, <code>edit</code> is used for now. If present as a Boolean, it is decided whether features can generally be updated and if it is present as a string, features can be updated and the String defined the value presented inside the button. false lineButton no TransactionConfig[]/Boolean [] Defines which layers of <code>layerIds</code> allow insert transactions of line geometries. false pointButton no TransactionConfig[]/Boolean [] Defines which layers of <code>layerIds</code> allow insert transactions of point geometries. false polygonButton no TransactionConfig[]/Boolean [] Defines which layers of <code>layerIds</code> allow insert transactions of polygon geometries. false update no TransactionConfig/Boolean false Defines which layers of <code>layerIds</code> allow update transactions. false <p>Example</p> <pre><code>{\n    \"wfst\": {\n        \"name\": \"WFS-T Tool\",\n        \"icon\": \"bi-globe\",\n        \"layerIds\": [\"1234\", \"5678\", \"4389\"],\n        \"toggleLayer\": true,\n        \"pointButton\": [\n            {\n                \"layerId\":\"1234\",\n                \"caption\": \"Point test\",\n                \"show\": true\n            },\n            {\n                \"layerId\": \"5678\",\n                \"show\": true,\n                \"multi\": true\n            }\n        ],\n        \"lineButton\": false,\n        \"polygonButton\": [\n            {\n                \"layerId\": \"4389\",\n                \"show\": false\n            }\n        ],\n        \"update\": [\n            {\n                \"layerId\": \"4389\",\n                \"show\": true\n            }\n        ]\n    }\n}\n</code></pre>"},{"location":"User/Portal-Config/config.json/#portalconfigmenutoolwfsttransactionconfig","title":"Portalconfig.menu.tool.wfst.TransactionConfig","text":"<p>Specific configuration for transaction methods of given layers.</p> Name Required Type Default Description Expert <p>|available|yes|Boolean|true|Availability of the transaction method for the layer with the given id.|false| |layerId|yes|String||Layer the transaction method is being configured for.|false| |caption|no|String|\"common:modules.tools.wfsTransaction.interactionSelect.\"|Deprecated in 3.0.0. Please use <code>text</code> instead. If both are present, <code>cpation</code> is used for now. Button text. If no value is given, <code>*</code> will be replaced with a standard value depending on the configured button. May be a locale key.|false| |icon|no|String||Bootstrap icon displayed inside the button. If no value is specified, it defaults to the default value configured for the transaction method.|false| |multi|no|Boolean|false|Whether the drawn geometries of this layer should be Multi-X.  This parameter does not have any use for <code>update</code> / <code>edit</code> and <code>delete</code>.|false| |show|no|Boolean|true|Deprecated in 3.0.0. Please use <code>available</code> instead. If both are present, <code>show</code> is used for now. Availability of the button for the layer with the given id.|false| |text|no|String|\"common:modules.tools.wfsTransaction.interactionSelect.\"|Button text. If no value is given, <code>*</code> will be replaced with a standard value depending on the configured button. May be a locale key.|false|</p> <p>Examples</p> <pre><code>{\n    \"layerId\": \"1234\",\n    \"show\": true,\n    \"caption\": \"Point test\"\n}\n</code></pre> <pre><code>{\n    \"layerId\": \"5678\",\n    \"show\": true\n}\n</code></pre> <pre><code>{\n    \"layerId\": \"5489\",\n    \"multi\": true\n}\n</code></pre>"},{"location":"User/Portal-Config/config.json/#portalconfigmenutoolcoordtoolkit","title":"Portalconfig.menu.tool.coordToolkit","text":"<p>Coordinates tool. To display the height above sea level in addition to the 2 dimensional coordinates, a 'heightLayerId' of a WMS service that provides the height must be specified. The format XML is expected and the attribute for the heights is expected under the value of the parameter 'heightElementName'.</p> Name Required Type Default Description Expert heightLayerId no String Coordinate query: Id of the WMS layer that provides the height in XML format. If not defined, then no height is displayed. false heightElementName no String Coordinate query: The element name under which the height in the XML is searched. false heightValueWater no String Coordinate query: the value in the element defined under \"heightElementName\" supplied by the WMS for an unmeasured height in the water area, it will display the internationalized text \"Water surface, no heights available\" under the key \"common:modules.tools.coordToolkit.noHeightWater\" in the interface. If this attribute is not specified, then the text provided by the WMS will be displayed. false heightValueBuilding no String Coordinate query: the value in the element defined under \"heightElementName\" supplied by the WMS for a non-measured height in the building area, it will display the internationalized text \"Building area, no heights available\" under the key \"common:modules.tools.coordToolkit.noHeightBuilding\" in the interface. If this attribute is not specified, then the text provided by the WMS will be displayed. false zoomLevel no Number 7 Coordinate search: Specifies the zoom level to which you want to zoom. false showCopyButtons no Boolean true Switch to show or hide the buttons for copying the coordinates. false delimiter no String \"Pipe-Symbol\" Delimiter of the coordinates when copying the coordinate pair false heightLayerInfo no String An explanation for the height can be deposited here. false coordInfo no CoordInfo An object with explanations for the coordinate reference systems can be stored here. false <p>Example <pre><code>#!json\n \"coordToolkit\": {\n            \"name\": \"translate#common:menu.tools.coordToolkit\",\n            \"icon\": \"bi-globe\",\n            \"zoomLevel\": 5,\n            \"heightLayerId\" : \"19173\",\n            \"heightElementName\": \"value_0\",\n            \"heightValueWater\": \"-20\",\n            \"heightValueBuilding\": \"200\",\n            \"delimiter\": \"-\",\n            \"showCopyButtons\": true\n          }\n</code></pre></p>"},{"location":"User/Portal-Config/config.json/#portalconfigmenutoolcoordtoolkitcoordinfo","title":"Portalconfig.menu.tool.coordToolkit.coordInfo","text":"Name Required Type Default Description Expert title no string Heading for the explanations on the coordinate reference systems. false explanations no explanations[] Array with explanations from which a list is generated. false"},{"location":"User/Portal-Config/config.json/#portalconfigmenutoolcoordtoolkitcoordinfoexplanations","title":"Portalconfig.menu.tool.coordToolkit.coordInfo.explanations","text":"<p>Array with explanations from which a list is generated.</p>"},{"location":"User/Portal-Config/config.json/#portalconfigmenutooladdwms","title":"Portalconfig.menu.tool.addWMS","text":"<p>The tool allows for adding additional WMS layers via a provided URL.</p>"},{"location":"User/Portal-Config/config.json/#portalconfigmenutoolbufferanalysis","title":"Portalconfig.menu.tool.bufferAnalysis","text":"<p>The tool highlights features of a target layer, that are located within or outside a circle around the features of a source-Layer. The circle is defined by a buffer-radius. The tool requires vector based Data from WFS(\u2757) services for both the source and the target layer.</p>"},{"location":"User/Portal-Config/config.json/#portalconfigmenutoolcoord","title":"Portalconfig.menu.tool.coord","text":"<p>\u26a0\ufe0fDeprecated in 3.0.0 Please use  \"supplyCoord\" instead. Tool to read coordinates on mouse click</p>"},{"location":"User/Portal-Config/config.json/#portalconfigmenutoolcoordtoolkit_1","title":"Portalconfig.menu.tool.coordToolkit","text":"<p>Tool to read coordinates on mouse click and search for coordinates.</p>"},{"location":"User/Portal-Config/config.json/#portalconfigmenutoolextendedfilter","title":"Portalconfig.menu.tool.extendedFilter","text":"<p>\u26a0\ufe0fDeprecated in 3.0.0 Please use \"filter\" instead.</p> <p>Dynamic filtering of WFS(\u2757) features. This requires an  <code>extendedFilter</code> configuration on the WFS layer object.</p>"},{"location":"User/Portal-Config/config.json/#portalconfigmenutoolfileimport","title":"Portalconfig.menu.tool.fileImport","text":"<p>Import \".kml\", \".geojson\" and \"*.gpx\" files with this tool.</p> Name Required Type Default Description Expert enableZoomToExtend no Boolean false To decide if the file name is shown as a button and it is able to zoom the imported features by clicking the file name false <p>Example <pre><code>#!json\n\"fileImport\": {\n    \"name\": \"translate#common:menu.tools.fileImport\",\n    \"icon\":\"bi-box-arrow-in-down-right\",\n    \"enableZoomToExtend\": true\n}\n</code></pre></p>"},{"location":"User/Portal-Config/config.json/#portalconfigmenutoolkmlimport","title":"Portalconfig.menu.tool.kmlimport","text":"<p>\u26a0\ufe0fDeprecated in 3.0.0. Please use <code>fileImport</code> instead.</p> <p>Import \".kml\", \".geojson\" and \"*.gpx\" files with this tool.</p>"},{"location":"User/Portal-Config/config.json/#portalconfigmenutoollayerclustertoggler_1","title":"Portalconfig.menu.tool.layerClusterToggler","text":"<p>With this tool one can de-/activate clusters of layers together.</p>"},{"location":"User/Portal-Config/config.json/#portalconfigmenutoolstylevt","title":"Portalconfig.menu.tool.styleVT","text":"<p>The tool allows for switching the style of vector tile layers(\u2757) which provides multiple stylings defined in the <code>services.json</code> file.</p>"},{"location":"User/Portal-Config/config.json/#portalconfigmenutoolsupplycoord","title":"Portalconfig.menu.tool.supplyCoord","text":"<p>\u26a0\ufe0fDeprecated in 3.0.0. Please use <code>coordToolkit</code> instead.</p> <p>Tool to read coordinates on mouse click.</p>"},{"location":"User/Portal-Config/config.json/#portalconfigmenutoolresettree_1","title":"Portalconfig.menu.tool.resetTree","text":"<p>Tool to reset the tree.</p>"},{"location":"User/Portal-Config/config.json/#portalconfigmenutoolwfsfeaturefilter","title":"Portalconfig.menu.tool.wfsFeatureFilter","text":"<p>\u26a0\ufe0fDeprecated in 3.0.0. Please use <code>filter</code> instead.</p> <p>The tool allows for filtering WFS(\u2757) features. This required configuring \"filterOptions\" on the WFS layer object.|false|</p>"},{"location":"User/Portal-Config/config.json/#portalconfigmenutoolrouting","title":"Portalconfig.menu.tool.routing","text":"<p>Routing-tool. Enables user to plan routes between multiple points with multiple options to choose from. In addition users can create isochrones. Both functions are available with mass requests for specific use cases. \u2757 This tool will use the routing service provided by the BKG \u2757.</p> Name Required Type Default Description Expert activeRoutingToolOption no String \"DIRECTIONS\" Which routing tool should be open. false routingToolOptions no String[] [ ] Which routing tool should be enabled. (\"DIRECTIONS\", \"ISOCHRONES\") false download no download Downloadoptions false geosearch no geosearch Geosearchoptions false geosearchReverse no geosearchReverse Geosearchreverseoptions false directionsSettings no directionsSettings Directionsoptions false isochronesSettings no isochronesSettings Isochronesoptions false <p>Example <pre><code>#!json\n{\n    \"routing\": {\n        \"name\": \"translate#common:menu.tools.routing\",\n        \"icon\": \"bi-signpost-2-fill\",\n        \"activeRoutingToolOption\": \"DIRECTIONS\",\n        \"routingToolOptions\": [\"DIRECTIONS\", \"ISOCHRONES\"],\n        \"download\": {\n            \"filename\": \"\",\n            \"format\": \"GEOJSON\"\n        },\n        \"geosearch\": {\n            \"minChars\": 3,\n            \"limit\": 10,\n            \"type\": \"BKG\",\n            \"serviceId\": \"bkg_geosearch\"\n        },\n        \"geosearchReverse\": {\n            \"distance\": 1000,\n            \"filter\": \"\",\n            \"type\": \"BKG\",\n            \"serviceId\": \"bkg_suggest\"\n        },\n        \"directionsSettings\": {\n            \"type\": \"ORS\",\n            \"serviceId\": \"bkg_ors\",\n            \"speedProfile\": \"CAR\",\n            \"preference\": \"RECOMMENDED\",\n            \"styleRoute\": {\n                \"fillColor\": [255, 44, 0],\n                \"width\": 6,\n                \"highlightColor\": [255, 255, 255],\n                \"highlightWidth\": 9,\n                \"partHighlightColor\": [255, 255, 255],\n                \"partHighlightWidth\": 3\n            },\n            \"styleWaypoint\": {\n                \"lineColor\": [255, 127, 0],\n                \"lineWidth\": 4,\n                \"fillColor\": [255, 127, 0],\n                \"textFillColor\": \"#000\",\n                \"textLineColor\": \"#fff\",\n                \"textLineWidth\": 3,\n                \"opacity\": 0.3,\n                \"radius\": 8\n            },\n            \"styleAvoidAreas\": {\n                \"lineColor\": [0, 127, 255],\n                \"lineWidth\": 2,\n                \"fillColor\": [0, 127, 255],\n                \"opacity\": 0.3,\n                \"pointRadius\": 8,\n                \"pointLineWidth\": 4\n            },\n            \"batchProcessing\": {\n                \"enabled\": false,\n                \"active\": false,\n                \"limit\": 1000,\n                \"maximumConcurrentRequests\": 3\n            }\n        },\n        \"isochronesSettings\": {\n            \"type\": \"ORS\",\n            \"serviceId\": \"bkg_ors\",\n            \"speedProfile\": \"CAR\",\n            \"isochronesMethodOption\": \"TIME\",\n            \"distanceValue\": 30,\n            \"minDistance\": 1,\n            \"maxDistance\": 400,\n            \"timeValue\": 30,\n            \"minTime\": 1,\n            \"maxTime\": 180,\n            \"intervalValue\": 15,\n            \"minInterval\": 3,\n            \"maxInterval\": 30,\n            \"styleCenter\": {\n                \"lineColor\": [255, 127, 0],\n                \"lineWidth\": 4,\n                \"fillColor\": [255, 127, 0],\n                \"opacity\": 0.3,\n                \"radius\": 8\n            },\n            \"styleIsochrones\": {\n                \"lineWidth\": 2,\n                \"opacity\": 0.65,\n                \"startColor\": [66, 245, 78],\n                \"endColor\": [245, 66, 66]\n            },\n            \"batchProcessing\": {\n                \"enabled\": false,\n                \"active\": false,\n                \"limit\": 1000,\n                \"maximumConcurrentRequests\": 3\n            }\n        }\n    }\n}\n</code></pre></p>"},{"location":"User/Portal-Config/config.json/#portalconfigmenutoolroutingdownload","title":"Portalconfig.menu.tool.routing.download","text":"<p>Routing-tool download options.</p> Name Required Type Default Description Expert fileName no String Default filename for the download. false format no String \"GEOJSON\" Which format should be selected by default. (\"GEOJSON\", \"KML\", \"GPX\") false <p>Example <pre><code>#!json\n{\n    \"download\": {\n        \"filename\": \"\",\n        \"format\": \"GEOJSON\"\n    }\n}\n</code></pre></p>"},{"location":"User/Portal-Config/config.json/#portalconfigmenutoolroutinggeosearch","title":"Portalconfig.menu.tool.routing.geosearch","text":"<p>Routing-tool geosearch options.</p> Name Required Type Default Description Expert minChars no Number 3 Minimum amount of characters before sending a request to an external service. false limit no Number 10 Maximale amount of characters for the search. false type yes String Which type of the geosearch should be used. (\"BKG\", \"NOMINATIM\", \"LOCATIONFINDER\", \"KOMOOT\", \"GAZETTEER\", \"SPECIALWFS\", \"ELASTIC\") false serviceId yes String Which service should be used for the geosearch. false typeName no String Type name for the specialWfs geosearch query. false propertyNames no String[] Names of properties to be included in the specialWfs geosearch. false geometryNames no String Name of the geometry field for specialWfs geosearch. false bbox no bbox BBOX value according to the speedProfile. Coordinate system depends on the epsg parameter. Geosearch service must support bbox string. false epsg no String 4326 Which EPSG code is used by the service (e.g. 4326, 25832). false searchField no String The path to the field to be searched for when using Elastic Search. false sortField no String The path to the field that specifies the sorting of the results in ascending order when using Elastic Search. false <p>Example for BKG <pre><code>#!json\n{\n    \"geosearch\": {\n        \"type\": \"BKG\",\n        \"serviceId\": \"bkg_geosearch\",\n        \"bbox\": {\"CYCLING\": \"9.6,53.40,10.4,53.84\"}\n    }\n}\n</code></pre> Example for SPECIALWFS <pre><code>#!json\n{\n    \"geosearch\": {\n        \"minChars\": 3,\n        \"limit\": 10,\n        \"type\": \"SPECIALWFS\",\n        \"serviceId\": \"specialWfs_geosearch\",\n        \"typeName\": \"ms:strasse_nr\",\n        \"propertyNames\": [\n            \"ms:LABEL_TEXT\"\n            ],\n        \"geometryName\": \"ms:msGeometry\"\n    }\n}\n</code></pre> Example for ELASTIC <pre><code>#!json\n{\n    \"geosearch\": {\n        \"minChars\": 3,\n        \"limit\": 10,\n        \"type\": \"ELASTIC\",\n        \"serviceId\": \"elastic_geosearch\",\n        \"epsg\": \"25832\",\n        \"searchField\": \"properties.searchField\",\n        \"sortField\": \"properties.HAUSNUMMER\"\n    }\n}\n</code></pre></p>"},{"location":"User/Portal-Config/config.json/#portalconfigmenutoolroutinggeosearchbbox","title":"Portalconfig.menu.tool.routing.geosearch.bbox","text":"<p>BBOX value according to the speedProfile. Coordinate system depends on the epsg parameter. Geosearch service must support bbox string. |Name|Required|Type|Default|Description|Expert| |----|--------|----|-------|-----------|------| |speedProfile|no|String||Coordinate values \"West,South,East,North\"|false|</p> <p>Example <pre><code>#!json\n{\n    \"bbox\": {\"CYCLING\": \"9.6,53.40,10.4,53.84\"}\n}\n</code></pre></p>"},{"location":"User/Portal-Config/config.json/#portalconfigmenutoolroutinggeosearchreverse","title":"Portalconfig.menu.tool.routing.geosearchReverse","text":"<p>Routing-tool geosearch reverse options.</p> Name Required Type Default Description Expert distance no Number 1000 Search radius in meter for the external service. false filter no String Additional filter used in the query. false type yes String Which type of geosearch reverse should be used. (\"BKG\", \"NOMINATIM\", KOMOOT) false serviceId yes String Which service should be used for the geosearch reverse. false <p>Example <pre><code>#!json\n{\n    \"geosearchReverse\": {\n        \"distance\": 1000,\n        \"filter\": \"\",\n        \"type\": \"BKG\",\n        \"serviceId\": \"bkg_suggest\"\n    }\n}\n</code></pre></p>"},{"location":"User/Portal-Config/config.json/#portalconfigmenutoolroutingdirectionssettings","title":"Portalconfig.menu.tool.routing.directionsSettings","text":"<p>Routing-tool directions options.</p> Name Required Type Default Description Expert type yes String Which type of service should be used for the request. (\"ORS\") false serviceId yes String Which service should be used for the request. false speedProfile no String \"CAR\" Which speed profile should be selected by default. false preference no String \"RECOMMENDED\" Which type of directions should be used by default. false customPreferences no customPreferences Possibility to define additional preferences for the different speed profiles (additionally to the BKG service)  (requires own modified backend) false customAvoidFeatures no customAvoidFeatures Possibility to define own options for avoid traffic routes for the different speed profiles(additionally to the BKG service) (requires own modified backend) false styleRoute no styleRoute Stylerouteoptions false styleWaypoint no styleWaypoint Stylewaypointoptions false styleAvoidAreas no styleAvoidAreas Styleavoidareasoptions false batchProcessing no batchProcessing Batchprocessingoptions false <p>Example <pre><code>#!json\n{\n    \"directionsSettings\": {\n        \"type\": \"ORS\",\n        \"serviceId\": \"bkg_ors\",\n        \"speedProfile\": \"CAR\",\n        \"preference\": \"RECOMMENDED\",\n        \"customPreferences\": {\n            \"CYCLING\": [\"RECOMMENDED\", \"SHORTEST\", \"GREEN\"]\n        },\n        \"customAvoidFeatures\": {\n                \"CYCLING\": [\"STEPS\", \"FERRIES\", \"UNPAVEDROADS\"]\n        },\n        \"styleRoute\": {\n            \"fillColor\": [255, 44, 0],\n            \"width\": 6,\n            \"highlightColor\": [255, 255, 255],\n            \"highlightWidth\": 9,\n            \"partHighlightColor\": [255, 255, 255],\n            \"partHighlightWidth\": 3\n        },\n        \"styleWaypoint\": {\n            \"lineColor\": [255, 127, 0],\n            \"lineWidth\": 4,\n            \"fillColor\": [255, 127, 0],\n            \"textFillColor\": \"#000\",\n            \"textLineColor\": \"#fff\",\n            \"textLineWidth\": 3,\n            \"opacity\": 0.3,\n            \"radius\": 8\n        },\n        \"styleAvoidAreas\": {\n            \"lineColor\": [0, 127, 255],\n            \"lineWidth\": 2,\n            \"fillColor\": [0, 127, 255],\n            \"opacity\": 0.3,\n            \"pointRadius\": 8,\n            \"pointLineWidth\": 4\n        },\n        \"batchProcessing\": {\n            \"enabled\": false,\n            \"active\": false,\n            \"limit\": 1000,\n            \"maximumConcurrentRequests\": 3\n        }\n    }\n}\n</code></pre></p>"},{"location":"User/Portal-Config/config.json/#portalconfigmenutoolroutingdirectionssettingscustomavoidfeatures","title":"Portalconfig.menu.tool.routing.directionsSettings.customAvoidFeatures","text":"<p>Possibility to define additional avoid features for the different speed profiles (additionally to the BKG service) (requires own modified backend). |Name|Required|Type|Default|Description|Expert| |----|--------|----|-------|-----------|------| |speedProfile|no|String[]||Options for avoid traffic routes that should be available for the speedProfile.|false|</p> <p>Example <pre><code>#!json\n{\n    \"customAvoidFeatures\": {\n       \"CYCLING\": [\"STEPS\", \"FERRIES\", \"UNPAVEDROADS\"],\n       \"CAR\": [\"HIGHWAYS\"]\n    }\n}\n</code></pre></p>"},{"location":"User/Portal-Config/config.json/#portalconfigmenutoolroutingdirectionssettingscustompreferences","title":"Portalconfig.menu.tool.routing.directionsSettings.customPreferences","text":"<p>Routing-tool directions route customPreferences. Possibility to define additional preferences for the different speed profiles (additionally to the BKG service)  (requires own modified backend)</p> Name Verpflichtend Typ Default Beschreibung Expert speedProfile no String[] Which preferences should be available for the speedProfile. false <p>Beispiel <pre><code>#!json\n{\n    \"customPreferences\": {\n       \"CYCLING\": [\"RECOMMENDED\", \"SHORTEST\", \"GREEN\"],\n       \"CAR\": [\"RECOMMENDED\", \"SHORTEST\", \"GREEN\"]\n    }\n}\n</code></pre></p>"},{"location":"User/Portal-Config/config.json/#portalconfigmenutoolroutingdirectionssettingsstyleroute","title":"Portalconfig.menu.tool.routing.directionsSettings.styleRoute","text":"<p>Routing-tool directions route style options.</p> Name Required Type Default Description Expert fillColor no Number[] [255, 44, 0] Which color should be used to fill. false width no Number 6 How thick should the line be displayed. false highlightColor no Number[] [255, 255, 255] Which color should be used to highlight the route. false highlightWidth no Number 9 How thick should the highlighting line be displayed. false partHighlightColor no Number[] [255, 255, 255] Which color should be used when highlighting part of the route. false highlightWidth no Number 9 How thick should the highlighting part of the route be displayed. false <p>Example <pre><code>#!json\n{\n    \"styleRoute\": {\n        \"fillColor\": [255, 44, 0],\n        \"width\": 6,\n        \"highlightColor\": [255, 255, 255],\n        \"highlightWidth\": 9,\n        \"partHighlightColor\": [255, 255, 255],\n        \"partHighlightWidth\": 3\n    }\n}\n</code></pre></p>"},{"location":"User/Portal-Config/config.json/#portalconfigmenutoolroutingdirectionssettingsstylewaypoint","title":"Portalconfig.menu.tool.routing.directionsSettings.styleWaypoint","text":"<p>Routing-tool directions waypoint style options.</p> Name Required Type Default Description Expert lineColor no Number[] [255, 127, 0] Which color should be used for the border. false lineWidth no Number 4 How thick should the border be. false fillColor no Number[] [255, 127, 0] Which color should be used to fill. false textFillColor no String \"#000\" Which color should be used for the text. false textLineColor no String \"#fff\" Which color should be used for the text background. false textLineWidth no Number 3 How big should the text be displayed. false opacity no Number 0.3 How transparent should the fill color be displayed. false radius no Number 8 How big should the waypoint be displayed. false <p>Example <pre><code>#!json\n{\n    \"styleWaypoint\": {\n        \"lineColor\": [255, 127, 0],\n        \"lineWidth\": 4,\n        \"fillColor\": [255, 127, 0],\n        \"textFillColor\": \"#000\",\n        \"textLineColor\": \"#fff\",\n        \"textLineWidth\": 3,\n        \"opacity\": 0.3,\n        \"radius\": 8\n    }\n}\n</code></pre></p>"},{"location":"User/Portal-Config/config.json/#portalconfigmenutoolroutingdirectionssettingsstyleavoidareas","title":"Portalconfig.menu.tool.routing.directionsSettings.styleAvoidAreas","text":"<p>Routing-tool directions avoid areas style options.</p> Name Required Type Default Description Expert lineColor no Number[] [0, 127, 255] Which color should be used for the border. false lineWidth no Number 2 How thick should the border be. false fillColor no Number[] [0, 127, 255] Which color should be used to fill. false opacity no Number 0.3 How transparent should the fill color be displayed. false pointRadius no Number 8 How big should the corner points be displayed. false pointLineWidth no Number 4 How big should the border of the corner points be displayed. false <p>Example <pre><code>#!json\n{\n    \"styleAvoidAreas\": {\n        \"lineColor\": [0, 127, 255],\n        \"lineWidth\": 2,\n        \"fillColor\": [0, 127, 255],\n        \"opacity\": 0.3,\n        \"pointRadius\": 8,\n        \"pointLineWidth\": 4\n    }\n}\n</code></pre></p>"},{"location":"User/Portal-Config/config.json/#portalconfigmenutoolroutingdirectionssettingsbatchprocessing","title":"Portalconfig.menu.tool.routing.directionsSettings.batchProcessing","text":"<p>Routing-tool directions batch processing options.</p> Name Required Type Default Description Expert enabled no Boolean false If the batch processing should be enabled for the user. false active no Boolean false If the batch processing is active by default. false limit no Number 1000 The maximum amount of rows allowed in the csv file. false maximumConcurrentRequests no Number 3 The maximum concurrent requests allowed to be made by the batch processing task handler. false <p>Example <pre><code>#!json\n{\n    \"batchProcessing\": {\n        \"enabled\": false,\n        \"active\": false,\n        \"limit\": 1000,\n        \"maximumConcurrentRequests\": 3\n    }\n}\n</code></pre></p>"},{"location":"User/Portal-Config/config.json/#portalconfigmenutoolroutingisochronessettings","title":"Portalconfig.menu.tool.routing.isochronesSettings","text":"<p>Routing-tool isochrones options.</p> Name Required Type Default Description Expert type yes String Which type of service should be used for the request. (\"ORS\") false serviceId yes String Which service should be used for the request. false speedProfile no String \"CAR\" Which speed profile should be selected by default. false isochronesMethodOption no String \"TIME\" Which method should be selected by default. false distanceValue no Number 30 Which distance value in km should be selected by default. false minDistance no Number 1 Which minimal distance value in km should be used. false maxDistance no Number 400 Which maximum distance value in km should be used. false timeValue no Number 30 Which time value in min should be selected by default. false minTime no Number 1 Which minimal time value in min should be used. false maxTime no Number 180 Which maximum time in min should be used. false intervalValue no Number 15 Which interval value in km/min should be used by default. false minInterval no Number 1 Which minimal interval value in km/min should be used. false maxInterval no Number 30 Which maximum interval value in km/min should be used. false styleCenter no styleCenter Stylecenteroptions false styleIsochrones no styleIsochrones Styleisochronesoptions false batchProcessing no batchProcessing Batchprocessingoptions false <p>Example <pre><code>#!json\n{\n    \"isochronesSettings\": {\n        \"type\": \"ORS\",\n        \"serviceId\": \"bkg_ors\",\n        \"speedProfile\": \"CAR\",\n        \"isochronesMethodOption\": \"TIME\",\n        \"distanceValue\": 30,\n        \"minDistance\": 1,\n        \"maxDistance\": 400,\n        \"timeValue\": 30,\n        \"minTime\": 1,\n        \"maxTime\": 180,\n        \"intervalValue\": 15,\n        \"minInterval\": 3,\n        \"maxInterval\": 30,\n        \"styleCenter\": {\n            \"lineColor\": [255, 127, 0],\n            \"lineWidth\": 4,\n            \"fillColor\": [255, 127, 0],\n            \"opacity\": 0.3,\n            \"radius\": 8\n        },\n        \"styleIsochrones\": {\n            \"lineWidth\": 2,\n            \"opacity\": 0.65,\n            \"startColor\": [66, 245, 78],\n            \"endColor\": [245, 66, 66]\n        },\n        \"batchProcessing\": {\n            \"enabled\": false,\n            \"active\": false,\n            \"limit\": 1000,\n            \"maximumConcurrentRequests\": 3\n        }\n    }\n}\n</code></pre></p>"},{"location":"User/Portal-Config/config.json/#portalconfigmenutoolroutingisochronessettingsstylecenter","title":"Portalconfig.menu.tool.routing.isochronesSettings.styleCenter","text":"<p>Routing-tool isochrones centers style options.</p> Name Required Type Default Description Expert lineColor no Number[] [255, 127, 0] Which color should be used for the border. false lineWidth no Number 4 How thick should the border be displayed. false fillColor no Number[] [255, 127, 0] Which color should be used to fill. false opacity no Number 0.3 How transparent should the fill color be displayed. false radius no Number 8 How big should the waypoint be displayed. false <p>Example <pre><code>#!json\n{\n    \"styleCenter\": {\n        \"lineColor\": [255, 127, 0],\n        \"lineWidth\": 4,\n        \"fillColor\": [255, 127, 0],\n        \"opacity\": 0.3,\n        \"radius\": 8\n    }\n}\n</code></pre></p>"},{"location":"User/Portal-Config/config.json/#portalconfigmenutoolroutingisochronessettingsstyleisochrones","title":"Portalconfig.menu.tool.routing.isochronesSettings.styleIsochrones","text":"<p>Routing-tool isochrones style options.</p> Name Required Type Default Description Expert lineWidth no Number 2 How thick should the lines be displayed. false opacity no Number 0.65 How transparent the fill color is displayed. false startColor no Number[] [66, 245, 78] The starting color for the fill color interpolation calculation. false endColor no Number[] [245, 66, 66] The end color for the fill color interpolation calculation. false <p>Example <pre><code>#!json\n{\n    \"styleIsochrones\": {\n        \"lineWidth\": 2,\n        \"opacity\": 0.65,\n        \"startColor\": [66, 245, 78],\n        \"endColor\": [245, 66, 66]\n    }\n}\n</code></pre></p>"},{"location":"User/Portal-Config/config.json/#portalconfigmenutoolroutingisochronessettingsbatchprocessing","title":"Portalconfig.menu.tool.routing.isochronesSettings.batchProcessing","text":"<p>Routing-tool isochrones batch processing options.</p> Name Required Type Default Description Expert enabled no Boolean false If the batch processing should be enabled for the user. false active no Boolean false If the batch processing is active by default. false limit no Number 1000 The maximum amount of rows allowed in the csv file. false maximumConcurrentRequests no Number 3 The maximum concurrent requests allowed to be made by the batch processing task handler. false <p>Example <pre><code>#!json\n{\n    \"batchProcessing\": {\n        \"enabled\": false,\n        \"active\": false,\n        \"limit\": 1000,\n        \"maximumConcurrentRequests\": 3\n    }\n}\n</code></pre></p>"},{"location":"User/Portal-Config/config.json/#portalconfigmenustaticlinks","title":"Portalconfig.menu.staticlinks","text":"<p>The staticlinks array contains objects either describing links to other web resources or triggers of defined events.</p> Name Required Type Default Description Expert staticlinks no staticlink[] Static link array. false <p>onClickTrigger example</p> <pre><code>{\n    \"staticlinks\": [\n        {\n            \"name\": \"Alert\",\n            \"icon\": \"bi-globe\",\n            \"onClickTrigger\": [\n                {\n                    \"channel\": \"Alert\",\n                    \"event\": \"alert\",\n                    \"data\": \"Hello World!\"\n                }\n            ]\n        }\n    ]\n}\n</code></pre>"},{"location":"User/Portal-Config/config.json/#portalconfigmenustaticlinksstaticlink","title":"Portalconfig.menu.staticlinks.staticlink","text":"<p>Ein Staticlink-Objekt enth\u00e4lt folgende Attribute.</p> Name Required Type Default Description Expert name yes String Menu name of the link. false icon no String \"bi-globe\" CSS icon class of link, shown before its name. false url no String URL to open in a new tab. false onClickTrigger no onClickTrigger[] Array of onClickTrigger events. false <p>URL example</p> <pre><code>{\n    \"name\": \"Hamburg\",\n    \"icon\": \"bi-globe\",\n    \"url\": \"http://www.hamburg.de\"\n}\n</code></pre> <p>onClickTrigger example <pre><code>{\n    \"name\": \"Alert\",\n    \"icon\": \"bi-globe\",\n    \"onClickTrigger\": [\n        {\n            \"channel\": \"Alert\",\n            \"event\": \"alert\",\n            \"data\": \"Hello World!\"\n        }\n    ]\n}\n</code></pre></p>"},{"location":"User/Portal-Config/config.json/#portalconfigmenustaticlinksstaticlinkonclicktrigger","title":"Portalconfig.menu.staticlinks.staticlink.onClickTrigger","text":"<p>Defines an event trigger, possibly containing a payload.</p> Name Required Type Default Description Expert channel yes String Radio channel name. false event yes String Radio channel's event name of the event to be triggered. false data no String/Boolean/Number Payload to be sent along. false <p>Example</p> <pre><code>{\n    \"channel\": \"Alert\",\n    \"event\": \"alert\",\n    \"data\": \"Hello World!\"\n}\n</code></pre>"},{"location":"User/Portal-Config/config.json/#themenconfig","title":"Themenconfig","text":"<p>The <code>Themenconfig</code> entry defines the contents and their order in the topic selection. Depending on your <code>treeType</code> configuration, the Fachdaten section may also contain folder structures.</p> Name Required Type Default Description Expert Hintergrundkarten yes Hintergrundkarten Background map definition. false Fachdaten no Fachdaten Technical data definition. false Fachdaten_3D no Fachdaten_3D Technical data definition used in 3D mode. false Fachdaten_Zeit no Fachdaten_Zeit Definition of WMS-T layers in their own folder. false <p>Example</p> <pre><code>{\n    \"Themenconfig\": {\n        \"Hintergrundkarten\": {},\n        \"Fachdaten\": {},\n        \"Fachdaten_3D\": {},\n        \"Fachdaten_Zeit\": {}\n    }\n}\n</code></pre>"},{"location":"User/Portal-Config/config.json/#themenconfighintergrundkarten","title":"Themenconfig.Hintergrundkarten","text":"<p>Background map definition.</p> Name Required Type Default Description Expert name no String \"Hintergrundkarten\" For <code>treeType</code> <code>default</code> and <code>custom</code>, name of the background map button area. false Layer yes Layer/GroupLayer[] Layer definition. false Ordner no Ordner[] Folder definition. false <p>Example</p> <pre><code>{\n    \"Hintergrundkarten\": {\n        \"name\": \"My background maps\",\n        \"Layer\": [\n            {\n                \"id\": \"123\"\n            }\n        ]\n    }\n}\n</code></pre>"},{"location":"User/Portal-Config/config.json/#themenconfigfachdaten","title":"Themenconfig.Fachdaten","text":"<p>Technical data definition.</p> Name Required Type Default Description Expert name no String \"Fachdaten\" For <code>treeType</code> <code>default</code> and <code>custom</code>, name of the technical data button area. false Layer yes Layer/GroupLayer[] Layer definition. false Ordner no Ordner[] Folder definition. false <p>Example</p> <pre><code>{\n    \"Fachdaten\": {\n        \"name\": \"My technical data\",\n        \"Layer\": [\n            {\n                \"id\": \"123\"\n            }\n        ]\n    }\n}\n</code></pre>"},{"location":"User/Portal-Config/config.json/#themenconfigfachdaten_3d","title":"Themenconfig.Fachdaten_3D","text":"<p>3D data definition for the 3D mode in <code>treeType</code> <code>custom</code> and <code>default</code>. Only shown when 3D mode is active.</p> Name Required Type Default Description Expert name no String \"3D Daten\" Name of the 3D data button area. false Layer yes Layer[] 3D layer definition. false <p>Example</p> <pre><code>{\n    \"Fachdaten_3D\": {\n        \"name\": \"My technical 3D data\",\n        \"Layer\": [\n            {\n            \"id\": \"12883\"\n            }\n        ]\n    }\n}\n</code></pre>"},{"location":"User/Portal-Config/config.json/#themenconfigfachdaten_zeit","title":"Themenconfig.Fachdaten_Zeit","text":"<p>Definition for WMS-T layers <code>treeType</code> <code>custom</code> and <code>default</code>. The layers can also be defined under Fachdaten.</p> Name Required Type Default Description Expert name no String \"common:tree.subjectDataTime\" Name of the WMS-T layer button area. false Layer yes Layer[] WMS-T layer definition. false <p>Example</p> <pre><code>{\n    \"Fachdaten_Zeit\": {\n        \"name\": \"My Time Series\",\n        \"Layer\": [\n            {\n              \"id\": \"my_wms_time\"\n            }\n        ]\n    }\n}\n</code></pre>"},{"location":"User/Portal-Config/config.json/#themenconfigordner","title":"Themenconfig.Ordner","text":"<p>Folder definition. Folders may also be nested. Folders can be configured below the \"Fachdaten\" and \"Hintergrundkarten\". With treeType 'default' the 3D data can also be configured as a folder under 'Fachdaten_3D'.</p> Name Required Type Default Description Expert Titel yes String Folder title. false Layer yes Layer/GroupLayer[] Layer definition. false Ordner no Ordner[] Folder definition. false isFolderSelectable no Boolean false Defines whether all layers of a folder can be de-/activated at once by using a checkbox. Only works if treetype=\"custom\". If no flag is set, the global flag in  <code>config.js</code> parameter <code>tree.isFolderSelectable</code> is used. false invertLayerOrder no Boolean false Defines wheather the order of layers added to the map should be invert when clicking the folder. false <p>Example Fachdaten-folder with one layer</p> <p><pre><code>{\n    \"Fachdaten\": {\n        \"Ordner\": [\n            {\n                \"Titel\": \"My folder\",\n                \"Layer\": [\n                    {\n                        \"id\": \"123\"\n                    }\n                ]\n            }\n        ]\n    }\n}\n</code></pre> Example Hintergrundkarten-folder with 2 layers</p> <pre><code>{\n    \"Hintergrundkarten\":{\n        \"Ordner\": [{\n            \"Titel\": \"Maps\",\n            \"isFolderSelectable\": false,\n            \"Layer\": [\n                {\n                    \"name\": \"Aerial view\",\n                    \"id\": \"123\",\n                    \"visibility\": true\n                },\n                {\n                    \"name\": \"City map\",\n                    \"id\": \"456\"\n                }\n            ]\n        }]\n    }\n}\n</code></pre> <p>Example Hintergrundkarten-folder, next to it are configured layers</p> <pre><code>{\n    \"Hintergrundkarten\":{\n        \"Ordner\": [{\n            \"Titel\": \"Maps\",\n            \"isFolderSelectable\": false,\n            \"Layer\": [\n                {\n                    \"name\": \"Aerial view\",\n                    \"id\": \"123\",\n                    \"visibility\": true\n                },\n                {\n                    \"name\": \"City map\",\n                    \"id\": \"456\"\n                }\n            ]\n        }],\n        \"Layer\": [{\n            \"name\": \"Old map\",\n            \"id\": \"789\"\n        },\n            ...\n        ]\n    }\n}\n</code></pre> <p>Example Fachdaten-folder with a sub-folder that contains a layer</p> <pre><code>{\n    \"Fachdaten\": {\n        \"Ordner\": [\n            {\n                \"Titel\": \"My first folder\",\n                \"isFolderSelectable\": true,\n                \"Ordner\": [\n                    {\n                        \"Titel\": \"My second folder\",\n                        \"Layer\": [\n                            {\n                                \"id\": \"123\"\n                            }\n                        ]\n                    }\n                ]\n            }\n        ]\n    }\n}\n</code></pre> <p>Example Fachdaten-folder with a sub-folder holding a layer, where the first folder also has a layer defined</p> <pre><code>{\n    \"Fachdaten\": {\n        \"Ordner\": [\n            {\n                \"Titel\": \"My first folder\",\n                \"Ordner\": [\n                    {\n                        \"Titel\": \"My second folder\",\n                        \"Layer\": [\n                            {\n                                \"id\": \"123\"\n                            }\n                        ]\n                    }\n                ],\n                \"Layer\": [\n                    {\n                        \"id\": \"456\"\n                    }\n                ]\n            }\n        ]\n    }\n}\n</code></pre> <p>Example Fachdaten-folder with an inverted order of layers</p> <p>In this example layer 123 will be added to the map first. This leads to 456 being above 123.</p> <pre><code>{\n    \"Fachdaten\": {\n        \"Ordner\": [\n            {\n                \"Titel\": \"My folder\",\n                \"invertLayerOrder\": true,\n                \"Layer\": [\n                    {\n                        \"id\": \"123\"\n                    },\n                    {\n                        \"id\": \"456\"\n                    }\n                ]\n            }\n        ]\n    }\n}\n</code></pre> <p>Example 3D data folder with subfolders, treeType 'default'.</p> <pre><code> \"Fachdaten_3D\": {\n      \"Ordner\": [\n        {\n          \"Titel\": \"3D Geb\u00e4udedaten\",\n          \"Layer\": [\n            {\n              \"id\": \"12884\",\n              \"name\": \"Geb\u00e4ude LoD2\",\n              \"visibility\": true\n            }\n          ]\n        },\n        {\n          \"Titel\": \"3D Basisdaten\",\n          \"Layer\": [\n            {\n              \"id\": \"12883\",\n              \"name\": \"Gel\u00e4nde\",\n              \"visibility\": true\n            }\n          ]\n        }\n      ]\n    }\n</code></pre>"},{"location":"User/Portal-Config/config.json/#themenconfiggrouplayer","title":"Themenconfig.GroupLayer","text":"<p>Group layer definition to de-/activate multiple layers in one click.</p> Name Required Type Default Description Expert id yes String Internal layer id to reference this layer. The actual services are referenced in the <code>children</code> field. Please mind that this id must not collide with any id in the services.json. false children yes Layer[] In this array the multiple grouped services are defined. false name no String Layer name. false transparency no Integer 0 Layer transparency. false visibility no Boolean false Layer visibility. false supported no String[] [\"2D\", \"3D\"] List of modes the layer may be used in. false layerAttribution no String services.json value. HTML string shown when the layer is active. false legendURL no String services.json value. URL used to request the legend graphic. Deprecated, please use \"legend\" instead. false legend no Boolean/String services.json value. URL used to request the legend graphic. Use <code>true</code> to dynamically generate the legend from a WMS request or the styling. If of type string, it's expected to be a path to an image or a PDF file. false maxScale no String services.json value. Maximum scale in which the layer is still shown. false minScale no String services.json value. Minimum scale in which the layer is still shown. false autoRefresh no Integer Automatically reload layer every <code>autoRefresh</code> ms. Minimum value is 500. false isNeverVisibleInTree no Boolean false If <code>true</code>, the layer is never visible in the topic selection tree. false urlIsVisible no Boolean true Whether the service URL should be shown in the layer information window. false <p>Example</p> <pre><code>{\n    \"id\": \"myId\",\n    \"name\": \"myGroupLayer\",\n    \"children\": [\n        {\n            \"id\": \"123\",\n            \"name\": \"myLayer_1\"\n        },\n        {\n            \"id\": \"456\",\n            \"name\": \"myLayer_2\"\n        }\n    ]\n}\n</code></pre>"},{"location":"User/Portal-Config/config.json/#themenconfiglayer","title":"Themenconfig.Layer","text":"<p>Layer definition. Multiple ways to define layers exist. Most attributes are defined in the services.json, but may be overwritten in the layer definition.</p> Name Required Type Default Description Expert id yes String/String[] Layer ID(s). Resolved using the services.json file. Please mind that the given IDs MUST refer to the same URL, that is, use the same service. When configuring an array of IDs, setting <code>minScale</code> and <code>maxScale</code> of each layer is required to be in the <code>services.json</code>. false name no String Layer name. false entities yes Entity3D[] Models to be shown. false transparency no Integer 0 Layer transparency. false visibility no Boolean false Layer visibility. false supported no String[] [\"2D\", \"3D\"] List of modes the layer may be used in. false layerAttribution no String services.json value. HTML string shown when the layer is active. false legendURL no String services.json value. URL used to request the legend graphic. Deprecated, please use \"legend\" instead. false legend no Boolean/String services.json value. URL used to request the legend graphic. Use <code>true</code> to dynamically generate the legend from a WMS request or the styling. If of type string, it's expected to be a path to an image or a PDF file. false maxScale no String services.json value. Maximum scale in which the layer is still shown. false minScale no String services.json value. Minimum scale in which the layer is still shown. false autoRefresh no Integer Automatically reload layer every <code>autoRefresh</code> ms. Minimum value is 500. false isNeverVisibleInTree no Boolean false If <code>true</code>, the layer is never visible in the topic selection tree. false urlIsVisible no Boolean true Whether the service URL should be shown in the layer information window. false filterRefId no Integer Referencing to a configured filter. It is the order (index) of Layer in filter. Starting with 0. false renderer no String \"default\" Which render pipeline to use (\"default\" or \"webgl\") (only for vector data of type \"GeoJSON\", \"WFS\", \"OAF\"). \"webgl\" is currently classified as experimental and can lead to errors in some modules false isPointLayer no Boolean false Whether the (vector) layer only consists of point features (only relevant for WebGL rendering) false <p>Example with one ID</p> <pre><code>{\n    \"id\": \"123\"\n}\n</code></pre> <p>Example with an array of IDs</p> <pre><code>{\n    \"id\": [\"123\", \"456\", \"789\"],\n    \"name\": \"my test layer\"\n}\n</code></pre>"},{"location":"User/Portal-Config/config.json/#themenconfiglayerwms","title":"Themenconfig.Layer.WMS","text":"<p>List of typical WMS attributes.</p> Name Required Type Default Description Expert name no String/String[] Layer name. If the attribute <code>styles</code> is configured, <code>name</code> must be of type String[]. false extent no Extent [454591, 5809000, 700000, 6075769] Only relevant for 3D mode. Extent of the layer. If not specified, it will be used Extent of the MapView. false featureCount no Integer 1 Amount of feature to be returned at maximum on a GetFeatureInfo request. false gfiAsNewWindow no gfiAsNewWindow null Relevant if <code>\"text/html\"</code> is used. true styles no String[] Will be sent to the server if defined. The server will interpret and apply these styles and return the corresponding styled tiles. true <p>Example</p> <pre><code>{\n    \"id\": \"123456\",\n    \"name\": \"MyWMSLayerName\",\n    \"transparency\": 0,\n    \"visibility\": true,\n    \"supported\": [\"2D\"],\n    \"extent\": [454591, 5809000, 700000, 6075769],\n    \"layerAttribution\": \"MyBoldAttribution for layer 123456\",\n    \"legend\": \"https://myServer/myService/legend.pdf\",\n    \"maxScale\": \"100000\",\n    \"minScale\": \"1000\",\n    \"autoRefresh\": \"10000\",\n    \"isNeverVisibleInTree\": false,\n    \"featureCount\": 2,\n    \"gfiAsNewWindow\": {\n        \"name\": \"_blank\",\n        \"specs\": \"width=800,height=700\"\n    },\n    \"styles\": [\"firstStyle\", \"secondStyle\"]\n}\n</code></pre>"},{"location":"User/Portal-Config/config.json/#themenconfiglayerwmsgfiasnewwindow","title":"Themenconfig.Layer.WMS.gfiAsNewWindow","text":"<p>The parameter <code>gfiAsNewWindow</code> is only in use when <code>infoFormat</code> is set to <code>\"text/html\"</code>.</p> <p>This feature allows opening WMS HTML responses in their own window or tab rather than in an iFrame or GFI. To open HTML contents in a standard browser window, set the empty object <code>{}</code> instead of <code>null</code>.</p> <p>You may change the opening behaviour by setting the parameter <code>name</code>:</p> <p>Note on SSL encryption</p> <p>If <code>gfiAsNewWindow</code> is not defined, it's applied with default values when the called URL is not SSL-encrypted (HTTPS).</p> <p>Due to the No Mixed Content policy of all modern browsers, unencrypted content may not be displayed in an iFrame. Please mind that automatic forwarding (e.g. in Javascript) in iFrames to an insecure HTTP connection (without SSL) is not automatically recognized and may be prevented by the browser.</p> <p>For such cases, define <code>gfiAsNewWindow</code> manually as described above.</p> Name Required Type Default Description Expert name yes enum[\"blank\",\"self\"] \"_blank\" <code>\"_blank\"</code> opens a new browser tab or window (depending on browser) with the specified HTML content. The window appearance can be changed with the <code>specs</code> parameter. <code>\"_self\"</code> opens the specified HTML content within the current browser window. true specs no String You may add an arbitrary amount of comma-separated properties like <code>{\"specs\": \"width=800,height=700\"}</code>. For more options, please read the documentation regarding <code>javascript</code> and <code>window.open</code>: W3 Schools: Met win open (German), JavaScript Info: Popup windows (English), MDN: Window open (English) true <p>Example</p> <pre><code>#!json\n{\n    \"id\": \"123456\",\n    // (...)\n    \"gfiAsNewWindow\": {\n        \"name\": \"_blank\",\n        \"specs\": \"toolbar=yes,scrollbars=yes,resizable=yes,top=0,left=500,width=800,height=700\"\n    },\n    // (...)\n}\n</code></pre>"},{"location":"User/Portal-Config/config.json/#themenconfiglayerwfs","title":"Themenconfig.Layer.WFS","text":"<p>List of typical WFS query attributes for highlightFeaturesByAttribute. For the invocation parameters see urlParameter. <pre><code>Example invocations:\n?api/highlightFeaturesByAttribute=1&amp;wfsId=1&amp;attributeName=DK5&amp;attributeValue=valueToSearchFor&amp;attributeQuery=isequal\n?api/highlightFeaturesByAttribute=123&amp;wfsId=1711&amp;attributeName=name&amp;attributeValue=Helios%20ENDO-Klinik%20Hamburg&amp;attributeQuery=IsLike\n?api/highlightFeaturesByAttribute=123&amp;wfsId=2003&amp;attributeName=gebietsname&amp;attributeValue=NSG%20Zollenspieker&amp;attributeQuery=isequal\n?api/highlightFeaturesByAttribute=123&amp;wfsId=2928&amp;attributeName=biotop_nr&amp;attributeValue=279&amp;attributeQuery=isLike\n</code></pre></p> Name Required Type Default Description Expert styleId yes String Id of the style. Id defined in the style.json. false featurePrefix yes String Search prefix for the WFS query - e.g. app:. true wildCard yes String The wildcard character for the WFS query -e.g. % true singleChar yes String The single character for the WFS query - e.g. # true escapeChar yes String The escape character for the WFS query - e.g. | true valueDelimiter no String The value delimiter for isIn queries attributeValue, defaulting to semicolon true <p>Example</p> <pre><code>#!json\n{\n    \"id\": \"1\",\n    \"styleId\": \"1\",\n    \"visibility\": false,\n    \"name\": \"Tierarten invasiv\",\n    \"featurePrefix\": \"app:\",\n    \"wildCard\": \"%\",\n    \"singleChar\": \"#\",\n    \"escapeChar\": \"!\"\n}\n\n#### Themenconfig.Layer.Tileset\n\n[inherits]: # (Themenconfig.Layer)\n\nList of attributes typically used for tilesets.\n\n|Name|Required|Type|Default|Description|\n|----|--------|----|-------|-----------|\n|hiddenFeatures|no|String[]|[]|List of IDs to be hidden in the plane.|\n|**[cesium3DTilesetOptions](https://cesiumjs.org/Cesium/Build/Documentation/Cesium3DTileset.html)**|no|**[cesium3DTilesetOption](#markdown-header-themenconfiglayertilesetcesium3dtilesetoption)**||Cesium 3D tileset options directly forwarded to the *Cesium tileset object*. E.g. `maximumScreenSpaceError` is relevant to the visibility.|\n\n**Example**\n\n```json\n{\n    \"id\": \"123456\",\n    \"name\": \"TilesetLayerName\",\n    \"visibility\": true,\n    \"hiddenFeatures\": [\"id1\", \"id2\"],\n    \"cesium3DTilesetOptions\" : {\n        \"maximumScreenSpaceError\" : 6\n    }\n}\n</code></pre>"},{"location":"User/Portal-Config/config.json/#themenconfiglayertilesetcesium3dtilesetoption","title":"Themenconfig.Layer.Tileset.cesium3DTilesetOption","text":"<p>Todo</p> Name Required Type Default Description maximumScreenSpaceError no Number Todo <p>Example</p> <pre><code>{\n    \"cesium3DTilesetOptions\": {\n        \"maximumScreenSpaceError\": 6\n    }\n}\n</code></pre>"},{"location":"User/Portal-Config/config.json/#themenconfiglayerterrain","title":"Themenconfig.Layer.Terrain","text":"<p>List of attributes typically used for Terrain.</p> Name Required Type Default Description cesiumTerrainProviderOptions no cesiumTerrainProviderOption[] Cesium TerrainProvider options directly forwarded to the Cesium TerrainProvider E.g. <code>requestVertexNormals</code> is used for object surface shading. <p>Example</p> <pre><code>{\n    \"id\": \"123456\",\n    \"name\": \"TerrainLayerName\",\n    \"visibility\": true,\n    \"cesiumTerrainProviderOptions\": {\n        \"requestVertexNormals\" : true\n    }\n}\n</code></pre>"},{"location":"User/Portal-Config/config.json/#themenconfiglayerterraincesiumterrainprovideroption","title":"Themenconfig.Layer.Terrain.cesiumTerrainProviderOption","text":"<p>Todo</p> Name Required Type Default Description requestVertexNormals no Boolean Todo <p>Example</p> <pre><code>{\n    \"cesiumTerrainProviderOptions\": {\n        \"requestVertexNormals\" : true\n    }\n}\n</code></pre>"},{"location":"User/Portal-Config/config.json/#themenconfiglayerentity3d","title":"Themenconfig.Layer.Entity3D","text":"<p>List of attributes typically used for Entities 3D.</p> Name Required Type Default Description Expert url yes String \"\" Model URL, e.g. <code>\"https://daten-hamburg.de/gdi3d/datasource-data/Simple_Building.glb\"</code>. false attributes no Attribute Model attributes, e.g. <code>{\"name\": \"test\"}</code>. false latitude yes Number Model origin latitude in degrees. Example: <code>53.541831</code> false longitude yes Number Model origin longitude in degrees. Example: <code>9.917963</code> false height no Number 0 Model origin height. Example: <code>10</code> false heading no Number 0 Model rotation in degrees. Example: <code>0</code> false pitch no Number 0 Model pitch in degrees. Example: <code>0</code> false roll no Number 0 Model roll in degrees. Example: <code>0</code> false scale no Number 1 Model scale. Example: <code>1</code> false allowPicking no Boolean true Whether the model may be clicked for GFI. Example: <code>true</code> false show no Boolean true Whether the model should be shown. Should be <code>true</code>. Example: <code>true</code> false <p>Example</p> <pre><code>{\n      \"id\": \"123456\",\n      \"name\": \"EntitiesLayerName\",\n      \"visibility\": true,\n      \"typ\": \"Entities3D\",\n      \"entities\": [\n         {\n            \"url\": \"https://daten-hamburg.de/gdi3d/datasource-data/Simple_Building.glb\",\n           \"attributes\": {\n             \"name\": \"simple building in Planten und Blomen\"\n           },\n           \"latitude\": 53.5631,\n           \"longitude\": 9.9800,\n           \"height\": 12,\n           \"heading\": 0,\n           \"pitch\": 0,\n           \"roll\": 0,\n           \"scale\": 5,\n           \"allowPicking\": true,\n           \"show\": true\n         }\n       ],\n       \"gfiAttributes\" : {\n         \"name\": \"Name\"\n      }\n  },\n</code></pre>"},{"location":"User/Portal-Config/config.json/#themenconfiglayerentity3dattribute","title":"Themenconfig.Layer.Entity3D.Attribute","text":"Name Required Type Default Description Expert name no String \"\" Todo false <p>Example</p> <pre><code>{\n   \"name\": \"Fernsehturm.kmz\"\n}\n</code></pre>"},{"location":"User/Portal-Config/config.json/#themenconfiglayerstaticimage","title":"Themenconfig.Layer.StaticImage","text":"<p>This type allows loading images as georeferenced map layers. Supported formats are <code>jpeg</code> and <code>png</code>.</p> Name Required Type Default Description Expert id yes String ID required to be unique. false typ yes String \"StaticImage\" Sets the layer type to <code>StaticImage</code>, meaning static images will be displayed as layers. false url yes String \"https://meinedomain.de/bild.png\" Link to the image that is to be shown as layer. false name yes String \"Static Image Name\" Topic selection tree layer name. false extent yes Extent [560.00, 5950.00, 560.00, 5945.00] Georeferences the image. The coordinates are expected to be in EPSG:25832, and refer to the top-left and bottom-right image corner. false <p>Example</p> <pre><code>{\n    \"id\": \"12345\",\n    \"typ\": \"StaticImage\",\n    \"url\": \"https://www.w3.org/Graphics/PNG/alphatest.png\",\n    \"name\": \"Test PNG file\",\n    \"visibility\": true,\n    \"extent\": [560296.72, 5932154.22, 562496.72, 5933454.22]\n}\n</code></pre>"},{"location":"User/Portal-Config/config.json/#themenconfiglayervector","title":"Themenconfig.Layer.Vector","text":"<p>List of attributes typically used in vector layers. Vector layers are WFS, GeoJSON (EPSG:4326 only), SensorLayer, and Vector Tile Layer.</p> Name Required Type Default Description Expert clusterDistance no Integer All features within this pixel radius are clustered to a single feature. \u26a0\ufe0fclusterDistance on WFS layers with polygon or line geometry results in the features not being displayed. false extendedFilter no Boolean Defines whether the tool <code>extendedFilter</code> may use this layer. false filterOptions no filterOption[] Filter options required by tool <code>wfsFeatureFilter</code>. false mouseHoverField no String/String[] Attribute name or array thereorf to be shown on mouse hovering a feature. false nearbyTitle no String/String[] Attribute name or array of features to be shown on nearby search results. false additionalInfoField no String \"name\" Feature's attribute name to use in the search bar's hit list. Should this attribute not exist in a hit feature, the layer name is used instead. false styleId no String Style ID. Resolved using the style.json file. false styleGeometryType no String/String[] WFS style geometry type to reduce visible features to the ones sharing the given geometry types. More information. false hitTolerance no String Click tolerance for hits in pixels when firing a GetFeatureInfo request. false vtStyles no vtStyle[] Choosable external style definitions. Only available in a Vector Tile Layer. false useMpFonts no Boolean true Only available in a Vector Tile Layer. Switch to overwrite Fontstacks of external style definitions, to assure needed fonts are available. If set to false, used fonts need to be added separately e.g. via '' in index.html false loadingStrategy no String \"bbox\" Strategy function for loading features. Possible values are \"bbox\" or \"all\". More information. false <p>Example</p> <pre><code>#!json\n{\n    \"id\": \"123456\",\n    \"name\": \"MyVectorLayerName\",\n    \"transparency\": 0,\n    \"visibility\": true,\n    \"supported\": [\"2D\"],\n    \"extent\": [454591, 5809000, 700000, 6075769],\n    \"layerAttribution\": \"MyBoldAttribution for layer 123456\",\n    \"legend\": \"https://myServer/myService/legend.pdf\",\n    \"maxScale\": \"100000\",\n    \"minScale\": \"1000\",\n    \"autoRefresh\": \"10000\",\n    \"isNeverVisibleInTree\": false,\n    \"clusterDistance\": 60,\n    \"extendedFilter\": true,\n    \"loadingStrategy\": \"all\",\n    \"filterOptions\": [\n        {\n            \"fieldName\": \"myFirstAttributeToFilter\",\n            \"filterName\": \"Filter_1\",\n            \"filterString\": [\"*\", \"value1\", \"value2\"],\n            \"filterType\": \"combo\"\n        },\n        {\n            \"fieldName\": \"mySecondAttributeToFilter\",\n            \"filterName\": \"Filter_2\",\n            \"filterString\": [\"*\", \"value3\", \"value4\"],\n            \"filterType\": \"combo\"\n        }\n    ],\n    \"mouseHoverField\": \"name\",\n    \"nearbyTitle\": \"name\",\n    \"searchField\": \"name\",\n    \"styleId\": \"123456\",\n    \"hitTolerance\": 50\n},\n{\n    \"id\" : \"11111\",\n    \"name\" : \"local GeoJSON\",\n    \"url\" : \"portal/master/test.json\",\n    \"typ\" : \"GeoJSON\",\n    \"gfiAttributes\" : \"showAll\",\n    \"layerAttribution\" : \"nicht vorhanden\",\n    \"legend\" : true\n}\n</code></pre>"},{"location":"User/Portal-Config/config.json/#themenconfiglayervectorfilteroption","title":"Themenconfig.Layer.Vector.filterOption","text":"<p>Filter options used by the tool <code>wfsFeatureFilter</code>.</p> Name Required Type Default Description Expert fieldName yes String Attribute name to filter by. false filterName yes String Filter name in the tool. false filterString yes String[] Array of attribute names filtering by is enabled. Using <code>\"*\"</code> will allow all values. false filterType yes String Filter type. Only <code>\"combo\"</code> is supported. false <p>Example</p> <pre><code>{\n    \"fieldName\": \"myFirstAttributeToFilter\",\n    \"filterName\": \"Filter_1\",\n    \"filterString\": [\"*\", \"value1\", \"value2\"],\n    \"filterType\": \"combo\"\n}\n</code></pre>"},{"location":"User/Portal-Config/config.json/#themenconfiglayervectorvtstyle","title":"Themenconfig.Layer.Vector.vtStyle","text":"<p>Style definitions. Available for Vector Tile Layers only.</p> Name Required Type Default Description Expert id yes String Cross-service unique id. false name yes String Display name, e.g. used in the selection tool. false url yes String URL to load a style from. The linked JSON must match the Mapbox style specification. false defaultStyle no String If set <code>true</code>, this style is used initially; if no field is set <code>true</code>, the first style is used. false resolutions no Number[] Resolutions for zoom levels defined in style. If not set default resolutions from ol-mapbox-style project are used. false <p>Example</p> <pre><code>{\n    \"id\": \"UNIQUE_ID\",\n    \"name\": \"Red lines\",\n    \"url\": \"https://example.com/asdf/styles/root.json\",\n    \"defaultStyle\": true,\n    \"resolutions\": [\n        661.4579761460263,\n        264.58319045841048,\n        66.14579761460263,\n        26.458319045841044,\n        15.874991427504629,\n        10.583327618336419\n    ]\n}\n</code></pre>"},{"location":"User/Portal-Config/config.json/#datatypes","title":"Datatypes","text":"<p>This chapter defines expected data types.</p>"},{"location":"User/Portal-Config/config.json/#datatypescoordinate","title":"Datatypes.Coordinate","text":"<p>A coordinate is an array of two numbers. The first represents the easting, the second the northing.</p> <p>Example integer coordinate</p> <pre><code>[561210, 5932600]\n</code></pre> <p>Example float coordinate</p> <pre><code>[561210.1458, 5932600.12358]\n</code></pre>"},{"location":"User/Portal-Config/config.json/#datatypesextent","title":"Datatypes.Extent","text":"<p>An extent is an array of four numbers describing a rectangular scope. The rectangle is constructed from the \"lower left\" and \"upper right\" corner, so the scheme used is <code>[Easting lower left, Northing lower left, Easting upper right, Northing upper right]</code>, or <code>[minx, miny, maxx, maxy]</code>.</p> <p>Example extent</p> <pre><code>[510000.0, 5850000.0, 625000.4, 6000000.0]\n</code></pre>"},{"location":"User/Portal-Config/config.json/#datatypescustomobject","title":"Datatypes.CustomObject","text":"<p>An object containing the required contents. Parameters depend on configuration, usage, and backend components.</p>"},{"location":"User/Portal-Config/config.json/#datatypeslayerid","title":"Datatypes.LayerId","text":"<p>A string that refers to a layer id from the services-internet.json. In the example, the ID \"1711\" is used to refer to the layer \"Krankenh\u00e4user\" in the services-internet.json of the city of Hamburg.</p> <p>Example LayerId <pre><code>\"1711\"\n</code></pre></p>"},{"location":"User/Proxies/proxy/","title":"Proxy (deprecated)","text":"<p>Deprecation Warning</p> <p>GDI-DE recommends setting CORS headers on the required services instead of using proxies. Hence, the mechanism to request URLs via a proxy is deprecated. For additional information, please check chapter 4.7.1 of the GDI-DE documentation.</p> <p>Various Masterportal functions send XHR requests to other domains, e.g. <code>WMS GetFeatureInfo</code> requests or calls to <code>WFS</code> and <code>CSW</code> services. These are restricted by the same-origin policy implemented in all browsers.</p> <p>For this reason, the Masterportal requires local proxies on the server it's running on for all services that are requested via XHR from another domain. URLs for such requests are translated to local proxy URLs by default; here all dots (\".\") in the URL's hostname are replaced with underscores (\"_\").</p>"},{"location":"User/Proxies/proxy/#example","title":"Example","text":"<p>Assuming a WMS server's URL is <code>https://geodienste.hamburg.de/HH-WMS-Gruenes-Netz</code>, the Masterportal translates it to <code>/geodienste_hamburg_de/HH-WMS-Gruenes-Netz</code> and uses this local address for its request.</p> <p>For this purpose a reverse proxy must be set up.</p>"},{"location":"User/Proxies/proxy/#example-for-an-apache-server","title":"Example for an Apache server","text":"<p>An Apache server proxy for the previous example should hold the following directives:</p> <pre><code>ProxyPass /geodienste_hamburg_de https://geodienste.hamburg.de\nProxyPassReverse /geodienste_hamburg_de https://geodienste.hamburg.de\n</code></pre> <p>These directives belong in the <code>Apache24\\conf\\httpd.conf</code> file and colloquially translate to</p> <p>Forward all requests to /geodienste_hamburg_de to https://geodienste-hamburg.de, and return the answer as if from /geodienste_hamburg_de.</p>"},{"location":"User/Proxies/proxyconf.json/","title":"proxyconf.json (deprecated)","text":"<p>Deprecation Warning</p> <p>GDI-DE recommends setting CORS headers on the required services instead of using proxies. Hence, the mechanism to request URLs via a proxy is deprecated. For additional information, please check chapter 4.7.1 of the GDI-DE documentation.</p> <p>This file describes the <code>proxyconf.json</code> file structure and functionality.</p>"},{"location":"User/Proxies/proxyconf.json/#why-do-i-need-a-proxy-for-my-local-development-environment","title":"Why do I need a proxy for my local development environment?","text":"<p>A proxy is required to load data from external domains. Trying to directly load such data would be blocked by the same-origin policy implemented in browsers.</p>"},{"location":"User/Proxies/proxyconf.json/#how-does-a-proxy-work","title":"How does a proxy work?","text":"<p>The proxy accepts requests to other domains in their place and handles retrieving the data, returning the results to the browser. Hereby the issues arising from the same-origin policy are circumvented.</p> <p>The file <code>proxyconf_example.json</code> (resp. <code>proxyconf.json</code>) describes to which domain the server running at localhost is supposed to forward requests.</p>"},{"location":"User/Proxies/proxyconf.json/#how-to-configure-the-masterportal-proxy","title":"How to configure the Masterportal proxy?","text":"<p>The following example shows a Masterportal proxy configuration that allows using the Hamburg services via <code>geodienste.hamburg.de</code> in your local development environment.</p> <p>Example <pre><code>{\n  \"/geodienste_hamburg_de\": {\n    \"target\": \"http://geodienste.hamburg.de\",\n    \"pathRewrite\": {\n      \"^/geodienste_hamburg_de\": \"\"\n    },\n    \"agent\": \"\"\n  }\n}\n</code></pre></p> <p>The first line of the object holds the domain name rewritten by the Masterportal for the request to <code>geodienste.hamburg.de</code>. This key is used to decide how the proxy is to handle the incoming request. The object values can be used as follows:</p> <ol> <li>target: Domain the request is to be forwarded to.</li> <li>pathRewrite: Contains a replacement rule to remove the previously rewritten domain from the request.</li> <li>agent: Used to reach an internet address from behind an intranet corporate proxy. This value is automatically filled on server start from the system environment (process.env).</li> <li>Further parameters are listed on https://webpack.js.org/.</li> </ol> <p>In Hamburg, we use a reverse proxy on one of our servers to avoid replicating the pathRewrite rules to each separate local development environment. In that scenario, another request to the actual domain is handled by the reverse proxy itself, and the rules only have to be kept on that single server.</p>"}]}